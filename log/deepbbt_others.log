nohup: ignoring input
===== task: yelpp start! =====
===== seed: 8 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset yelp (/home/qingyang/.cache/huggingface/datasets/yelp/default/0.0.0/a4dda7d4e2d12dfffa7e8cc4fd17f9a5206742c29be7ffc812e8331a4ce55799)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5110.33ex/s]
{'text': 'I took my car to them to get the AC evac\'d and refilled with freon. The guy who did it overfilled it so the compressor seized up. I paid them $82 for this crap job. When I went back to them they said they couldn\'t do anything about it and tried to shunt me to some mechanic they \\""work with\\"", along with a coupon, which makes me suspect there\'s shenanigans going on between these two businesses.  \\n\\nNow I\'m looking at paying at least another $750 to get my AC repaired, with no apology or refund from Jiffy Lube for breaking my system. The company hasn\'t even responded to the email I wrote them after the last visit. I won\'t be going to their \\""friend\\"" for repairs, that\'s for sure! \\n\\nI\'ve been taking cars to this Jiffy Lube for years and am VERY disappointed that they would treat a long-time customer like this. What happened, Jiffy Lube? You used to be cool!\\n\\nAnyway, don\'t take your car here. They\'ll break it.', 'labels': 0, 'input_text': 'Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International\'d Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . I took my car to them to get the AC evac\'d and refilled with freon. The guy who did it overfilled it so the compressor seized up. I paid them $82 for this crap job. When I went back to them they said they couldn\'t do anything about it and tried to shunt me to some mechanic they \\""work with\\"", along with a coupon, which makes me suspect there\'s shenanigans going on between these two businesses.    Now I\'m looking at paying at least another $750 to get my AC repaired, with no apology or refund from Jiffy Lube for breaking my system. The company hasn\'t even responded to the email I wrote them after the last visit. I won\'t be going to their \\""friend\\"" for repairs, that\'s for sure!   I\'ve been taking cars to this Jiffy Lube for years and am VERY disappointed that they would treat a long-time customer like this. What happened, Jiffy Lube? You used to be cool!  Anyway, don\'t take your car here. They\'ll break it. .', 'target_text': 'bad'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 11.92ba/s]
Using custom data configuration default
Reusing dataset yelp (/home/qingyang/.cache/huggingface/datasets/yelp/default/0.0.0/a4dda7d4e2d12dfffa7e8cc4fd17f9a5206742c29be7ffc812e8331a4ce55799)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5122.81ex/s]
{'text': "I find this place boring. It's entertaining sure but I expected more figuring so many people talk about it. All you do is jump around on a thousand trampolines. Not for toddlers I don't think. More for older kids. We stayed a little then came to monkey joes. I find it to be a lot more fun and entertaining. Definitely keeps my son busy for quite a few hours.", 'labels': 0, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . I find this place boring. It's entertaining sure but I expected more figuring so many people talk about it. All you do is jump around on a thousand trampolines. Not for toddlers I don't think. More for older kids. We stayed a little then came to monkey joes. I find it to be a lot more fun and entertaining. Definitely keeps my son busy for quite a few hours. .", 'target_text': 'bad'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 16.72ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 283      | 10999  |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 138      | 10999  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0091, std=0.8556, min=-16.6178, max=17.5949
 - After clipping (round 1): mu=-0.0080, std=0.7287, min=-2.5759, max=2.5577
 - After clipping (round 2): mu=-0.0072, std=0.7229, min=-2.1942, max=2.1782
 - After clipping (round 3): mu=-0.0072, std=0.7226, min=-2.1761, max=2.1616
 - After clipping (round 4): mu=-0.0072, std=0.7226, min=-2.1751, max=2.1607
 - After clipping (round 5): mu=-0.0072, std=0.7226, min=-2.1750, max=2.1607
 - Random Projection: mu=0.0000, std=0.0323
[Layer 2]
 - Before clipping: mu=-0.0300, std=0.8788, min=-20.0959, max=17.7554
 - After clipping (round 1): mu=-0.0213, std=0.6799, min=-2.6664, max=2.6064
 - After clipping (round 2): mu=-0.0205, std=0.6705, min=-2.0611, max=2.0184
 - After clipping (round 3): mu=-0.0205, std=0.6700, min=-2.0322, max=1.9911
 - After clipping (round 4): mu=-0.0205, std=0.6699, min=-2.0304, max=1.9895
 - After clipping (round 5): mu=-0.0205, std=0.6699, min=-2.0303, max=1.9894
 - Random Projection: mu=0.0000, std=0.0300
[Layer 3]
 - Before clipping: mu=-0.0322, std=0.9150, min=-21.1011, max=15.8544
 - After clipping (round 1): mu=-0.0193, std=0.6541, min=-2.7771, max=2.7128
 - After clipping (round 2): mu=-0.0187, std=0.6405, min=-1.9817, max=1.9431
 - After clipping (round 3): mu=-0.0187, std=0.6396, min=-1.9403, max=1.9029
 - After clipping (round 4): mu=-0.0187, std=0.6395, min=-1.9375, max=1.9002
 - After clipping (round 5): mu=-0.0187, std=0.6395, min=-1.9373, max=1.9000
 - Random Projection: mu=0.0000, std=0.0286
[Layer 4]
 - Before clipping: mu=-0.0354, std=0.9234, min=-25.3791, max=12.2512
 - After clipping (round 1): mu=-0.0195, std=0.6548, min=-2.8056, max=2.7347
 - After clipping (round 2): mu=-0.0187, std=0.6401, min=-1.9839, max=1.9449
 - After clipping (round 3): mu=-0.0186, std=0.6390, min=-1.9391, max=1.9017
 - After clipping (round 4): mu=-0.0186, std=0.6389, min=-1.9357, max=1.8984
 - After clipping (round 5): mu=-0.0186, std=0.6389, min=-1.9354, max=1.8982
 - Random Projection: mu=0.0000, std=0.0286
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9453, min=-26.9483, max=10.3813
 - After clipping (round 1): mu=-0.0213, std=0.6655, min=-2.8751, max=2.7969
 - After clipping (round 2): mu=-0.0202, std=0.6497, min=-2.0179, max=1.9753
 - After clipping (round 3): mu=-0.0200, std=0.6484, min=-1.9692, max=1.9289
 - After clipping (round 4): mu=-0.0200, std=0.6483, min=-1.9652, max=1.9252
 - After clipping (round 5): mu=-0.0200, std=0.6483, min=-1.9649, max=1.9249
 - Random Projection: mu=0.0000, std=0.0290
[Layer 6]
 - Before clipping: mu=-0.0449, std=0.9610, min=-28.5151, max=8.4545
 - After clipping (round 1): mu=-0.0248, std=0.6438, min=-2.9280, max=2.8381
 - After clipping (round 2): mu=-0.0235, std=0.6242, min=-1.9562, max=1.9066
 - After clipping (round 3): mu=-0.0234, std=0.6225, min=-1.8962, max=1.8492
 - After clipping (round 4): mu=-0.0234, std=0.6223, min=-1.8907, max=1.8440
 - After clipping (round 5): mu=-0.0234, std=0.6223, min=-1.8902, max=1.8435
 - Random Projection: mu=0.0000, std=0.0278
[Layer 7]
 - Before clipping: mu=-0.0406, std=0.9769, min=-29.8676, max=8.8468
 - After clipping (round 1): mu=-0.0184, std=0.6126, min=-2.9714, max=2.8902
 - After clipping (round 2): mu=-0.0173, std=0.5886, min=-1.8561, max=1.8192
 - After clipping (round 3): mu=-0.0172, std=0.5862, min=-1.7831, max=1.7485
 - After clipping (round 4): mu=-0.0172, std=0.5859, min=-1.7757, max=1.7412
 - After clipping (round 5): mu=-0.0172, std=0.5859, min=-1.7749, max=1.7405
 - Random Projection: mu=0.0000, std=0.0262
[Layer 8]
 - Before clipping: mu=-0.0430, std=0.9943, min=-31.0894, max=9.7595
 - After clipping (round 1): mu=-0.0197, std=0.5901, min=-3.0259, max=2.9399
 - After clipping (round 2): mu=-0.0179, std=0.5586, min=-1.7899, max=1.7504
 - After clipping (round 3): mu=-0.0177, std=0.5549, min=-1.6937, max=1.6578
 - After clipping (round 4): mu=-0.0177, std=0.5544, min=-1.6824, max=1.6470
 - After clipping (round 5): mu=-0.0177, std=0.5544, min=-1.6810, max=1.6456
 - Random Projection: mu=0.0000, std=0.0248
[Layer 9]
 - Before clipping: mu=-0.0427, std=0.9893, min=-30.5972, max=10.3173
 - After clipping (round 1): mu=-0.0195, std=0.5508, min=-3.0105, max=2.9251
 - After clipping (round 2): mu=-0.0176, std=0.5166, min=-1.6719, max=1.6330
 - After clipping (round 3): mu=-0.0174, std=0.5124, min=-1.5673, max=1.5322
 - After clipping (round 4): mu=-0.0173, std=0.5118, min=-1.5545, max=1.5198
 - After clipping (round 5): mu=-0.0173, std=0.5118, min=-1.5528, max=1.5182
 - Random Projection: mu=0.0000, std=0.0229
[Layer 10]
 - Before clipping: mu=-0.0364, std=0.9939, min=-30.8933, max=10.8835
 - After clipping (round 1): mu=-0.0132, std=0.5418, min=-3.0182, max=2.9454
 - After clipping (round 2): mu=-0.0108, std=0.5060, min=-1.6386, max=1.6122
 - After clipping (round 3): mu=-0.0105, std=0.5017, min=-1.5288, max=1.5072
 - After clipping (round 4): mu=-0.0104, std=0.5011, min=-1.5155, max=1.4946
 - After clipping (round 5): mu=-0.0104, std=0.5011, min=-1.5138, max=1.4929
 - Random Projection: mu=0.0000, std=0.0224
[Layer 11]
 - Before clipping: mu=-0.0337, std=0.9518, min=-29.3182, max=10.8069
 - After clipping (round 1): mu=-0.0118, std=0.5293, min=-2.8891, max=2.8217
 - After clipping (round 2): mu=-0.0098, std=0.4967, min=-1.5997, max=1.5761
 - After clipping (round 3): mu=-0.0095, std=0.4928, min=-1.4997, max=1.4802
 - After clipping (round 4): mu=-0.0095, std=0.4924, min=-1.4880, max=1.4690
 - After clipping (round 5): mu=-0.0095, std=0.4923, min=-1.4866, max=1.4676
 - Random Projection: mu=0.0000, std=0.0220
[Layer 12]
 - Before clipping: mu=-0.0434, std=0.9691, min=-29.9723, max=10.5328
 - After clipping (round 1): mu=-0.0215, std=0.5340, min=-2.9506, max=2.8637
 - After clipping (round 2): mu=-0.0194, std=0.5013, min=-1.6235, max=1.5805
 - After clipping (round 3): mu=-0.0192, std=0.4973, min=-1.5234, max=1.4846
 - After clipping (round 4): mu=-0.0191, std=0.4968, min=-1.5112, max=1.4729
 - After clipping (round 5): mu=-0.0191, std=0.4968, min=-1.5096, max=1.4714
 - Random Projection: mu=0.0000, std=0.0222
[Layer 13]
 - Before clipping: mu=-0.0438, std=0.9764, min=-30.1076, max=10.6774
 - After clipping (round 1): mu=-0.0228, std=0.5649, min=-2.9731, max=2.8854
 - After clipping (round 2): mu=-0.0212, std=0.5376, min=-1.7176, max=1.6720
 - After clipping (round 3): mu=-0.0211, std=0.5346, min=-1.6341, max=1.5916
 - After clipping (round 4): mu=-0.0211, std=0.5342, min=-1.6249, max=1.5827
 - After clipping (round 5): mu=-0.0211, std=0.5342, min=-1.6238, max=1.5817
 - Random Projection: mu=0.0000, std=0.0239
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9820, min=-30.4858, max=10.6063
 - After clipping (round 1): mu=-0.0219, std=0.5693, min=-2.9888, max=2.9034
 - After clipping (round 2): mu=-0.0206, std=0.5451, min=-1.7299, max=1.6861
 - After clipping (round 3): mu=-0.0205, std=0.5425, min=-1.6559, max=1.6147
 - After clipping (round 4): mu=-0.0205, std=0.5422, min=-1.6481, max=1.6071
 - After clipping (round 5): mu=-0.0205, std=0.5422, min=-1.6472, max=1.6063
 - Random Projection: mu=0.0000, std=0.0242
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9951, min=-27.9411, max=11.2477
 - After clipping (round 1): mu=-0.0162, std=0.5661, min=-3.0274, max=2.9434
 - After clipping (round 2): mu=-0.0145, std=0.5380, min=-1.7146, max=1.6822
 - After clipping (round 3): mu=-0.0144, std=0.5350, min=-1.6287, max=1.5996
 - After clipping (round 4): mu=-0.0144, std=0.5346, min=-1.6194, max=1.5906
 - After clipping (round 5): mu=-0.0144, std=0.5346, min=-1.6183, max=1.5895
 - Random Projection: mu=0.0000, std=0.0239
[Layer 16]
 - Before clipping: mu=-0.0329, std=0.9995, min=-31.5353, max=11.8187
 - After clipping (round 1): mu=-0.0043, std=0.5574, min=-3.0314, max=2.9655
 - After clipping (round 2): mu=-0.0028, std=0.5304, min=-1.6764, max=1.6678
 - After clipping (round 3): mu=-0.0026, std=0.5276, min=-1.5939, max=1.5884
 - After clipping (round 4): mu=-0.0026, std=0.5273, min=-1.5856, max=1.5803
 - After clipping (round 5): mu=-0.0026, std=0.5273, min=-1.5847, max=1.5794
 - Random Projection: mu=0.0000, std=0.0236
[Layer 17]
 - Before clipping: mu=-0.0315, std=0.9743, min=-30.3725, max=12.2246
 - After clipping (round 1): mu=-0.0036, std=0.5426, min=-2.9544, max=2.8914
 - After clipping (round 2): mu=-0.0027, std=0.5162, min=-1.6313, max=1.6241
 - After clipping (round 3): mu=-0.0026, std=0.5138, min=-1.5513, max=1.5460
 - After clipping (round 4): mu=-0.0026, std=0.5135, min=-1.5439, max=1.5387
 - After clipping (round 5): mu=-0.0026, std=0.5135, min=-1.5432, max=1.5380
 - Random Projection: mu=0.0000, std=0.0230
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9726, min=-30.4900, max=11.9284
 - After clipping (round 1): mu=-0.0036, std=0.5445, min=-2.9484, max=2.8872
 - After clipping (round 2): mu=-0.0033, std=0.5155, min=-1.6372, max=1.6300
 - After clipping (round 3): mu=-0.0034, std=0.5126, min=-1.5499, max=1.5433
 - After clipping (round 4): mu=-0.0034, std=0.5123, min=-1.5411, max=1.5344
 - After clipping (round 5): mu=-0.0034, std=0.5122, min=-1.5402, max=1.5334
 - Random Projection: mu=0.0000, std=0.0229
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9603, min=-29.5271, max=11.3508
 - After clipping (round 1): mu=-0.0038, std=0.5478, min=-2.9105, max=2.8513
 - After clipping (round 2): mu=-0.0039, std=0.5182, min=-1.6473, max=1.6397
 - After clipping (round 3): mu=-0.0040, std=0.5152, min=-1.5584, max=1.5506
 - After clipping (round 4): mu=-0.0040, std=0.5148, min=-1.5494, max=1.5415
 - After clipping (round 5): mu=-0.0040, std=0.5148, min=-1.5484, max=1.5405
 - Random Projection: mu=0.0000, std=0.0230
[Layer 20]
 - Before clipping: mu=-0.0286, std=0.9454, min=-28.9283, max=10.8149
 - After clipping (round 1): mu=-0.0044, std=0.5506, min=-2.8647, max=2.8075
 - After clipping (round 2): mu=-0.0047, std=0.5217, min=-1.6563, max=1.6475
 - After clipping (round 3): mu=-0.0048, std=0.5187, min=-1.5697, max=1.5603
 - After clipping (round 4): mu=-0.0048, std=0.5184, min=-1.5609, max=1.5513
 - After clipping (round 5): mu=-0.0048, std=0.5183, min=-1.5600, max=1.5503
 - Random Projection: mu=0.0000, std=0.0232
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9894, min=-31.2400, max=10.3655
 - After clipping (round 1): mu=-0.0081, std=0.5551, min=-3.0014, max=2.9351
 - After clipping (round 2): mu=-0.0086, std=0.5225, min=-1.6735, max=1.6574
 - After clipping (round 3): mu=-0.0087, std=0.5189, min=-1.5760, max=1.5589
 - After clipping (round 4): mu=-0.0087, std=0.5185, min=-1.5654, max=1.5481
 - After clipping (round 5): mu=-0.0087, std=0.5185, min=-1.5642, max=1.5468
 - Random Projection: mu=0.0000, std=0.0232
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0069, min=-32.0982, max=10.0430
 - After clipping (round 1): mu=-0.0158, std=0.5352, min=-3.0620, max=2.9793
 - After clipping (round 2): mu=-0.0163, std=0.5008, min=-1.6213, max=1.5897
 - After clipping (round 3): mu=-0.0164, std=0.4970, min=-1.5186, max=1.4861
 - After clipping (round 4): mu=-0.0164, std=0.4966, min=-1.5075, max=1.4747
 - After clipping (round 5): mu=-0.0164, std=0.4965, min=-1.5061, max=1.4733
 - Random Projection: mu=0.0000, std=0.0222
[Layer 23]
 - Before clipping: mu=-0.0310, std=1.0102, min=-32.4153, max=9.6947
 - After clipping (round 1): mu=-0.0056, std=0.5123, min=-3.0615, max=2.9994
 - After clipping (round 2): mu=-0.0057, std=0.4772, min=-1.5426, max=1.5315
 - After clipping (round 3): mu=-0.0059, std=0.4731, min=-1.4373, max=1.4258
 - After clipping (round 4): mu=-0.0059, std=0.4725, min=-1.4251, max=1.4133
 - After clipping (round 5): mu=-0.0059, std=0.4725, min=-1.4235, max=1.4117
 - Random Projection: mu=0.0000, std=0.0211
Random projections initialized.
[# API Calls 50] loss: 0.2138. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 100] loss: 0.2032. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3339. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 150] loss: 0.1843. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 200] loss: 0.1779. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3386. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 250] loss: 0.1732. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 300] loss: 0.1666. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.328. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 350] loss: 0.1636. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 400] loss: 0.1607. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3198. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 450] loss: 0.1593. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 500] loss: 0.1577. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3166. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 550] loss: 0.1617. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 600] loss: 0.159. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3215. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 650] loss: 0.1528. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 700] loss: 0.1487. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3082. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 750] loss: 0.1473. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 800] loss: 0.1441. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3015. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 850] loss: 0.1415. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 900] loss: 0.1406. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3025. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 950] loss: 0.14. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1000] loss: 0.1411. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2963. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 1050] loss: 0.1371. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1100] loss: 0.1372. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3086. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 1150] loss: 0.1289. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1200] loss: 0.1308. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3043. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 1250] loss: 0.1293. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1300] loss: 0.1273. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2946. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1350] loss: 0.1242. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1400] loss: 0.1236. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.295. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1450] loss: 0.1228. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1500] loss: 0.1242. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2844. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1550] loss: 0.1199. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1600] loss: 0.1177. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3024. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1650] loss: 0.1142. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1700] loss: 0.1125. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2963. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1750] loss: 0.106. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1800] loss: 0.1055. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2863. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1850] loss: 0.1046. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1900] loss: 0.1037. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2796. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1950] loss: 0.1039. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2000] loss: 0.1041. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.286. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 2050] loss: 0.1037. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2100] loss: 0.1009. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2704. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 2150] loss: 0.0921. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2200] loss: 0.0858. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2763. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 2250] loss: 0.0851. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2300] loss: 0.0843. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2743. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 2350] loss: 0.0818. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2400] loss: 0.0807. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2701. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 2450] loss: 0.0827. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2500] loss: 0.0785. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2929. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 2550] loss: 0.0812. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2600] loss: 0.0805. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.289. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2650] loss: 0.079. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2700] loss: 0.0747. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2981. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 2750] loss: 0.0735. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2800] loss: 0.0709. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2977. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 2850] loss: 0.0683. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2900] loss: 0.0669. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2908. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 2950] loss: 0.0726. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3000] loss: 0.0699. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2813. Dev perf: 0.8125. Best dev perf: 0.9062
********* Done *********
[# API Calls 3050] loss: 0.0596. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3100] loss: 0.056. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3059. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 3150] loss: 0.0556. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3200] loss: 0.0528. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2987. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 3250] loss: 0.0524. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3300] loss: 0.0498. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2986. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3350] loss: 0.05. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3400] loss: 0.0496. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.29. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 3450] loss: 0.0448. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3500] loss: 0.0475. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3305. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 3550] loss: 0.0451. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3600] loss: 0.0411. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3059. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 3650] loss: 0.04. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3700] loss: 0.0366. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.318. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 3750] loss: 0.0351. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.0346. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3243. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 3850] loss: 0.034. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3900] loss: 0.0368. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3147. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 3950] loss: 0.0359. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4000] loss: 0.0368. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3207. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 4050] loss: 0.0336. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4100] loss: 0.0315. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3216. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 4150] loss: 0.029. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.0283. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3237. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 4250] loss: 0.027. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0263. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3013. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 4350] loss: 0.0271. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.0253. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2917. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 4450] loss: 0.0248. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4500] loss: 0.0221. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3232. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 4550] loss: 0.02. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.0193. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.31. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 4650] loss: 0.0164. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.0162. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3029. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 4750] loss: 0.0159. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.0159. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3087. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 4850] loss: 0.0168. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.017. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3215. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4950] loss: 0.0173. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.0167. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3419. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 5050] loss: 0.0161. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.0144. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3598. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 5150] loss: 0.0134. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0132. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.362. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 5250] loss: 0.013. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0131. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3624. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 5350] loss: 0.0105. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.0104. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3294. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 5450] loss: 0.008. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0085. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.315. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 5550] loss: 0.0075. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0073. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3724. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 5650] loss: 0.0068. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0062. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3668. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 5750] loss: 0.0058. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0078. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4011. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 5850] loss: 0.008. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0064. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4062. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 5950] loss: 0.0063. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0061. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3893. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6050] loss: 0.0051. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0045. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3856. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6150] loss: 0.0038. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0038. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4077. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6250] loss: 0.004. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0043. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4644. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 6350] loss: 0.0037. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.003. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4009. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6450] loss: 0.0025. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0015. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4674. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6550] loss: 0.0015. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0012. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4624. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6650] loss: 0.0012. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0011. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4714. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6750] loss: 0.0015. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0014. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4355. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6850] loss: 0.0009. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4121. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6950] loss: 0.0008. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0007. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3957. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 7050] loss: 0.0005. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0006. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4326. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 7150] loss: 0.0005. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0004. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4051. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 7250] loss: 0.0006. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0005. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4475. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 7350] loss: 0.0005. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0004. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4843. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 7450] loss: 0.0003. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0002. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5393. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 7550] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6172. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 7650] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 152.76708250045778 (mins)
===== seed: 8 finished! =====
===== seed: 13 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset yelp (/home/qingyang/.cache/huggingface/datasets/yelp/default/0.0.0/a4dda7d4e2d12dfffa7e8cc4fd17f9a5206742c29be7ffc812e8331a4ce55799)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5502.31ex/s]
{'text': "This time, I only ordered a boba milk tea, and I was completely underwhelmed. The tea itself tasted like my first attempt making my own milk tea when I was in middle school; I had to concentrate extremely hard to discern the faint tea flavor.\\n\\nHowever, the boba's texture was definitely on point.", 'labels': 0, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . This time, I only ordered a boba milk tea, and I was completely underwhelmed. The tea itself tasted like my first attempt making my own milk tea when I was in middle school; I had to concentrate extremely hard to discern the faint tea flavor.  However, the boba's texture was definitely on point. .", 'target_text': 'bad'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 11.78ba/s]
Using custom data configuration default
Reusing dataset yelp (/home/qingyang/.cache/huggingface/datasets/yelp/default/0.0.0/a4dda7d4e2d12dfffa7e8cc4fd17f9a5206742c29be7ffc812e8331a4ce55799)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5849.80ex/s]
{'text': 'good store', 'labels': 0, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . good store .", 'target_text': 'bad'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 19.51ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 121      | 10999  |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 57       | 10999  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0091, std=0.8562, min=-16.5970, max=17.4834
 - After clipping (round 1): mu=-0.0080, std=0.7310, min=-2.5777, max=2.5595
 - After clipping (round 2): mu=-0.0073, std=0.7254, min=-2.2011, max=2.1851
 - After clipping (round 3): mu=-0.0072, std=0.7251, min=-2.1836, max=2.1690
 - After clipping (round 4): mu=-0.0072, std=0.7251, min=-2.1826, max=2.1682
 - After clipping (round 5): mu=-0.0072, std=0.7251, min=-2.1826, max=2.1681
 - Random Projection: mu=0.0000, std=0.0324
[Layer 2]
 - Before clipping: mu=-0.0300, std=0.8789, min=-19.9215, max=17.7748
 - After clipping (round 1): mu=-0.0213, std=0.6838, min=-2.6666, max=2.6065
 - After clipping (round 2): mu=-0.0205, std=0.6748, min=-2.0726, max=2.0301
 - After clipping (round 3): mu=-0.0205, std=0.6743, min=-2.0450, max=2.0040
 - After clipping (round 4): mu=-0.0205, std=0.6743, min=-2.0434, max=2.0024
 - After clipping (round 5): mu=-0.0205, std=0.6743, min=-2.0433, max=2.0024
 - Random Projection: mu=0.0000, std=0.0302
[Layer 3]
 - Before clipping: mu=-0.0322, std=0.9159, min=-21.0911, max=15.6658
 - After clipping (round 1): mu=-0.0194, std=0.6649, min=-2.7801, max=2.7156
 - After clipping (round 2): mu=-0.0189, std=0.6521, min=-2.0141, max=1.9753
 - After clipping (round 3): mu=-0.0189, std=0.6512, min=-1.9752, max=1.9374
 - After clipping (round 4): mu=-0.0189, std=0.6512, min=-1.9726, max=1.9349
 - After clipping (round 5): mu=-0.0189, std=0.6512, min=-1.9725, max=1.9347
 - Random Projection: mu=0.0000, std=0.0291
[Layer 4]
 - Before clipping: mu=-0.0355, std=0.9257, min=-25.3933, max=12.8271
 - After clipping (round 1): mu=-0.0197, std=0.6745, min=-2.8126, max=2.7416
 - After clipping (round 2): mu=-0.0189, std=0.6610, min=-2.0431, max=2.0037
 - After clipping (round 3): mu=-0.0188, std=0.6600, min=-2.0020, max=1.9641
 - After clipping (round 4): mu=-0.0188, std=0.6600, min=-1.9989, max=1.9613
 - After clipping (round 5): mu=-0.0188, std=0.6600, min=-1.9987, max=1.9611
 - Random Projection: mu=0.0000, std=0.0295
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9461, min=-26.9406, max=10.4475
 - After clipping (round 1): mu=-0.0214, std=0.6806, min=-2.8773, max=2.7990
 - After clipping (round 2): mu=-0.0202, std=0.6658, min=-2.0632, max=2.0205
 - After clipping (round 3): mu=-0.0201, std=0.6646, min=-2.0175, max=1.9771
 - After clipping (round 4): mu=-0.0201, std=0.6645, min=-2.0140, max=1.9738
 - After clipping (round 5): mu=-0.0201, std=0.6645, min=-2.0137, max=1.9735
 - Random Projection: mu=0.0000, std=0.0297
[Layer 6]
 - Before clipping: mu=-0.0450, std=0.9614, min=-28.5175, max=8.5194
 - After clipping (round 1): mu=-0.0249, std=0.6603, min=-2.9292, max=2.8393
 - After clipping (round 2): mu=-0.0236, std=0.6416, min=-2.0058, max=1.9560
 - After clipping (round 3): mu=-0.0235, std=0.6400, min=-1.9485, max=1.9013
 - After clipping (round 4): mu=-0.0235, std=0.6398, min=-1.9434, max=1.8964
 - After clipping (round 5): mu=-0.0235, std=0.6398, min=-1.9429, max=1.8960
 - Random Projection: mu=0.0000, std=0.0286
[Layer 7]
 - Before clipping: mu=-0.0406, std=0.9771, min=-29.8947, max=8.5473
 - After clipping (round 1): mu=-0.0186, std=0.6242, min=-2.9720, max=2.8907
 - After clipping (round 2): mu=-0.0175, std=0.6012, min=-1.8912, max=1.8541
 - After clipping (round 3): mu=-0.0174, std=0.5990, min=-1.8211, max=1.7862
 - After clipping (round 4): mu=-0.0174, std=0.5987, min=-1.8142, max=1.7795
 - After clipping (round 5): mu=-0.0174, std=0.5987, min=-1.8135, max=1.7788
 - Random Projection: mu=0.0000, std=0.0268
[Layer 8]
 - Before clipping: mu=-0.0430, std=0.9943, min=-31.0531, max=9.9309
 - After clipping (round 1): mu=-0.0200, std=0.5979, min=-3.0258, max=2.9398
 - After clipping (round 2): mu=-0.0183, std=0.5668, min=-1.8137, max=1.7737
 - After clipping (round 3): mu=-0.0180, std=0.5632, min=-1.7186, max=1.6821
 - After clipping (round 4): mu=-0.0180, std=0.5628, min=-1.7077, max=1.6716
 - After clipping (round 5): mu=-0.0180, std=0.5627, min=-1.7063, max=1.6703
 - Random Projection: mu=0.0000, std=0.0252
[Layer 9]
 - Before clipping: mu=-0.0427, std=0.9894, min=-30.6011, max=10.4200
 - After clipping (round 1): mu=-0.0198, std=0.5535, min=-3.0110, max=2.9255
 - After clipping (round 2): mu=-0.0179, std=0.5189, min=-1.6803, max=1.6408
 - After clipping (round 3): mu=-0.0176, std=0.5147, min=-1.5747, max=1.5389
 - After clipping (round 4): mu=-0.0176, std=0.5142, min=-1.5618, max=1.5266
 - After clipping (round 5): mu=-0.0176, std=0.5141, min=-1.5602, max=1.5250
 - Random Projection: mu=0.0000, std=0.0230
[Layer 10]
 - Before clipping: mu=-0.0364, std=0.9944, min=-30.8018, max=11.0632
 - After clipping (round 1): mu=-0.0134, std=0.5375, min=-3.0195, max=2.9467
 - After clipping (round 2): mu=-0.0111, std=0.5009, min=-1.6259, max=1.5991
 - After clipping (round 3): mu=-0.0108, std=0.4964, min=-1.5137, max=1.4916
 - After clipping (round 4): mu=-0.0107, std=0.4958, min=-1.5000, max=1.4784
 - After clipping (round 5): mu=-0.0107, std=0.4957, min=-1.4982, max=1.4767
 - Random Projection: mu=0.0000, std=0.0222
[Layer 11]
 - Before clipping: mu=-0.0337, std=0.9519, min=-29.1946, max=10.8996
 - After clipping (round 1): mu=-0.0119, std=0.5245, min=-2.8892, max=2.8219
 - After clipping (round 2): mu=-0.0100, std=0.4910, min=-1.5853, max=1.5615
 - After clipping (round 3): mu=-0.0098, std=0.4870, min=-1.4832, max=1.4631
 - After clipping (round 4): mu=-0.0098, std=0.4865, min=-1.4708, max=1.4512
 - After clipping (round 5): mu=-0.0098, std=0.4864, min=-1.4692, max=1.4496
 - Random Projection: mu=0.0000, std=0.0218
[Layer 12]
 - Before clipping: mu=-0.0434, std=0.9692, min=-29.9377, max=10.9764
 - After clipping (round 1): mu=-0.0216, std=0.5290, min=-2.9511, max=2.8643
 - After clipping (round 2): mu=-0.0197, std=0.4955, min=-1.6087, max=1.5655
 - After clipping (round 3): mu=-0.0195, std=0.4913, min=-1.5061, max=1.4666
 - After clipping (round 4): mu=-0.0195, std=0.4907, min=-1.4933, max=1.4542
 - After clipping (round 5): mu=-0.0195, std=0.4906, min=-1.4916, max=1.4526
 - Random Projection: mu=0.0000, std=0.0219
[Layer 13]
 - Before clipping: mu=-0.0438, std=0.9765, min=-30.1494, max=10.8863
 - After clipping (round 1): mu=-0.0229, std=0.5591, min=-2.9732, max=2.8856
 - After clipping (round 2): mu=-0.0215, std=0.5307, min=-1.7003, max=1.6545
 - After clipping (round 3): mu=-0.0214, std=0.5276, min=-1.6138, max=1.5707
 - After clipping (round 4): mu=-0.0214, std=0.5272, min=-1.6041, max=1.5612
 - After clipping (round 5): mu=-0.0214, std=0.5271, min=-1.6029, max=1.5601
 - Random Projection: mu=0.0000, std=0.0236
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9822, min=-30.5833, max=10.6318
 - After clipping (round 1): mu=-0.0220, std=0.5633, min=-2.9893, max=2.9040
 - After clipping (round 2): mu=-0.0209, std=0.5384, min=-1.7119, max=1.6680
 - After clipping (round 3): mu=-0.0207, std=0.5357, min=-1.6360, max=1.5943
 - After clipping (round 4): mu=-0.0207, std=0.5354, min=-1.6278, max=1.5864
 - After clipping (round 5): mu=-0.0207, std=0.5354, min=-1.6269, max=1.5855
 - Random Projection: mu=0.0000, std=0.0239
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9950, min=-28.0171, max=11.8399
 - After clipping (round 1): mu=-0.0160, std=0.5607, min=-3.0270, max=2.9431
 - After clipping (round 2): mu=-0.0144, std=0.5320, min=-1.6981, max=1.6660
 - After clipping (round 3): mu=-0.0143, std=0.5288, min=-1.6104, max=1.5816
 - After clipping (round 4): mu=-0.0143, std=0.5285, min=-1.6008, max=1.5723
 - After clipping (round 5): mu=-0.0143, std=0.5284, min=-1.5997, max=1.5712
 - Random Projection: mu=0.0000, std=0.0236
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9995, min=-31.5341, max=13.0230
 - After clipping (round 1): mu=-0.0043, std=0.5550, min=-3.0315, max=2.9656
 - After clipping (round 2): mu=-0.0028, std=0.5273, min=-1.6694, max=1.6608
 - After clipping (round 3): mu=-0.0027, std=0.5245, min=-1.5848, max=1.5792
 - After clipping (round 4): mu=-0.0027, std=0.5241, min=-1.5761, max=1.5707
 - After clipping (round 5): mu=-0.0027, std=0.5241, min=-1.5751, max=1.5697
 - Random Projection: mu=0.0000, std=0.0234
[Layer 17]
 - Before clipping: mu=-0.0315, std=0.9742, min=-30.3731, max=13.2250
 - After clipping (round 1): mu=-0.0037, std=0.5399, min=-2.9540, max=2.8911
 - After clipping (round 2): mu=-0.0027, std=0.5127, min=-1.6234, max=1.6161
 - After clipping (round 3): mu=-0.0027, std=0.5100, min=-1.5409, max=1.5354
 - After clipping (round 4): mu=-0.0027, std=0.5097, min=-1.5327, max=1.5273
 - After clipping (round 5): mu=-0.0027, std=0.5097, min=-1.5319, max=1.5265
 - Random Projection: mu=0.0000, std=0.0228
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9725, min=-30.4887, max=12.7885
 - After clipping (round 1): mu=-0.0036, std=0.5428, min=-2.9482, max=2.8870
 - After clipping (round 2): mu=-0.0034, std=0.5134, min=-1.6321, max=1.6249
 - After clipping (round 3): mu=-0.0035, std=0.5103, min=-1.5436, max=1.5367
 - After clipping (round 4): mu=-0.0035, std=0.5099, min=-1.5343, max=1.5274
 - After clipping (round 5): mu=-0.0035, std=0.5099, min=-1.5333, max=1.5263
 - Random Projection: mu=0.0000, std=0.0228
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9600, min=-29.5284, max=12.2527
 - After clipping (round 1): mu=-0.0038, std=0.5456, min=-2.9096, max=2.8504
 - After clipping (round 2): mu=-0.0039, std=0.5161, min=-1.6407, max=1.6331
 - After clipping (round 3): mu=-0.0039, std=0.5131, min=-1.5522, max=1.5444
 - After clipping (round 4): mu=-0.0040, std=0.5127, min=-1.5432, max=1.5353
 - After clipping (round 5): mu=-0.0040, std=0.5127, min=-1.5422, max=1.5343
 - Random Projection: mu=0.0000, std=0.0229
[Layer 20]
 - Before clipping: mu=-0.0286, std=0.9451, min=-28.9287, max=11.0175
 - After clipping (round 1): mu=-0.0044, std=0.5488, min=-2.8640, max=2.8068
 - After clipping (round 2): mu=-0.0047, std=0.5195, min=-1.6508, max=1.6421
 - After clipping (round 3): mu=-0.0048, std=0.5164, min=-1.5631, max=1.5537
 - After clipping (round 4): mu=-0.0049, std=0.5161, min=-1.5542, max=1.5445
 - After clipping (round 5): mu=-0.0049, std=0.5161, min=-1.5532, max=1.5435
 - Random Projection: mu=0.0000, std=0.0231
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9894, min=-31.2405, max=10.6376
 - After clipping (round 1): mu=-0.0081, std=0.5548, min=-3.0014, max=2.9350
 - After clipping (round 2): mu=-0.0086, std=0.5221, min=-1.6725, max=1.6564
 - After clipping (round 3): mu=-0.0088, std=0.5185, min=-1.5748, max=1.5575
 - After clipping (round 4): mu=-0.0088, std=0.5181, min=-1.5642, max=1.5467
 - After clipping (round 5): mu=-0.0088, std=0.5180, min=-1.5630, max=1.5454
 - Random Projection: mu=0.0000, std=0.0232
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0069, min=-32.0973, max=10.0156
 - After clipping (round 1): mu=-0.0158, std=0.5328, min=-3.0619, max=2.9792
 - After clipping (round 2): mu=-0.0162, std=0.4985, min=-1.6142, max=1.5826
 - After clipping (round 3): mu=-0.0164, std=0.4947, min=-1.5117, max=1.4793
 - After clipping (round 4): mu=-0.0164, std=0.4943, min=-1.5005, max=1.4678
 - After clipping (round 5): mu=-0.0164, std=0.4942, min=-1.4992, max=1.4664
 - Random Projection: mu=0.0000, std=0.0221
[Layer 23]
 - Before clipping: mu=-0.0310, std=1.0102, min=-32.4164, max=10.0178
 - After clipping (round 1): mu=-0.0056, std=0.5110, min=-3.0616, max=2.9995
 - After clipping (round 2): mu=-0.0057, std=0.4760, min=-1.5386, max=1.5274
 - After clipping (round 3): mu=-0.0059, std=0.4719, min=-1.4336, max=1.4222
 - After clipping (round 4): mu=-0.0059, std=0.4713, min=-1.4215, max=1.4097
 - After clipping (round 5): mu=-0.0059, std=0.4713, min=-1.4200, max=1.4081
 - Random Projection: mu=0.0000, std=0.0211
Random projections initialized.
[# API Calls 50] loss: 0.3608. Current perf: 0.8438. Best perf so far: 0.875
[# API Calls 100] loss: 0.3505. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3587. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 150] loss: 0.3292. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 200] loss: 0.3127. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3489. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 250] loss: 0.3074. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 300] loss: 0.304. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3421. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 350] loss: 0.2982. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 400] loss: 0.297. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3438. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 450] loss: 0.2949. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 500] loss: 0.3002. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3426. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 550] loss: 0.2935. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 600] loss: 0.2943. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3282. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 650] loss: 0.2872. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 700] loss: 0.2912. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3441. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 750] loss: 0.2828. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 800] loss: 0.2793. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3309. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 850] loss: 0.2727. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 900] loss: 0.2716. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3296. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 950] loss: 0.2697. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 1000] loss: 0.2669. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3233. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1050] loss: 0.2625. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1100] loss: 0.2519. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3153. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1150] loss: 0.251. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1200] loss: 0.249. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3308. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1250] loss: 0.2448. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1300] loss: 0.2403. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3262. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1350] loss: 0.238. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1400] loss: 0.2361. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3267. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1450] loss: 0.2372. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1500] loss: 0.2408. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3321. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1550] loss: 0.234. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1600] loss: 0.2262. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3406. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1650] loss: 0.2209. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1700] loss: 0.2178. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3219. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1750] loss: 0.214. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1800] loss: 0.2081. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3205. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1850] loss: 0.2019. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1900] loss: 0.1993. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3204. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1950] loss: 0.1944. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2000] loss: 0.1888. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3147. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 2050] loss: 0.1838. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2100] loss: 0.1817. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3133. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 2150] loss: 0.176. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2200] loss: 0.1735. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3094. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 2250] loss: 0.1642. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2300] loss: 0.158. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3114. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 2350] loss: 0.1536. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2400] loss: 0.1525. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3121. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 2450] loss: 0.1539. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2500] loss: 0.1508. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3184. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 2550] loss: 0.1466. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2600] loss: 0.1443. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.325. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 2650] loss: 0.1409. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2700] loss: 0.1408. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3053. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 2750] loss: 0.1378. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2800] loss: 0.1337. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3025. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 2850] loss: 0.1322. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2900] loss: 0.1311. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2941. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 2950] loss: 0.1331. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3000] loss: 0.1282. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3086. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3050] loss: 0.1253. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3100] loss: 0.1255. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.318. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3150] loss: 0.1172. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3200] loss: 0.1156. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3179. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3250] loss: 0.1125. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3300] loss: 0.1069. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3159. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3350] loss: 0.1028. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3400] loss: 0.1079. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.301. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3450] loss: 0.1041. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3500] loss: 0.0962. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.33. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 3550] loss: 0.0891. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3600] loss: 0.0881. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3422. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3650] loss: 0.0843. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3700] loss: 0.0811. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3514. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3750] loss: 0.0818. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.0778. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3426. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3850] loss: 0.0698. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3900] loss: 0.0768. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3302. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3950] loss: 0.0872. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4000] loss: 0.0693. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3635. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 4050] loss: 0.0688. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4100] loss: 0.0656. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3611. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 4150] loss: 0.0607. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.0605. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3629. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 4250] loss: 0.0577. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0569. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3575. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 4350] loss: 0.0556. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.051. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3616. Dev perf: 0.75. Best dev perf: 0.8438
********* Done *********
[# API Calls 4450] loss: 0.0547. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4500] loss: 0.0471. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3742. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 4550] loss: 0.0448. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.047. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3598. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 4650] loss: 0.0437. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.039. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3421. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 4750] loss: 0.0355. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.0381. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3749. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 4850] loss: 0.0469. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.036. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3602. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 4950] loss: 0.0358. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.0332. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3813. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 5050] loss: 0.0302. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.0349. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.399. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5150] loss: 0.0275. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0282. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4093. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5250] loss: 0.0251. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0226. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3872. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5350] loss: 0.0302. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.0259. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3954. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5450] loss: 0.0261. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0268. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4163. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5550] loss: 0.0267. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0269. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4317. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 5650] loss: 0.0233. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0224. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4756. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 5750] loss: 0.0207. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0225. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4632. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 5850] loss: 0.0266. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0414. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4482. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5950] loss: 0.017. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0173. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3743. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 6050] loss: 0.0167. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0157. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.394. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 6150] loss: 0.0133. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.013. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4469. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 6250] loss: 0.0131. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0363. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4856. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 6350] loss: 0.0222. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.0152. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4472. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 6450] loss: 0.0138. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0154. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4474. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 6550] loss: 0.0131. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0122. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4929. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 6650] loss: 0.0108. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0102. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5045. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 6750] loss: 0.021. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0074. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4406. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 6850] loss: 0.1197. Current perf: 0.9062. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0375. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4294. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 6950] loss: 0.0097. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.009. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4227. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 7050] loss: 0.0074. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0062. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4491. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 7150] loss: 0.0071. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0076. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4476. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 7250] loss: 0.0168. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0606. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4835. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 7350] loss: 0.0083. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.009. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.38. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 7450] loss: 0.015. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0073. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3708. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 7550] loss: 0.0065. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0058. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4143. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 7650] loss: 0.0059. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 270.64236523707706 (mins)
===== seed: 13 finished! =====
===== seed: 42 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset yelp (/home/qingyang/.cache/huggingface/datasets/yelp/default/0.0.0/a4dda7d4e2d12dfffa7e8cc4fd17f9a5206742c29be7ffc812e8331a4ce55799)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5407.21ex/s]
{'text': "This place is one of my favorite comic shops. I actually live closer to a different one, but I drive to chandler just to go to this one. I like their selection and when they have the dollar sale you can get some ridiculous deals. The staff is ridiculously friendly and I usually always walk out with whatever I wanted. They also have some cool events from time to time and i've found their prices to be reasonable and comparable to other comic shops.", 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . This place is one of my favorite comic shops. I actually live closer to a different one, but I drive to chandler just to go to this one. I like their selection and when they have the dollar sale you can get some ridiculous deals. The staff is ridiculously friendly and I usually always walk out with whatever I wanted. They also have some cool events from time to time and i've found their prices to be reasonable and comparable to other comic shops. .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 12.62ba/s]
Using custom data configuration default
Reusing dataset yelp (/home/qingyang/.cache/huggingface/datasets/yelp/default/0.0.0/a4dda7d4e2d12dfffa7e8cc4fd17f9a5206742c29be7ffc812e8331a4ce55799)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 4627.56ex/s]
{'text': "Probably the best show we've seen so far! It's really worth it, nice theater built especially for this and the show is amazing! Try to not seat in the first 3 rows, you'll get wet. You can get drinks and popcorn, but they are pretty expensive.", 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . Probably the best show we've seen so far! It's really worth it, nice theater built especially for this and the show is amazing! Try to not seat in the first 3 rows, you'll get wet. You can get drinks and popcorn, but they are pretty expensive. .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 18.60ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 148      | 12338  |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 111      | 12338  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0090, std=0.8540, min=-16.7372, max=17.5568
 - After clipping (round 1): mu=-0.0079, std=0.7229, min=-2.5711, max=2.5531
 - After clipping (round 2): mu=-0.0072, std=0.7167, min=-2.1765, max=2.1607
 - After clipping (round 3): mu=-0.0071, std=0.7163, min=-2.1572, max=2.1429
 - After clipping (round 4): mu=-0.0071, std=0.7163, min=-2.1560, max=2.1418
 - After clipping (round 5): mu=-0.0071, std=0.7163, min=-2.1560, max=2.1418
 - Random Projection: mu=0.0000, std=0.0320
[Layer 2]
 - Before clipping: mu=-0.0299, std=0.8787, min=-20.4304, max=17.7708
 - After clipping (round 1): mu=-0.0214, std=0.6797, min=-2.6660, max=2.6061
 - After clipping (round 2): mu=-0.0206, std=0.6702, min=-2.0605, max=2.0178
 - After clipping (round 3): mu=-0.0206, std=0.6697, min=-2.0313, max=1.9901
 - After clipping (round 4): mu=-0.0206, std=0.6696, min=-2.0295, max=1.9884
 - After clipping (round 5): mu=-0.0206, std=0.6696, min=-2.0294, max=1.9883
 - Random Projection: mu=0.0000, std=0.0299
[Layer 3]
 - Before clipping: mu=-0.0321, std=0.9150, min=-21.0907, max=15.7695
 - After clipping (round 1): mu=-0.0195, std=0.6601, min=-2.7771, max=2.7128
 - After clipping (round 2): mu=-0.0189, std=0.6466, min=-1.9997, max=1.9608
 - After clipping (round 3): mu=-0.0189, std=0.6457, min=-1.9587, max=1.9208
 - After clipping (round 4): mu=-0.0189, std=0.6456, min=-1.9559, max=1.9181
 - After clipping (round 5): mu=-0.0189, std=0.6456, min=-1.9557, max=1.9179
 - Random Projection: mu=0.0000, std=0.0289
[Layer 4]
 - Before clipping: mu=-0.0354, std=0.9236, min=-25.4079, max=12.6201
 - After clipping (round 1): mu=-0.0197, std=0.6649, min=-2.8063, max=2.7354
 - After clipping (round 2): mu=-0.0189, std=0.6509, min=-2.0144, max=1.9750
 - After clipping (round 3): mu=-0.0189, std=0.6499, min=-1.9718, max=1.9339
 - After clipping (round 4): mu=-0.0189, std=0.6498, min=-1.9686, max=1.9309
 - After clipping (round 5): mu=-0.0189, std=0.6498, min=-1.9683, max=1.9306
 - Random Projection: mu=0.0000, std=0.0291
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9451, min=-26.9576, max=10.3869
 - After clipping (round 1): mu=-0.0213, std=0.6723, min=-2.8742, max=2.7961
 - After clipping (round 2): mu=-0.0203, std=0.6570, min=-2.0383, max=1.9957
 - After clipping (round 3): mu=-0.0201, std=0.6558, min=-1.9913, max=1.9508
 - After clipping (round 4): mu=-0.0201, std=0.6557, min=-1.9876, max=1.9473
 - After clipping (round 5): mu=-0.0201, std=0.6557, min=-1.9873, max=1.9470
 - Random Projection: mu=0.0000, std=0.0293
[Layer 6]
 - Before clipping: mu=-0.0450, std=0.9610, min=-28.4890, max=8.5866
 - After clipping (round 1): mu=-0.0250, std=0.6545, min=-2.9278, max=2.8379
 - After clipping (round 2): mu=-0.0238, std=0.6355, min=-1.9885, max=1.9386
 - After clipping (round 3): mu=-0.0236, std=0.6339, min=-1.9304, max=1.8829
 - After clipping (round 4): mu=-0.0236, std=0.6337, min=-1.9253, max=1.8780
 - After clipping (round 5): mu=-0.0236, std=0.6337, min=-1.9248, max=1.8776
 - Random Projection: mu=0.0000, std=0.0283
[Layer 7]
 - Before clipping: mu=-0.0406, std=0.9769, min=-29.8582, max=8.2070
 - After clipping (round 1): mu=-0.0188, std=0.6253, min=-2.9713, max=2.8900
 - After clipping (round 2): mu=-0.0176, std=0.6020, min=-1.8946, max=1.8571
 - After clipping (round 3): mu=-0.0175, std=0.5997, min=-1.8235, max=1.7883
 - After clipping (round 4): mu=-0.0175, std=0.5995, min=-1.8166, max=1.7816
 - After clipping (round 5): mu=-0.0175, std=0.5994, min=-1.8159, max=1.7809
 - Random Projection: mu=0.0000, std=0.0268
[Layer 8]
 - Before clipping: mu=-0.0430, std=0.9942, min=-31.0823, max=9.4056
 - After clipping (round 1): mu=-0.0201, std=0.5980, min=-3.0257, max=2.9397
 - After clipping (round 2): mu=-0.0184, std=0.5669, min=-1.8142, max=1.7740
 - After clipping (round 3): mu=-0.0182, std=0.5634, min=-1.7191, max=1.6824
 - After clipping (round 4): mu=-0.0181, std=0.5629, min=-1.7082, max=1.6719
 - After clipping (round 5): mu=-0.0181, std=0.5629, min=-1.7069, max=1.6706
 - Random Projection: mu=0.0000, std=0.0252
[Layer 9]
 - Before clipping: mu=-0.0427, std=0.9894, min=-30.6713, max=10.0152
 - After clipping (round 1): mu=-0.0198, std=0.5559, min=-3.0108, max=2.9254
 - After clipping (round 2): mu=-0.0180, std=0.5218, min=-1.6875, max=1.6479
 - After clipping (round 3): mu=-0.0179, std=0.5177, min=-1.5834, max=1.5473
 - After clipping (round 4): mu=-0.0178, std=0.5172, min=-1.5710, max=1.5353
 - After clipping (round 5): mu=-0.0178, std=0.5172, min=-1.5695, max=1.5338
 - Random Projection: mu=0.0000, std=0.0231
[Layer 10]
 - Before clipping: mu=-0.0364, std=0.9942, min=-30.9047, max=10.7018
 - After clipping (round 1): mu=-0.0135, std=0.5435, min=-3.0191, max=2.9463
 - After clipping (round 2): mu=-0.0114, std=0.5078, min=-1.6441, max=1.6170
 - After clipping (round 3): mu=-0.0111, std=0.5037, min=-1.5349, max=1.5121
 - After clipping (round 4): mu=-0.0111, std=0.5031, min=-1.5221, max=1.4999
 - After clipping (round 5): mu=-0.0111, std=0.5031, min=-1.5205, max=1.4984
 - Random Projection: mu=0.0000, std=0.0225
[Layer 11]
 - Before clipping: mu=-0.0337, std=0.9524, min=-29.3059, max=11.3469
 - After clipping (round 1): mu=-0.0121, std=0.5299, min=-2.8908, max=2.8234
 - After clipping (round 2): mu=-0.0103, std=0.4973, min=-1.6017, max=1.5776
 - After clipping (round 3): mu=-0.0101, std=0.4936, min=-1.5023, max=1.4817
 - After clipping (round 4): mu=-0.0101, std=0.4931, min=-1.4909, max=1.4706
 - After clipping (round 5): mu=-0.0101, std=0.4931, min=-1.4895, max=1.4693
 - Random Projection: mu=0.0000, std=0.0221
[Layer 12]
 - Before clipping: mu=-0.0434, std=0.9695, min=-29.9757, max=11.0041
 - After clipping (round 1): mu=-0.0217, std=0.5332, min=-2.9521, max=2.8652
 - After clipping (round 2): mu=-0.0199, std=0.5003, min=-1.6212, max=1.5778
 - After clipping (round 3): mu=-0.0197, std=0.4963, min=-1.5207, max=1.4809
 - After clipping (round 4): mu=-0.0197, std=0.4958, min=-1.5086, max=1.4692
 - After clipping (round 5): mu=-0.0197, std=0.4957, min=-1.5071, max=1.4677
 - Random Projection: mu=0.0000, std=0.0222
[Layer 13]
 - Before clipping: mu=-0.0438, std=0.9767, min=-30.3490, max=11.0853
 - After clipping (round 1): mu=-0.0231, std=0.5627, min=-2.9738, max=2.8862
 - After clipping (round 2): mu=-0.0217, std=0.5351, min=-1.7110, max=1.6649
 - After clipping (round 3): mu=-0.0215, std=0.5321, min=-1.6270, max=1.5837
 - After clipping (round 4): mu=-0.0215, std=0.5317, min=-1.6178, max=1.5748
 - After clipping (round 5): mu=-0.0215, std=0.5317, min=-1.6168, max=1.5737
 - Random Projection: mu=0.0000, std=0.0238
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9824, min=-30.5576, max=11.6471
 - After clipping (round 1): mu=-0.0221, std=0.5663, min=-2.9898, max=2.9044
 - After clipping (round 2): mu=-0.0209, std=0.5422, min=-1.7210, max=1.6768
 - After clipping (round 3): mu=-0.0208, std=0.5396, min=-1.6475, max=1.6057
 - After clipping (round 4): mu=-0.0208, std=0.5393, min=-1.6397, max=1.5981
 - After clipping (round 5): mu=-0.0208, std=0.5393, min=-1.6388, max=1.5973
 - Random Projection: mu=0.0000, std=0.0241
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9951, min=-28.0418, max=11.3901
 - After clipping (round 1): mu=-0.0163, std=0.5653, min=-3.0273, max=2.9434
 - After clipping (round 2): mu=-0.0148, std=0.5372, min=-1.7123, max=1.6796
 - After clipping (round 3): mu=-0.0147, std=0.5341, min=-1.6263, max=1.5967
 - After clipping (round 4): mu=-0.0147, std=0.5338, min=-1.6170, max=1.5877
 - After clipping (round 5): mu=-0.0147, std=0.5337, min=-1.6160, max=1.5866
 - Random Projection: mu=0.0000, std=0.0239
[Layer 16]
 - Before clipping: mu=-0.0329, std=0.9995, min=-31.5379, max=11.9624
 - After clipping (round 1): mu=-0.0046, std=0.5587, min=-3.0313, max=2.9655
 - After clipping (round 2): mu=-0.0031, std=0.5315, min=-1.6807, max=1.6714
 - After clipping (round 3): mu=-0.0030, std=0.5288, min=-1.5976, max=1.5914
 - After clipping (round 4): mu=-0.0030, std=0.5285, min=-1.5893, max=1.5833
 - After clipping (round 5): mu=-0.0030, std=0.5285, min=-1.5884, max=1.5825
 - Random Projection: mu=0.0000, std=0.0236
[Layer 17]
 - Before clipping: mu=-0.0315, std=0.9743, min=-30.3726, max=12.8460
 - After clipping (round 1): mu=-0.0041, std=0.5461, min=-2.9545, max=2.8915
 - After clipping (round 2): mu=-0.0031, std=0.5198, min=-1.6425, max=1.6343
 - After clipping (round 3): mu=-0.0030, std=0.5173, min=-1.5625, max=1.5564
 - After clipping (round 4): mu=-0.0030, std=0.5171, min=-1.5551, max=1.5490
 - After clipping (round 5): mu=-0.0030, std=0.5171, min=-1.5543, max=1.5483
 - Random Projection: mu=0.0000, std=0.0231
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9727, min=-30.4856, max=13.3090
 - After clipping (round 1): mu=-0.0041, std=0.5471, min=-2.9486, max=2.8874
 - After clipping (round 2): mu=-0.0037, std=0.5184, min=-1.6453, max=1.6371
 - After clipping (round 3): mu=-0.0037, std=0.5155, min=-1.5587, max=1.5514
 - After clipping (round 4): mu=-0.0037, std=0.5152, min=-1.5502, max=1.5428
 - After clipping (round 5): mu=-0.0037, std=0.5152, min=-1.5493, max=1.5419
 - Random Projection: mu=0.0000, std=0.0230
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9605, min=-29.5282, max=12.6828
 - After clipping (round 1): mu=-0.0044, std=0.5519, min=-2.9111, max=2.8519
 - After clipping (round 2): mu=-0.0043, std=0.5225, min=-1.6600, max=1.6513
 - After clipping (round 3): mu=-0.0043, std=0.5195, min=-1.5717, max=1.5632
 - After clipping (round 4): mu=-0.0043, std=0.5191, min=-1.5627, max=1.5541
 - After clipping (round 5): mu=-0.0043, std=0.5191, min=-1.5617, max=1.5531
 - Random Projection: mu=0.0000, std=0.0232
[Layer 20]
 - Before clipping: mu=-0.0286, std=0.9458, min=-28.9283, max=11.7597
 - After clipping (round 1): mu=-0.0049, std=0.5550, min=-2.8659, max=2.8087
 - After clipping (round 2): mu=-0.0051, std=0.5261, min=-1.6698, max=1.6600
 - After clipping (round 3): mu=-0.0052, std=0.5230, min=-1.5833, max=1.5731
 - After clipping (round 4): mu=-0.0052, std=0.5226, min=-1.5741, max=1.5638
 - After clipping (round 5): mu=-0.0052, std=0.5226, min=-1.5731, max=1.5627
 - Random Projection: mu=0.0000, std=0.0234
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9896, min=-31.2401, max=11.3996
 - After clipping (round 1): mu=-0.0086, std=0.5624, min=-3.0019, max=2.9355
 - After clipping (round 2): mu=-0.0089, std=0.5304, min=-1.6958, max=1.6786
 - After clipping (round 3): mu=-0.0090, std=0.5267, min=-1.5999, max=1.5822
 - After clipping (round 4): mu=-0.0090, std=0.5263, min=-1.5892, max=1.5713
 - After clipping (round 5): mu=-0.0090, std=0.5263, min=-1.5879, max=1.5699
 - Random Projection: mu=0.0000, std=0.0235
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0067, min=-32.0981, max=10.7240
 - After clipping (round 1): mu=-0.0163, std=0.5450, min=-3.0616, max=2.9789
 - After clipping (round 2): mu=-0.0166, std=0.5113, min=-1.6512, max=1.6185
 - After clipping (round 3): mu=-0.0167, std=0.5075, min=-1.5505, max=1.5173
 - After clipping (round 4): mu=-0.0167, std=0.5070, min=-1.5392, max=1.5057
 - After clipping (round 5): mu=-0.0167, std=0.5070, min=-1.5378, max=1.5043
 - Random Projection: mu=0.0000, std=0.0227
[Layer 23]
 - Before clipping: mu=-0.0310, std=1.0098, min=-32.4126, max=10.8492
 - After clipping (round 1): mu=-0.0061, std=0.5249, min=-3.0605, max=2.9984
 - After clipping (round 2): mu=-0.0061, std=0.4905, min=-1.5808, max=1.5687
 - After clipping (round 3): mu=-0.0063, std=0.4864, min=-1.4776, max=1.4654
 - After clipping (round 4): mu=-0.0063, std=0.4858, min=-1.4654, max=1.4528
 - After clipping (round 5): mu=-0.0063, std=0.4857, min=-1.4637, max=1.4511
 - Random Projection: mu=0.0000, std=0.0217
Random projections initialized.
[# API Calls 50] loss: 0.324. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 100] loss: 0.313. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3519. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 150] loss: 0.2989. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 200] loss: 0.2946. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3235. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 250] loss: 0.2893. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 300] loss: 0.2836. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3075. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 350] loss: 0.2809. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 400] loss: 0.2767. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3043. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 450] loss: 0.2731. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 500] loss: 0.2719. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2945. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 550] loss: 0.271. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 600] loss: 0.2655. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.298. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 650] loss: 0.2665. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 700] loss: 0.2517. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3005. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 750] loss: 0.248. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 800] loss: 0.2446. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2952. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 850] loss: 0.2425. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 900] loss: 0.2428. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2927. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 950] loss: 0.242. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1000] loss: 0.2451. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2969. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1050] loss: 0.2413. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1100] loss: 0.2348. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2945. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1150] loss: 0.2252. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1200] loss: 0.2166. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2791. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1250] loss: 0.2091. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1300] loss: 0.2082. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2782. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1350] loss: 0.2022. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1400] loss: 0.2027. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2805. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1450] loss: 0.2035. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1500] loss: 0.2019. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2697. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1550] loss: 0.2061. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1600] loss: 0.2024. Current perf: 0.9062. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2932. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1650] loss: 0.1992. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1700] loss: 0.1971. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.285. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1750] loss: 0.1925. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1800] loss: 0.1895. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2743. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1850] loss: 0.1841. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1900] loss: 0.1827. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2748. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 1950] loss: 0.1865. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2000] loss: 0.1811. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2839. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 2050] loss: 0.1821. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2100] loss: 0.181. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2789. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2150] loss: 0.1761. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2200] loss: 0.1736. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2584. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2250] loss: 0.1694. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2300] loss: 0.1689. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2568. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2350] loss: 0.1613. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2400] loss: 0.1592. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2583. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2450] loss: 0.1624. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2500] loss: 0.1636. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2599. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2550] loss: 0.169. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2600] loss: 0.1517. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2488. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2650] loss: 0.1496. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2700] loss: 0.1465. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2575. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 2750] loss: 0.1411. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2800] loss: 0.1368. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2587. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2850] loss: 0.1346. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2900] loss: 0.1338. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2571. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2950] loss: 0.13. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 3000] loss: 0.1278. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2893. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 3050] loss: 0.1187. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 3100] loss: 0.1224. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2545. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3150] loss: 0.1141. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3200] loss: 0.1116. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2602. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3250] loss: 0.1121. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3300] loss: 0.1115. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2654. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3350] loss: 0.1092. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3400] loss: 0.1235. Current perf: 0.9375. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2646. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3450] loss: 0.1133. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3500] loss: 0.1092. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2746. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3550] loss: 0.1129. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3600] loss: 0.1031. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2651. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3650] loss: 0.108. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3700] loss: 0.0991. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2394. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3750] loss: 0.0965. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.0914. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2511. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3850] loss: 0.0887. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3900] loss: 0.0884. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2428. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3950] loss: 0.0893. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4000] loss: 0.1008. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.281. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4050] loss: 0.0975. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4100] loss: 0.0872. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.285. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4150] loss: 0.0786. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.0742. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.305. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4250] loss: 0.0697. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0663. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2772. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4350] loss: 0.0694. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.0793. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3236. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4450] loss: 0.0809. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4500] loss: 0.0974. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3493. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4550] loss: 0.0799. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.0753. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2876. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4650] loss: 0.0711. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.0654. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2484. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4750] loss: 0.0599. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.0553. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3089. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4850] loss: 0.0724. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.0538. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2223. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 4950] loss: 0.0557. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.0545. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2214. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 5050] loss: 0.0499. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.0467. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2842. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5150] loss: 0.043. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0419. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2539. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5250] loss: 0.0404. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0392. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2946. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5350] loss: 0.0431. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.047. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2796. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5450] loss: 0.0416. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.043. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2751. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5550] loss: 0.0419. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0411. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2712. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5650] loss: 0.0389. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0359. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2783. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5750] loss: 0.0353. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0387. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2261. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 5850] loss: 0.0524. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.038. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2946. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 5950] loss: 0.0453. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0308. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2719. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 6050] loss: 0.0341. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0299. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3041. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 6150] loss: 0.0263. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0227. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2734. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 6250] loss: 0.0407. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0233. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3142. Dev perf: 0.8438. Best dev perf: 0.9375
********* Done *********
[# API Calls 6350] loss: 0.0268. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.0409. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4228. Dev perf: 0.8438. Best dev perf: 0.9375
********* Done *********
[# API Calls 6450] loss: 0.0278. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0257. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2669. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 6550] loss: 0.027. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0284. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2627. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 6650] loss: 0.0353. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0248. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2958. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 6750] loss: 0.0267. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0291. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2793. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 6850] loss: 0.0224. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0395. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2934. Dev perf: 0.8438. Best dev perf: 0.9375
********* Done *********
[# API Calls 6950] loss: 0.0175. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0189. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.258. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 7050] loss: 0.0213. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.018. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2595. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 7150] loss: 0.012. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0104. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3875. Dev perf: 0.8125. Best dev perf: 0.9375
********* Done *********
[# API Calls 7250] loss: 0.0107. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0223. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3403. Dev perf: 0.8438. Best dev perf: 0.9375
********* Done *********
[# API Calls 7350] loss: 0.0169. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0195. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3599. Dev perf: 0.8125. Best dev perf: 0.9375
********* Done *********
[# API Calls 7450] loss: 0.0127. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0127. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2973. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 7550] loss: 0.0131. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0096. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.316. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 7650] loss: 0.0093. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 153.781188193957 (mins)
===== seed: 42 finished! =====
===== seed: 50 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset yelp (/home/qingyang/.cache/huggingface/datasets/yelp/default/0.0.0/a4dda7d4e2d12dfffa7e8cc4fd17f9a5206742c29be7ffc812e8331a4ce55799)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 3617.14ex/s]
{'text': "Although this place has the friendliest staff I've encountered at a barber shop, the cut I received was short of okay!  Great friendly atmosphere and some funny barbers to chat with.  Unfortunately, I do not see myself returning due to a not so nice haircut and a price that shocked me when I reached the register to pay.", 'labels': 0, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . Although this place has the friendliest staff I've encountered at a barber shop, the cut I received was short of okay!  Great friendly atmosphere and some funny barbers to chat with.  Unfortunately, I do not see myself returning due to a not so nice haircut and a price that shocked me when I reached the register to pay. .", 'target_text': 'bad'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 14.66ba/s]
Using custom data configuration default
Reusing dataset yelp (/home/qingyang/.cache/huggingface/datasets/yelp/default/0.0.0/a4dda7d4e2d12dfffa7e8cc4fd17f9a5206742c29be7ffc812e8331a4ce55799)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5719.67ex/s]
{'text': "it says 'dive bar' on the sign, but plays deafening techno music to an empty room on a Saturday night. no tables where you can sit with friends. we wanted a dive bar and it's not, it's just a shitty small club. But even if I forgave it for not being what's on the sign, there's nowhere to dance if someone wanted to. So, not sure what it's trying to be, but it's not working. I felt so bad for the bartender, she was really nice. She turned the music down slightly and the guy working on the computer kept cranking it back up. So loud it was difficult to order a drink without hand signals from someone 1 ft away. Really strange.", 'labels': 0, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . it says 'dive bar' on the sign, but plays deafening techno music to an empty room on a Saturday night. no tables where you can sit with friends. we wanted a dive bar and it's not, it's just a shitty small club. But even if I forgave it for not being what's on the sign, there's nowhere to dance if someone wanted to. So, not sure what it's trying to be, but it's not working. I felt so bad for the bartender, she was really nice. She turned the music down slightly and the guy working on the computer kept cranking it back up. So loud it was difficult to order a drink without hand signals from someone 1 ft away. Really strange. .", 'target_text': 'bad'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 21.68ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 124      | 10999  |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 205      | 10999  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0092, std=0.8609, min=-16.5758, max=17.5380
 - After clipping (round 1): mu=-0.0081, std=0.7470, min=-2.5921, max=2.5736
 - After clipping (round 2): mu=-0.0075, std=0.7422, min=-2.2491, max=2.2330
 - After clipping (round 3): mu=-0.0074, std=0.7420, min=-2.2341, max=2.2192
 - After clipping (round 4): mu=-0.0074, std=0.7420, min=-2.2334, max=2.2185
 - After clipping (round 5): mu=-0.0074, std=0.7420, min=-2.2333, max=2.2185
 - Random Projection: mu=0.0000, std=0.0332
[Layer 2]
 - Before clipping: mu=-0.0301, std=0.8795, min=-20.1066, max=17.7625
 - After clipping (round 1): mu=-0.0210, std=0.6944, min=-2.6686, max=2.6084
 - After clipping (round 2): mu=-0.0203, std=0.6861, min=-2.1041, max=2.0621
 - After clipping (round 3): mu=-0.0203, std=0.6857, min=-2.0787, max=2.0380
 - After clipping (round 4): mu=-0.0203, std=0.6856, min=-2.0773, max=2.0367
 - After clipping (round 5): mu=-0.0203, std=0.6856, min=-2.0772, max=2.0366
 - Random Projection: mu=0.0000, std=0.0307
[Layer 3]
 - Before clipping: mu=-0.0323, std=0.9163, min=-21.0849, max=15.4947
 - After clipping (round 1): mu=-0.0192, std=0.6719, min=-2.7812, max=2.7165
 - After clipping (round 2): mu=-0.0187, std=0.6596, min=-2.0348, max=1.9963
 - After clipping (round 3): mu=-0.0187, std=0.6589, min=-1.9977, max=1.9602
 - After clipping (round 4): mu=-0.0187, std=0.6588, min=-1.9953, max=1.9578
 - After clipping (round 5): mu=-0.0187, std=0.6588, min=-1.9951, max=1.9577
 - Random Projection: mu=0.0000, std=0.0295
[Layer 4]
 - Before clipping: mu=-0.0356, std=0.9264, min=-25.4328, max=12.2865
 - After clipping (round 1): mu=-0.0195, std=0.6792, min=-2.8147, max=2.7436
 - After clipping (round 2): mu=-0.0188, std=0.6664, min=-2.0570, max=2.0181
 - After clipping (round 3): mu=-0.0187, std=0.6655, min=-2.0179, max=1.9803
 - After clipping (round 4): mu=-0.0187, std=0.6654, min=-2.0151, max=1.9777
 - After clipping (round 5): mu=-0.0187, std=0.6654, min=-2.0150, max=1.9776
 - Random Projection: mu=0.0000, std=0.0298
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9464, min=-26.9109, max=10.3427
 - After clipping (round 1): mu=-0.0212, std=0.6856, min=-2.8782, max=2.7999
 - After clipping (round 2): mu=-0.0201, std=0.6712, min=-2.0779, max=2.0354
 - After clipping (round 3): mu=-0.0200, std=0.6701, min=-2.0337, max=1.9935
 - After clipping (round 4): mu=-0.0200, std=0.6700, min=-2.0304, max=1.9903
 - After clipping (round 5): mu=-0.0200, std=0.6700, min=-2.0301, max=1.9900
 - Random Projection: mu=0.0000, std=0.0300
[Layer 6]
 - Before clipping: mu=-0.0450, std=0.9615, min=-28.5332, max=8.9639
 - After clipping (round 1): mu=-0.0247, std=0.6638, min=-2.9295, max=2.8395
 - After clipping (round 2): mu=-0.0234, std=0.6457, min=-2.0162, max=1.9668
 - After clipping (round 3): mu=-0.0233, std=0.6441, min=-1.9604, max=1.9136
 - After clipping (round 4): mu=-0.0232, std=0.6439, min=-1.9554, max=1.9089
 - After clipping (round 5): mu=-0.0232, std=0.6439, min=-1.9550, max=1.9085
 - Random Projection: mu=0.0000, std=0.0288
[Layer 7]
 - Before clipping: mu=-0.0406, std=0.9770, min=-29.8574, max=7.9750
 - After clipping (round 1): mu=-0.0183, std=0.6248, min=-2.9716, max=2.8904
 - After clipping (round 2): mu=-0.0170, std=0.6024, min=-1.8927, max=1.8561
 - After clipping (round 3): mu=-0.0169, std=0.6002, min=-1.8243, max=1.7903
 - After clipping (round 4): mu=-0.0169, std=0.6000, min=-1.8175, max=1.7837
 - After clipping (round 5): mu=-0.0169, std=0.6000, min=-1.8168, max=1.7831
 - Random Projection: mu=0.0000, std=0.0268
[Layer 8]
 - Before clipping: mu=-0.0430, std=0.9941, min=-31.0258, max=9.1386
 - After clipping (round 1): mu=-0.0197, std=0.5991, min=-3.0252, max=2.9392
 - After clipping (round 2): mu=-0.0178, std=0.5686, min=-1.8169, max=1.7776
 - After clipping (round 3): mu=-0.0176, std=0.5650, min=-1.7235, max=1.6879
 - After clipping (round 4): mu=-0.0176, std=0.5646, min=-1.7127, max=1.6775
 - After clipping (round 5): mu=-0.0175, std=0.5645, min=-1.7113, max=1.6762
 - Random Projection: mu=0.0000, std=0.0252
[Layer 9]
 - Before clipping: mu=-0.0427, std=0.9893, min=-30.6008, max=10.1738
 - After clipping (round 1): mu=-0.0195, std=0.5551, min=-3.0106, max=2.9252
 - After clipping (round 2): mu=-0.0175, std=0.5210, min=-1.6849, max=1.6459
 - After clipping (round 3): mu=-0.0173, std=0.5169, min=-1.5803, max=1.5454
 - After clipping (round 4): mu=-0.0172, std=0.5164, min=-1.5679, max=1.5334
 - After clipping (round 5): mu=-0.0172, std=0.5163, min=-1.5663, max=1.5318
 - Random Projection: mu=0.0000, std=0.0231
[Layer 10]
 - Before clipping: mu=-0.0364, std=0.9943, min=-30.7768, max=11.1469
 - After clipping (round 1): mu=-0.0132, std=0.5381, min=-3.0192, max=2.9465
 - After clipping (round 2): mu=-0.0109, std=0.5014, min=-1.6275, max=1.6012
 - After clipping (round 3): mu=-0.0106, std=0.4970, min=-1.5151, max=1.4934
 - After clipping (round 4): mu=-0.0105, std=0.4964, min=-1.5016, max=1.4805
 - After clipping (round 5): mu=-0.0105, std=0.4964, min=-1.4998, max=1.4788
 - Random Projection: mu=0.0000, std=0.0222
[Layer 11]
 - Before clipping: mu=-0.0337, std=0.9515, min=-29.1602, max=11.1665
 - After clipping (round 1): mu=-0.0117, std=0.5250, min=-2.8881, max=2.8208
 - After clipping (round 2): mu=-0.0099, std=0.4919, min=-1.5866, max=1.5632
 - After clipping (round 3): mu=-0.0097, std=0.4879, min=-1.4856, max=1.4657
 - After clipping (round 4): mu=-0.0097, std=0.4874, min=-1.4735, max=1.4541
 - After clipping (round 5): mu=-0.0097, std=0.4874, min=-1.4719, max=1.4526
 - Random Projection: mu=0.0000, std=0.0218
[Layer 12]
 - Before clipping: mu=-0.0434, std=0.9689, min=-29.8356, max=11.0105
 - After clipping (round 1): mu=-0.0214, std=0.5291, min=-2.9501, max=2.8633
 - After clipping (round 2): mu=-0.0196, std=0.4958, min=-1.6088, max=1.5660
 - After clipping (round 3): mu=-0.0194, std=0.4916, min=-1.5070, max=1.4678
 - After clipping (round 4): mu=-0.0194, std=0.4911, min=-1.4943, max=1.4556
 - After clipping (round 5): mu=-0.0194, std=0.4910, min=-1.4927, max=1.4539
 - Random Projection: mu=0.0000, std=0.0220
[Layer 13]
 - Before clipping: mu=-0.0438, std=0.9763, min=-30.1056, max=11.1311
 - After clipping (round 1): mu=-0.0228, std=0.5584, min=-2.9727, max=2.8851
 - After clipping (round 2): mu=-0.0214, std=0.5309, min=-1.6981, max=1.6525
 - After clipping (round 3): mu=-0.0213, std=0.5278, min=-1.6141, max=1.5712
 - After clipping (round 4): mu=-0.0213, std=0.5275, min=-1.6049, max=1.5622
 - After clipping (round 5): mu=-0.0213, std=0.5274, min=-1.6038, max=1.5611
 - Random Projection: mu=0.0000, std=0.0236
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9822, min=-30.4618, max=11.5560
 - After clipping (round 1): mu=-0.0219, std=0.5617, min=-2.9891, max=2.9038
 - After clipping (round 2): mu=-0.0207, std=0.5380, min=-1.7070, max=1.6632
 - After clipping (round 3): mu=-0.0206, std=0.5355, min=-1.6347, max=1.5933
 - After clipping (round 4): mu=-0.0206, std=0.5352, min=-1.6270, max=1.5858
 - After clipping (round 5): mu=-0.0206, std=0.5352, min=-1.6262, max=1.5849
 - Random Projection: mu=0.0000, std=0.0239
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9956, min=-28.0453, max=11.6115
 - After clipping (round 1): mu=-0.0161, std=0.5595, min=-3.0287, max=2.9448
 - After clipping (round 2): mu=-0.0145, std=0.5320, min=-1.6944, max=1.6623
 - After clipping (round 3): mu=-0.0144, std=0.5290, min=-1.6104, max=1.5814
 - After clipping (round 4): mu=-0.0144, std=0.5286, min=-1.6013, max=1.5725
 - After clipping (round 5): mu=-0.0144, std=0.5286, min=-1.6002, max=1.5715
 - Random Projection: mu=0.0000, std=0.0236
[Layer 16]
 - Before clipping: mu=-0.0329, std=0.9996, min=-31.5355, max=11.9095
 - After clipping (round 1): mu=-0.0041, std=0.5529, min=-3.0318, max=2.9659
 - After clipping (round 2): mu=-0.0028, std=0.5261, min=-1.6629, max=1.6546
 - After clipping (round 3): mu=-0.0027, std=0.5233, min=-1.5810, max=1.5754
 - After clipping (round 4): mu=-0.0027, std=0.5230, min=-1.5727, max=1.5673
 - After clipping (round 5): mu=-0.0027, std=0.5230, min=-1.5718, max=1.5664
 - Random Projection: mu=0.0000, std=0.0234
[Layer 17]
 - Before clipping: mu=-0.0315, std=0.9740, min=-30.3724, max=12.3391
 - After clipping (round 1): mu=-0.0035, std=0.5384, min=-2.9534, max=2.8904
 - After clipping (round 2): mu=-0.0028, std=0.5114, min=-1.6186, max=1.6116
 - After clipping (round 3): mu=-0.0028, std=0.5088, min=-1.5371, max=1.5315
 - After clipping (round 4): mu=-0.0028, std=0.5086, min=-1.5293, max=1.5237
 - After clipping (round 5): mu=-0.0028, std=0.5085, min=-1.5285, max=1.5228
 - Random Projection: mu=0.0000, std=0.0227
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9723, min=-30.4830, max=12.4460
 - After clipping (round 1): mu=-0.0035, std=0.5401, min=-2.9474, max=2.8863
 - After clipping (round 2): mu=-0.0036, std=0.5103, min=-1.6238, max=1.6169
 - After clipping (round 3): mu=-0.0037, std=0.5071, min=-1.5344, max=1.5272
 - After clipping (round 4): mu=-0.0037, std=0.5067, min=-1.5250, max=1.5177
 - After clipping (round 5): mu=-0.0037, std=0.5067, min=-1.5239, max=1.5166
 - Random Projection: mu=0.0000, std=0.0227
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9594, min=-29.5292, max=12.7506
 - After clipping (round 1): mu=-0.0037, std=0.5423, min=-2.9079, max=2.8487
 - After clipping (round 2): mu=-0.0041, std=0.5120, min=-1.6306, max=1.6232
 - After clipping (round 3): mu=-0.0042, std=0.5088, min=-1.5400, max=1.5318
 - After clipping (round 4): mu=-0.0042, std=0.5084, min=-1.5306, max=1.5222
 - After clipping (round 5): mu=-0.0042, std=0.5084, min=-1.5295, max=1.5211
 - Random Projection: mu=0.0000, std=0.0227
[Layer 20]
 - Before clipping: mu=-0.0286, std=0.9445, min=-28.9286, max=12.0767
 - After clipping (round 1): mu=-0.0043, std=0.5453, min=-2.8620, max=2.8049
 - After clipping (round 2): mu=-0.0049, std=0.5154, min=-1.6401, max=1.6315
 - After clipping (round 3): mu=-0.0051, std=0.5123, min=-1.5511, max=1.5412
 - After clipping (round 4): mu=-0.0051, std=0.5119, min=-1.5419, max=1.5317
 - After clipping (round 5): mu=-0.0051, std=0.5119, min=-1.5408, max=1.5307
 - Random Projection: mu=0.0000, std=0.0229
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9891, min=-31.2400, max=10.8884
 - After clipping (round 1): mu=-0.0079, std=0.5475, min=-3.0005, max=2.9342
 - After clipping (round 2): mu=-0.0087, std=0.5138, min=-1.6505, max=1.6347
 - After clipping (round 3): mu=-0.0088, std=0.5101, min=-1.5501, max=1.5327
 - After clipping (round 4): mu=-0.0089, std=0.5096, min=-1.5390, max=1.5213
 - After clipping (round 5): mu=-0.0089, std=0.5096, min=-1.5377, max=1.5200
 - Random Projection: mu=0.0000, std=0.0228
[Layer 22]
 - Before clipping: mu=-0.0413, std=1.0070, min=-32.0960, max=10.5322
 - After clipping (round 1): mu=-0.0156, std=0.5260, min=-3.0623, max=2.9796
 - After clipping (round 2): mu=-0.0163, std=0.4906, min=-1.5935, max=1.5622
 - After clipping (round 3): mu=-0.0165, std=0.4867, min=-1.4882, max=1.4556
 - After clipping (round 4): mu=-0.0165, std=0.4862, min=-1.4767, max=1.4437
 - After clipping (round 5): mu=-0.0165, std=0.4862, min=-1.4753, max=1.4422
 - Random Projection: mu=0.0000, std=0.0217
[Layer 23]
 - Before clipping: mu=-0.0310, std=1.0105, min=-32.4137, max=10.2838
 - After clipping (round 1): mu=-0.0053, std=0.5007, min=-3.0624, max=3.0004
 - After clipping (round 2): mu=-0.0057, std=0.4642, min=-1.5076, max=1.4969
 - After clipping (round 3): mu=-0.0059, std=0.4599, min=-1.3984, max=1.3870
 - After clipping (round 4): mu=-0.0060, std=0.4593, min=-1.3855, max=1.3737
 - After clipping (round 5): mu=-0.0060, std=0.4592, min=-1.3839, max=1.3719
 - Random Projection: mu=0.0000, std=0.0205
Random projections initialized.
[# API Calls 50] loss: 0.2709. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 100] loss: 0.2632. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.239. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 150] loss: 0.2518. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 200] loss: 0.2417. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2307. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 250] loss: 0.2379. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 300] loss: 0.2337. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2381. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 350] loss: 0.2284. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 400] loss: 0.2263. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2302. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 450] loss: 0.2231. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 500] loss: 0.2217. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2201. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 550] loss: 0.2168. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 600] loss: 0.2208. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2358. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 650] loss: 0.2147. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 700] loss: 0.2178. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2347. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 750] loss: 0.2106. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 800] loss: 0.2109. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2275. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 850] loss: 0.2079. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 900] loss: 0.2092. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2251. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 950] loss: 0.2077. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1000] loss: 0.2086. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2178. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1050] loss: 0.2068. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1100] loss: 0.2009. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2151. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1150] loss: 0.2015. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1200] loss: 0.203. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2141. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1250] loss: 0.1988. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1300] loss: 0.1959. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2225. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1350] loss: 0.1935. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1400] loss: 0.1899. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2218. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1450] loss: 0.1878. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1500] loss: 0.1889. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2176. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1550] loss: 0.1871. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1600] loss: 0.1821. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2252. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1650] loss: 0.177. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1700] loss: 0.1732. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.221. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1750] loss: 0.1683. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1800] loss: 0.1682. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2185. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1850] loss: 0.1677. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1900] loss: 0.1645. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2194. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1950] loss: 0.1667. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2000] loss: 0.1639. Current perf: 0.9375. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2254. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2050] loss: 0.1588. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2100] loss: 0.1502. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2247. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2150] loss: 0.1485. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2200] loss: 0.1492. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2139. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2250] loss: 0.144. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2300] loss: 0.1397. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2097. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2350] loss: 0.1359. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2400] loss: 0.1328. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2031. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2450] loss: 0.1343. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2500] loss: 0.1259. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1972. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2550] loss: 0.1304. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2600] loss: 0.1327. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2052. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2650] loss: 0.1256. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2700] loss: 0.1265. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2174. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2750] loss: 0.1235. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2800] loss: 0.1195. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2146. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2850] loss: 0.1166. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2900] loss: 0.1145. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2102. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2950] loss: 0.1152. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3000] loss: 0.1201. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1977. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3050] loss: 0.1057. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3100] loss: 0.1077. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.213. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3150] loss: 0.1003. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3200] loss: 0.0993. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2085. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3250] loss: 0.0912. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3300] loss: 0.0908. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2119. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3350] loss: 0.0855. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3400] loss: 0.0875. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.203. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3450] loss: 0.0866. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3500] loss: 0.0852. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2105. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3550] loss: 0.0827. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3600] loss: 0.0791. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2072. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3650] loss: 0.0758. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3700] loss: 0.0745. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2077. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3750] loss: 0.0745. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.0709. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2101. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3850] loss: 0.0717. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3900] loss: 0.0698. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2095. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3950] loss: 0.0663. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4000] loss: 0.0672. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2075. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4050] loss: 0.067. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4100] loss: 0.0661. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.208. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4150] loss: 0.0669. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.0663. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2136. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4250] loss: 0.0617. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0613. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2078. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4350] loss: 0.0606. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.059. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2013. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4450] loss: 0.0581. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4500] loss: 0.0572. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2207. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4550] loss: 0.055. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.0496. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2283. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4650] loss: 0.0476. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.0458. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2363. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4750] loss: 0.0418. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.0427. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2389. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4850] loss: 0.0446. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.0431. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2195. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 4950] loss: 0.0403. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.0394. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2178. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 5050] loss: 0.0377. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.0376. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2383. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 5150] loss: 0.0347. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0337. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2354. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 5250] loss: 0.0319. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0304. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.261. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 5350] loss: 0.0302. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.0294. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2418. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 5450] loss: 0.03. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0289. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2508. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 5550] loss: 0.0257. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0257. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2579. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 5650] loss: 0.0242. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0242. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2546. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 5750] loss: 0.022. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0212. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2825. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 5850] loss: 0.0214. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0227. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2696. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 5950] loss: 0.0204. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0215. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2458. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 6050] loss: 0.0192. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0184. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2459. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 6150] loss: 0.0181. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0162. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2408. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 6250] loss: 0.0156. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0158. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2438. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 6350] loss: 0.0154. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.0148. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3018. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6450] loss: 0.0147. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0145. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2715. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 6550] loss: 0.0146. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0129. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2552. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 6650] loss: 0.0119. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0111. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2952. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6750] loss: 0.0111. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0103. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.267. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6850] loss: 0.0093. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.009. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2943. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 6950] loss: 0.0083. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0067. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2985. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 7050] loss: 0.006. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0052. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3874. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 7150] loss: 0.0055. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0046. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4068. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 7250] loss: 0.0046. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0042. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.387. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 7350] loss: 0.0053. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0047. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4759. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 7450] loss: 0.0037. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0044. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4452. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 7550] loss: 0.0039. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0037. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4582. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 7650] loss: 0.0026. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 142.08488152424493 (mins)
===== seed: 50 finished! =====
===== seed: 60 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset yelp (/home/qingyang/.cache/huggingface/datasets/yelp/default/0.0.0/a4dda7d4e2d12dfffa7e8cc4fd17f9a5206742c29be7ffc812e8331a4ce55799)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5424.25ex/s]
{'text': "Waited over 10 minutes for a toasted bagel. Finally had to ask for it. It was cold and nobody cared or apologized. The excuse was someone was in break.  Won't return for awhile", 'labels': 0, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . Waited over 10 minutes for a toasted bagel. Finally had to ask for it. It was cold and nobody cared or apologized. The excuse was someone was in break.  Won't return for awhile .", 'target_text': 'bad'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00,  9.49ba/s]100%|██████████| 1/1 [00:00<00:00,  9.47ba/s]
Using custom data configuration default
Reusing dataset yelp (/home/qingyang/.cache/huggingface/datasets/yelp/default/0.0.0/a4dda7d4e2d12dfffa7e8cc4fd17f9a5206742c29be7ffc812e8331a4ce55799)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5533.15ex/s]
{'text': "I attended the mothers day brunch here as part of Vegas Uncorked 09'. It was hands down one of the best meals I have ever had. I find myself daydreaming about it constantly. All of the food was served family style and was absolutely amazing. I really enjoyed every single dish that was served but the dishes that stood out the most to me were the pork belly and wagyu skirt steak. DROOL!The service was top notch. The waiters kept the unlimited champagne and mimosas flowing.  And they were happy to get us additional servings of the dishes if we wanted more. My table went through a lot of the pork belly. It was awesome to see Tom Colicchio and get an autographed cookbook that included recipes of some of the items we ate that day. I definitely recommend this place and can not wait to go back!", 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . I attended the mothers day brunch here as part of Vegas Uncorked 09'. It was hands down one of the best meals I have ever had. I find myself daydreaming about it constantly. All of the food was served family style and was absolutely amazing. I really enjoyed every single dish that was served but the dishes that stood out the most to me were the pork belly and wagyu skirt steak. DROOL!The service was top notch. The waiters kept the unlimited champagne and mimosas flowing.  And they were happy to get us additional servings of the dishes if we wanted more. My table went through a lot of the pork belly. It was awesome to see Tom Colicchio and get an autographed cookbook that included recipes of some of the items we ate that day. I definitely recommend this place and can not wait to go back! .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 19.98ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 97       | 10999  |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 231      | 12338  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0090, std=0.8553, min=-16.6353, max=17.5878
 - After clipping (round 1): mu=-0.0078, std=0.7280, min=-2.5749, max=2.5569
 - After clipping (round 2): mu=-0.0071, std=0.7221, min=-2.1918, max=2.1761
 - After clipping (round 3): mu=-0.0071, std=0.7217, min=-2.1734, max=2.1591
 - After clipping (round 4): mu=-0.0071, std=0.7217, min=-2.1723, max=2.1582
 - After clipping (round 5): mu=-0.0071, std=0.7217, min=-2.1723, max=2.1581
 - Random Projection: mu=0.0000, std=0.0323
[Layer 2]
 - Before clipping: mu=-0.0299, std=0.8790, min=-20.0693, max=17.8058
 - After clipping (round 1): mu=-0.0213, std=0.6841, min=-2.6669, max=2.6071
 - After clipping (round 2): mu=-0.0205, std=0.6748, min=-2.0735, max=2.0310
 - After clipping (round 3): mu=-0.0205, std=0.6743, min=-2.0450, max=2.0040
 - After clipping (round 4): mu=-0.0205, std=0.6742, min=-2.0433, max=2.0023
 - After clipping (round 5): mu=-0.0205, std=0.6742, min=-2.0432, max=2.0022
 - Random Projection: mu=0.0000, std=0.0302
[Layer 3]
 - Before clipping: mu=-0.0321, std=0.9148, min=-21.1042, max=15.7707
 - After clipping (round 1): mu=-0.0194, std=0.6615, min=-2.7766, max=2.7124
 - After clipping (round 2): mu=-0.0189, std=0.6480, min=-2.0040, max=1.9653
 - After clipping (round 3): mu=-0.0188, std=0.6471, min=-1.9629, max=1.9252
 - After clipping (round 4): mu=-0.0188, std=0.6470, min=-1.9601, max=1.9224
 - After clipping (round 5): mu=-0.0188, std=0.6470, min=-1.9599, max=1.9222
 - Random Projection: mu=0.0000, std=0.0289
[Layer 4]
 - Before clipping: mu=-0.0354, std=0.9238, min=-25.3760, max=12.9458
 - After clipping (round 1): mu=-0.0198, std=0.6667, min=-2.8068, max=2.7360
 - After clipping (round 2): mu=-0.0190, std=0.6527, min=-2.0200, max=1.9804
 - After clipping (round 3): mu=-0.0189, std=0.6517, min=-1.9772, max=1.9391
 - After clipping (round 4): mu=-0.0189, std=0.6516, min=-1.9739, max=1.9360
 - After clipping (round 5): mu=-0.0189, std=0.6516, min=-1.9737, max=1.9358
 - Random Projection: mu=0.0000, std=0.0291
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9450, min=-26.9512, max=10.9596
 - After clipping (round 1): mu=-0.0214, std=0.6744, min=-2.8741, max=2.7959
 - After clipping (round 2): mu=-0.0203, std=0.6590, min=-2.0447, max=2.0019
 - After clipping (round 3): mu=-0.0202, std=0.6577, min=-1.9972, max=1.9566
 - After clipping (round 4): mu=-0.0202, std=0.6576, min=-1.9934, max=1.9530
 - After clipping (round 5): mu=-0.0202, std=0.6576, min=-1.9931, max=1.9527
 - Random Projection: mu=0.0000, std=0.0294
[Layer 6]
 - Before clipping: mu=-0.0450, std=0.9610, min=-28.5247, max=8.8305
 - After clipping (round 1): mu=-0.0251, std=0.6586, min=-2.9278, max=2.8379
 - After clipping (round 2): mu=-0.0239, std=0.6398, min=-2.0009, max=1.9506
 - After clipping (round 3): mu=-0.0238, std=0.6381, min=-1.9432, max=1.8954
 - After clipping (round 4): mu=-0.0238, std=0.6379, min=-1.9380, max=1.8905
 - After clipping (round 5): mu=-0.0238, std=0.6379, min=-1.9375, max=1.8900
 - Random Projection: mu=0.0000, std=0.0285
[Layer 7]
 - Before clipping: mu=-0.0406, std=0.9768, min=-29.8726, max=8.8858
 - After clipping (round 1): mu=-0.0189, std=0.6275, min=-2.9709, max=2.8897
 - After clipping (round 2): mu=-0.0178, std=0.6046, min=-1.9013, max=1.8635
 - After clipping (round 3): mu=-0.0177, std=0.6023, min=-1.8316, max=1.7959
 - After clipping (round 4): mu=-0.0177, std=0.6021, min=-1.8247, max=1.7892
 - After clipping (round 5): mu=-0.0177, std=0.6021, min=-1.8240, max=1.7885
 - Random Projection: mu=0.0000, std=0.0269
[Layer 8]
 - Before clipping: mu=-0.0430, std=0.9938, min=-31.2405, max=9.9303
 - After clipping (round 1): mu=-0.0202, std=0.6015, min=-3.0243, max=2.9383
 - After clipping (round 2): mu=-0.0185, std=0.5707, min=-1.8247, max=1.7843
 - After clipping (round 3): mu=-0.0183, std=0.5672, min=-1.7307, max=1.6936
 - After clipping (round 4): mu=-0.0183, std=0.5668, min=-1.7200, max=1.6833
 - After clipping (round 5): mu=-0.0183, std=0.5667, min=-1.7187, max=1.6821
 - Random Projection: mu=0.0000, std=0.0253
[Layer 9]
 - Before clipping: mu=-0.0427, std=0.9893, min=-30.7365, max=10.1123
 - After clipping (round 1): mu=-0.0200, std=0.5575, min=-3.0106, max=2.9251
 - After clipping (round 2): mu=-0.0181, std=0.5240, min=-1.6924, max=1.6524
 - After clipping (round 3): mu=-0.0179, std=0.5199, min=-1.5900, max=1.5538
 - After clipping (round 4): mu=-0.0179, std=0.5194, min=-1.5777, max=1.5419
 - After clipping (round 5): mu=-0.0179, std=0.5193, min=-1.5761, max=1.5403
 - Random Projection: mu=0.0000, std=0.0232
[Layer 10]
 - Before clipping: mu=-0.0364, std=0.9940, min=-30.9275, max=10.8003
 - After clipping (round 1): mu=-0.0137, std=0.5448, min=-3.0184, max=2.9457
 - After clipping (round 2): mu=-0.0114, std=0.5096, min=-1.6481, max=1.6207
 - After clipping (round 3): mu=-0.0111, std=0.5054, min=-1.5402, max=1.5173
 - After clipping (round 4): mu=-0.0111, std=0.5049, min=-1.5273, max=1.5051
 - After clipping (round 5): mu=-0.0111, std=0.5048, min=-1.5257, max=1.5035
 - Random Projection: mu=0.0000, std=0.0226
[Layer 11]
 - Before clipping: mu=-0.0337, std=0.9524, min=-29.2895, max=10.8876
 - After clipping (round 1): mu=-0.0122, std=0.5336, min=-2.8908, max=2.8234
 - After clipping (round 2): mu=-0.0103, std=0.5015, min=-1.6129, max=1.5885
 - After clipping (round 3): mu=-0.0100, std=0.4977, min=-1.5146, max=1.4941
 - After clipping (round 4): mu=-0.0100, std=0.4972, min=-1.5031, max=1.4831
 - After clipping (round 5): mu=-0.0100, std=0.4972, min=-1.5017, max=1.4817
 - Random Projection: mu=0.0000, std=0.0222
[Layer 12]
 - Before clipping: mu=-0.0434, std=0.9695, min=-29.9148, max=10.8750
 - After clipping (round 1): mu=-0.0218, std=0.5374, min=-2.9519, max=2.8650
 - After clipping (round 2): mu=-0.0198, std=0.5049, min=-1.6339, max=1.5903
 - After clipping (round 3): mu=-0.0196, std=0.5009, min=-1.5344, max=1.4947
 - After clipping (round 4): mu=-0.0196, std=0.5004, min=-1.5222, max=1.4830
 - After clipping (round 5): mu=-0.0196, std=0.5003, min=-1.5206, max=1.4815
 - Random Projection: mu=0.0000, std=0.0224
[Layer 13]
 - Before clipping: mu=-0.0438, std=0.9765, min=-30.0254, max=10.7867
 - After clipping (round 1): mu=-0.0231, std=0.5657, min=-2.9734, max=2.8857
 - After clipping (round 2): mu=-0.0215, std=0.5386, min=-1.7201, max=1.6739
 - After clipping (round 3): mu=-0.0213, std=0.5355, min=-1.6371, max=1.5942
 - After clipping (round 4): mu=-0.0213, std=0.5352, min=-1.6278, max=1.5852
 - After clipping (round 5): mu=-0.0213, std=0.5351, min=-1.6267, max=1.5842
 - Random Projection: mu=0.0000, std=0.0239
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9823, min=-30.3485, max=10.9372
 - After clipping (round 1): mu=-0.0223, std=0.5727, min=-2.9897, max=2.9043
 - After clipping (round 2): mu=-0.0208, std=0.5485, min=-1.7405, max=1.6959
 - After clipping (round 3): mu=-0.0206, std=0.5459, min=-1.6662, max=1.6246
 - After clipping (round 4): mu=-0.0206, std=0.5456, min=-1.6583, max=1.6170
 - After clipping (round 5): mu=-0.0206, std=0.5456, min=-1.6574, max=1.6162
 - Random Projection: mu=0.0000, std=0.0244
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9950, min=-28.1164, max=11.4846
 - After clipping (round 1): mu=-0.0166, std=0.5709, min=-3.0268, max=2.9429
 - After clipping (round 2): mu=-0.0147, std=0.5434, min=-1.7292, max=1.6960
 - After clipping (round 3): mu=-0.0146, std=0.5404, min=-1.6449, max=1.6154
 - After clipping (round 4): mu=-0.0146, std=0.5400, min=-1.6357, max=1.6065
 - After clipping (round 5): mu=-0.0146, std=0.5400, min=-1.6346, max=1.6055
 - Random Projection: mu=0.0000, std=0.0241
[Layer 16]
 - Before clipping: mu=-0.0329, std=0.9994, min=-31.5359, max=12.3722
 - After clipping (round 1): mu=-0.0049, std=0.5630, min=-3.0313, max=2.9654
 - After clipping (round 2): mu=-0.0032, std=0.5363, min=-1.6937, max=1.6840
 - After clipping (round 3): mu=-0.0031, std=0.5336, min=-1.6121, max=1.6057
 - After clipping (round 4): mu=-0.0031, std=0.5333, min=-1.6039, max=1.5977
 - After clipping (round 5): mu=-0.0031, std=0.5333, min=-1.6030, max=1.5968
 - Random Projection: mu=0.0000, std=0.0238
[Layer 17]
 - Before clipping: mu=-0.0315, std=0.9745, min=-30.3727, max=12.7749
 - After clipping (round 1): mu=-0.0042, std=0.5475, min=-2.9550, max=2.8920
 - After clipping (round 2): mu=-0.0031, std=0.5212, min=-1.6468, max=1.6383
 - After clipping (round 3): mu=-0.0031, std=0.5187, min=-1.5668, max=1.5606
 - After clipping (round 4): mu=-0.0031, std=0.5184, min=-1.5591, max=1.5530
 - After clipping (round 5): mu=-0.0031, std=0.5184, min=-1.5583, max=1.5522
 - Random Projection: mu=0.0000, std=0.0232
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9728, min=-30.4860, max=12.3414
 - After clipping (round 1): mu=-0.0042, std=0.5498, min=-2.9491, max=2.8879
 - After clipping (round 2): mu=-0.0037, std=0.5213, min=-1.6535, max=1.6451
 - After clipping (round 3): mu=-0.0037, std=0.5183, min=-1.5675, max=1.5601
 - After clipping (round 4): mu=-0.0037, std=0.5180, min=-1.5587, max=1.5512
 - After clipping (round 5): mu=-0.0037, std=0.5180, min=-1.5577, max=1.5502
 - Random Projection: mu=0.0000, std=0.0232
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9606, min=-29.5318, max=12.0687
 - After clipping (round 1): mu=-0.0044, std=0.5522, min=-2.9113, max=2.8521
 - After clipping (round 2): mu=-0.0042, std=0.5232, min=-1.6609, max=1.6522
 - After clipping (round 3): mu=-0.0042, std=0.5202, min=-1.5739, max=1.5656
 - After clipping (round 4): mu=-0.0042, std=0.5199, min=-1.5648, max=1.5565
 - After clipping (round 5): mu=-0.0042, std=0.5198, min=-1.5638, max=1.5554
 - Random Projection: mu=0.0000, std=0.0232
[Layer 20]
 - Before clipping: mu=-0.0286, std=0.9457, min=-28.9283, max=11.5323
 - After clipping (round 1): mu=-0.0048, std=0.5546, min=-2.8659, max=2.8086
 - After clipping (round 2): mu=-0.0050, std=0.5260, min=-1.6688, max=1.6591
 - After clipping (round 3): mu=-0.0051, std=0.5229, min=-1.5829, max=1.5729
 - After clipping (round 4): mu=-0.0051, std=0.5225, min=-1.5738, max=1.5636
 - After clipping (round 5): mu=-0.0051, std=0.5225, min=-1.5727, max=1.5625
 - Random Projection: mu=0.0000, std=0.0234
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9895, min=-31.2404, max=10.8192
 - After clipping (round 1): mu=-0.0086, std=0.5618, min=-3.0018, max=2.9354
 - After clipping (round 2): mu=-0.0088, std=0.5302, min=-1.6940, max=1.6769
 - After clipping (round 3): mu=-0.0089, std=0.5266, min=-1.5993, max=1.5817
 - After clipping (round 4): mu=-0.0089, std=0.5262, min=-1.5888, max=1.5710
 - After clipping (round 5): mu=-0.0089, std=0.5262, min=-1.5876, max=1.5697
 - Random Projection: mu=0.0000, std=0.0235
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0067, min=-32.0978, max=10.1335
 - After clipping (round 1): mu=-0.0163, std=0.5436, min=-3.0616, max=2.9789
 - After clipping (round 2): mu=-0.0165, std=0.5106, min=-1.6472, max=1.6146
 - After clipping (round 3): mu=-0.0166, std=0.5069, min=-1.5483, max=1.5152
 - After clipping (round 4): mu=-0.0167, std=0.5064, min=-1.5373, max=1.5040
 - After clipping (round 5): mu=-0.0167, std=0.5064, min=-1.5360, max=1.5026
 - Random Projection: mu=0.0000, std=0.0226
[Layer 23]
 - Before clipping: mu=-0.0310, std=1.0098, min=-32.4177, max=9.9414
 - After clipping (round 1): mu=-0.0061, std=0.5259, min=-3.0605, max=2.9984
 - After clipping (round 2): mu=-0.0060, std=0.4924, min=-1.5838, max=1.5715
 - After clipping (round 3): mu=-0.0062, std=0.4884, min=-1.4832, max=1.4712
 - After clipping (round 4): mu=-0.0062, std=0.4879, min=-1.4714, max=1.4590
 - After clipping (round 5): mu=-0.0062, std=0.4878, min=-1.4698, max=1.4574
 - Random Projection: mu=0.0000, std=0.0218
Random projections initialized.
[# API Calls 50] loss: 0.3948. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 100] loss: 0.3832. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4278. Dev perf: 0.7812. Best dev perf: 0.7812
********* Done *********
[# API Calls 150] loss: 0.3585. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 200] loss: 0.3499. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4313. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 250] loss: 0.3427. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 300] loss: 0.3373. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.42. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 350] loss: 0.3329. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 400] loss: 0.33. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4055. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 450] loss: 0.3257. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 500] loss: 0.3233. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3922. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 550] loss: 0.3215. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 600] loss: 0.3093. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3792. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 650] loss: 0.3132. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 700] loss: 0.3021. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3849. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 750] loss: 0.2992. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 800] loss: 0.2986. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3866. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 850] loss: 0.2884. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 900] loss: 0.2879. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3828. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 950] loss: 0.2824. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 1000] loss: 0.2741. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3734. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 1050] loss: 0.2762. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 1100] loss: 0.2647. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.366. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 1150] loss: 0.2541. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 1200] loss: 0.2523. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3623. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 1250] loss: 0.2474. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1300] loss: 0.2435. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3733. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 1350] loss: 0.2391. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 1400] loss: 0.2322. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3888. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1450] loss: 0.2404. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1500] loss: 0.2386. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3963. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1550] loss: 0.2301. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 1600] loss: 0.2238. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3867. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1650] loss: 0.2198. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 1700] loss: 0.2103. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3832. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 1750] loss: 0.2118. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 1800] loss: 0.2036. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3707. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 1850] loss: 0.2033. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 1900] loss: 0.1981. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3843. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 1950] loss: 0.202. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2000] loss: 0.2104. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3723. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 2050] loss: 0.2033. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2100] loss: 0.1868. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3815. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 2150] loss: 0.1803. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2200] loss: 0.1778. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3703. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 2250] loss: 0.1753. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2300] loss: 0.1745. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3673. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 2350] loss: 0.1678. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2400] loss: 0.1655. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3937. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 2450] loss: 0.1712. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2500] loss: 0.1641. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.363. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 2550] loss: 0.1651. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2600] loss: 0.1563. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3634. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 2650] loss: 0.1521. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2700] loss: 0.1506. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.342. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 2750] loss: 0.1478. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2800] loss: 0.1506. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3532. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 2850] loss: 0.1427. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2900] loss: 0.1422. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3525. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 2950] loss: 0.1699. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3000] loss: 0.1648. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3873. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 3050] loss: 0.1365. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3100] loss: 0.1343. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3804. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 3150] loss: 0.1317. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3200] loss: 0.1252. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3875. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 3250] loss: 0.1243. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3300] loss: 0.1217. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3871. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 3350] loss: 0.1188. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3400] loss: 0.1225. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3934. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 3450] loss: 0.1145. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3500] loss: 0.114. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3479. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 3550] loss: 0.1145. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3600] loss: 0.1127. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3505. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 3650] loss: 0.108. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3700] loss: 0.1032. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3552. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 3750] loss: 0.1027. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.1005. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3631. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 3850] loss: 0.0992. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3900] loss: 0.103. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.38. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 3950] loss: 0.1058. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4000] loss: 0.0932. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3482. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 4050] loss: 0.099. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4100] loss: 0.0954. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3876. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 4150] loss: 0.087. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.0829. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3531. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 4250] loss: 0.082. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0817. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3723. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 4350] loss: 0.0837. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.1604. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4588. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 4450] loss: 0.0826. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4500] loss: 0.0918. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5194. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 4550] loss: 0.0783. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.0789. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5069. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 4650] loss: 0.0708. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.0685. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5989. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 4750] loss: 0.0669. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.0634. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5762. Dev perf: 0.6875. Best dev perf: 0.875
********* Done *********
[# API Calls 4850] loss: 0.0723. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.0881. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.498. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 4950] loss: 0.0736. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.0761. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4972. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 5050] loss: 0.0724. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.0699. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4802. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 5150] loss: 0.0654. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0632. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4644. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 5250] loss: 0.0583. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0685. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.45. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 5350] loss: 0.0604. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.0587. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4735. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 5450] loss: 0.06. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0544. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5353. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 5550] loss: 0.0508. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0461. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5068. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 5650] loss: 0.0439. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0403. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5371. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 5750] loss: 0.0396. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0651. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6825. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 5850] loss: 0.0426. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0585. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7514. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 5950] loss: 0.0663. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0413. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7313. Dev perf: 0.6562. Best dev perf: 0.875
********* Done *********
[# API Calls 6050] loss: 0.0414. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0343. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6701. Dev perf: 0.6562. Best dev perf: 0.875
********* Done *********
[# API Calls 6150] loss: 0.0276. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0243. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6891. Dev perf: 0.6562. Best dev perf: 0.875
********* Done *********
[# API Calls 6250] loss: 0.059. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0414. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7163. Dev perf: 0.6875. Best dev perf: 0.875
********* Done *********
[# API Calls 6350] loss: 0.0256. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.0333. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6128. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 6450] loss: 0.0284. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.03. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6236. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 6550] loss: 0.0286. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0354. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6709. Dev perf: 0.6562. Best dev perf: 0.875
********* Done *********
[# API Calls 6650] loss: 0.0242. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0237. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5961. Dev perf: 0.6562. Best dev perf: 0.875
********* Done *********
[# API Calls 6750] loss: 0.027. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0465. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7826. Dev perf: 0.5938. Best dev perf: 0.875
********* Done *********
[# API Calls 6850] loss: 0.0536. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0386. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6252. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 6950] loss: 0.0169. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0157. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6021. Dev perf: 0.6875. Best dev perf: 0.875
********* Done *********
[# API Calls 7050] loss: 0.0141. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0136. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6873. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 7150] loss: 0.0122. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0106. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7234. Dev perf: 0.6875. Best dev perf: 0.875
********* Done *********
[# API Calls 7250] loss: 0.0484. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0164. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8343. Dev perf: 0.6562. Best dev perf: 0.875
********* Done *********
[# API Calls 7350] loss: 0.1716. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0278. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8942. Dev perf: 0.625. Best dev perf: 0.875
********* Done *********
[# API Calls 7450] loss: 0.0534. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0139. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.601. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 7550] loss: 0.0118. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0107. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6102. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 7650] loss: 0.0075. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 191.59126969575883 (mins)
===== seed: 60 finished! =====
===== task: yelpp finished! =====
===== task: trec start! =====
===== seed: 8 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset trec (/home/qingyang/.cache/huggingface/datasets/trec/default/0.0.0/a73cf536d323b519bbd0deb03f39161f7fa0890df817bd108f07212b0603e3bb)
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5479.47ex/s]
{'text': 'What then-derogatory term was applied to the painters Monet , Sisley , Pissarro , Renoir and Degas ?', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . <mask> question: What then-derogatory term was applied to the painters Monet , Sisley , Pissarro , Renoir and Degas ? ", 'target_text': 'entity'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 26.51ba/s]
Using custom data configuration default
Reusing dataset trec (/home/qingyang/.cache/huggingface/datasets/trec/default/0.0.0/a73cf536d323b519bbd0deb03f39161f7fa0890df817bd108f07212b0603e3bb)
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5569.66ex/s]
{'text': 'Who wrote the bestselling Missionary Travels and Researches in South Africa , published in 1857 ?', 'labels': 3, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . <mask> question: Who wrote the bestselling Missionary Travels and Researches in South Africa , published in 1857 ? ", 'target_text': 'human'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 35.21ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 52       | 46317  |
+------------------------+------------------------+----------+--------+

# of dev data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 52       | 19003  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0084, std=0.8525, min=-16.0056, max=17.4406
 - After clipping (round 1): mu=-0.0066, std=0.7228, min=-2.5660, max=2.5493
 - After clipping (round 2): mu=-0.0060, std=0.7165, min=-2.1749, max=2.1618
 - After clipping (round 3): mu=-0.0060, std=0.7161, min=-2.1555, max=2.1435
 - After clipping (round 4): mu=-0.0060, std=0.7161, min=-2.1544, max=2.1424
 - After clipping (round 5): mu=-0.0060, std=0.7161, min=-2.1543, max=2.1424
 - Random Projection: mu=0.0000, std=0.0320
[Layer 2]
 - Before clipping: mu=-0.0297, std=0.8795, min=-20.1581, max=15.5434
 - After clipping (round 1): mu=-0.0190, std=0.6949, min=-2.6684, max=2.6089
 - After clipping (round 2): mu=-0.0186, std=0.6843, min=-2.1037, max=2.0656
 - After clipping (round 3): mu=-0.0185, std=0.6835, min=-2.0715, max=2.0343
 - After clipping (round 4): mu=-0.0185, std=0.6835, min=-2.0691, max=2.0320
 - After clipping (round 5): mu=-0.0185, std=0.6835, min=-2.0689, max=2.0319
 - Random Projection: mu=0.0000, std=0.0306
[Layer 3]
 - Before clipping: mu=-0.0322, std=0.9166, min=-21.1197, max=13.6944
 - After clipping (round 1): mu=-0.0187, std=0.6932, min=-2.7820, max=2.7177
 - After clipping (round 2): mu=-0.0183, std=0.6803, min=-2.0982, max=2.0608
 - After clipping (round 3): mu=-0.0183, std=0.6794, min=-2.0593, max=2.0226
 - After clipping (round 4): mu=-0.0183, std=0.6793, min=-2.0564, max=2.0198
 - After clipping (round 5): mu=-0.0183, std=0.6793, min=-2.0562, max=2.0196
 - Random Projection: mu=0.0000, std=0.0304
[Layer 4]
 - Before clipping: mu=-0.0355, std=0.9247, min=-25.4062, max=11.0592
 - After clipping (round 1): mu=-0.0201, std=0.7041, min=-2.8094, max=2.7385
 - After clipping (round 2): mu=-0.0196, std=0.6925, min=-2.1324, max=2.0923
 - After clipping (round 3): mu=-0.0196, std=0.6917, min=-2.0972, max=2.0580
 - After clipping (round 4): mu=-0.0196, std=0.6917, min=-2.0948, max=2.0556
 - After clipping (round 5): mu=-0.0196, std=0.6917, min=-2.0946, max=2.0555
 - Random Projection: mu=0.0000, std=0.0309
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9439, min=-26.9461, max=7.6602
 - After clipping (round 1): mu=-0.0210, std=0.6887, min=-2.8708, max=2.7926
 - After clipping (round 2): mu=-0.0202, std=0.6752, min=-2.0870, max=2.0450
 - After clipping (round 3): mu=-0.0202, std=0.6742, min=-2.0459, max=2.0054
 - After clipping (round 4): mu=-0.0202, std=0.6742, min=-2.0429, max=2.0025
 - After clipping (round 5): mu=-0.0202, std=0.6742, min=-2.0427, max=2.0023
 - Random Projection: mu=0.0000, std=0.0301
[Layer 6]
 - Before clipping: mu=-0.0451, std=0.9618, min=-28.5476, max=6.1625
 - After clipping (round 1): mu=-0.0260, std=0.6981, min=-2.9305, max=2.8402
 - After clipping (round 2): mu=-0.0251, std=0.6831, min=-2.1204, max=2.0683
 - After clipping (round 3): mu=-0.0250, std=0.6819, min=-2.0745, max=2.0243
 - After clipping (round 4): mu=-0.0250, std=0.6818, min=-2.0708, max=2.0208
 - After clipping (round 5): mu=-0.0250, std=0.6818, min=-2.0705, max=2.0205
 - Random Projection: mu=0.0000, std=0.0305
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9768, min=-29.8243, max=6.0659
 - After clipping (round 1): mu=-0.0199, std=0.6613, min=-2.9712, max=2.8896
 - After clipping (round 2): mu=-0.0187, std=0.6415, min=-2.0037, max=1.9639
 - After clipping (round 3): mu=-0.0186, std=0.6397, min=-1.9434, max=1.9059
 - After clipping (round 4): mu=-0.0186, std=0.6396, min=-1.9378, max=1.9006
 - After clipping (round 5): mu=-0.0186, std=0.6395, min=-1.9373, max=1.9001
 - Random Projection: mu=0.0000, std=0.0286
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9938, min=-31.1095, max=6.6297
 - After clipping (round 1): mu=-0.0216, std=0.6324, min=-3.0246, max=2.9382
 - After clipping (round 2): mu=-0.0196, std=0.6080, min=-1.9189, max=1.8757
 - After clipping (round 3): mu=-0.0194, std=0.6054, min=-1.8435, max=1.8043
 - After clipping (round 4): mu=-0.0193, std=0.6051, min=-1.8354, max=1.7967
 - After clipping (round 5): mu=-0.0193, std=0.6050, min=-1.8346, max=1.7959
 - Random Projection: mu=0.0000, std=0.0271
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9882, min=-30.7429, max=5.8487
 - After clipping (round 1): mu=-0.0214, std=0.6053, min=-3.0075, max=2.9217
 - After clipping (round 2): mu=-0.0193, std=0.5784, min=-1.8373, max=1.7945
 - After clipping (round 3): mu=-0.0191, std=0.5754, min=-1.7546, max=1.7160
 - After clipping (round 4): mu=-0.0190, std=0.5751, min=-1.7453, max=1.7072
 - After clipping (round 5): mu=-0.0190, std=0.5750, min=-1.7442, max=1.7062
 - Random Projection: mu=0.0000, std=0.0257
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9941, min=-30.9452, max=7.2488
 - After clipping (round 1): mu=-0.0145, std=0.5770, min=-3.0188, max=2.9459
 - After clipping (round 2): mu=-0.0127, std=0.5470, min=-1.7455, max=1.7164
 - After clipping (round 3): mu=-0.0125, std=0.5435, min=-1.6536, max=1.6282
 - After clipping (round 4): mu=-0.0124, std=0.5431, min=-1.6430, max=1.6181
 - After clipping (round 5): mu=-0.0124, std=0.5431, min=-1.6418, max=1.6169
 - Random Projection: mu=0.0000, std=0.0243
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9535, min=-29.2906, max=7.1442
 - After clipping (round 1): mu=-0.0130, std=0.5629, min=-2.8943, max=2.8266
 - After clipping (round 2): mu=-0.0114, std=0.5347, min=-1.7017, max=1.6757
 - After clipping (round 3): mu=-0.0112, std=0.5315, min=-1.6156, max=1.5929
 - After clipping (round 4): mu=-0.0111, std=0.5311, min=-1.6057, max=1.5834
 - After clipping (round 5): mu=-0.0111, std=0.5311, min=-1.6045, max=1.5822
 - Random Projection: mu=0.0000, std=0.0238
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9700, min=-29.9285, max=6.6332
 - After clipping (round 1): mu=-0.0225, std=0.5727, min=-2.9536, max=2.8665
 - After clipping (round 2): mu=-0.0209, std=0.5441, min=-1.7406, max=1.6957
 - After clipping (round 3): mu=-0.0207, std=0.5407, min=-1.6531, max=1.6113
 - After clipping (round 4): mu=-0.0206, std=0.5403, min=-1.6429, max=1.6016
 - After clipping (round 5): mu=-0.0206, std=0.5403, min=-1.6416, max=1.6004
 - Random Projection: mu=0.0000, std=0.0242
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9762, min=-30.1370, max=6.2570
 - After clipping (round 1): mu=-0.0232, std=0.5910, min=-2.9725, max=2.8847
 - After clipping (round 2): mu=-0.0223, std=0.5677, min=-1.7963, max=1.7498
 - After clipping (round 3): mu=-0.0222, std=0.5652, min=-1.7254, max=1.6808
 - After clipping (round 4): mu=-0.0222, std=0.5649, min=-1.7177, max=1.6734
 - After clipping (round 5): mu=-0.0222, std=0.5649, min=-1.7169, max=1.6725
 - Random Projection: mu=0.0000, std=0.0253
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9818, min=-30.4980, max=5.3456
 - After clipping (round 1): mu=-0.0219, std=0.5913, min=-2.9881, max=2.9027
 - After clipping (round 2): mu=-0.0215, std=0.5711, min=-1.7958, max=1.7519
 - After clipping (round 3): mu=-0.0214, std=0.5691, min=-1.7346, max=1.6917
 - After clipping (round 4): mu=-0.0214, std=0.5689, min=-1.7287, max=1.6859
 - After clipping (round 5): mu=-0.0214, std=0.5689, min=-1.7281, max=1.6853
 - Random Projection: mu=0.0000, std=0.0254
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9941, min=-28.0711, max=5.6780
 - After clipping (round 1): mu=-0.0163, std=0.5977, min=-3.0243, max=2.9404
 - After clipping (round 2): mu=-0.0148, std=0.5751, min=-1.8093, max=1.7767
 - After clipping (round 3): mu=-0.0147, std=0.5730, min=-1.7401, max=1.7105
 - After clipping (round 4): mu=-0.0147, std=0.5728, min=-1.7337, max=1.7043
 - After clipping (round 5): mu=-0.0147, std=0.5728, min=-1.7331, max=1.7037
 - Random Projection: mu=0.0000, std=0.0256
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9992, min=-31.5325, max=5.9395
 - After clipping (round 1): mu=-0.0048, std=0.5937, min=-3.0304, max=2.9645
 - After clipping (round 2): mu=-0.0032, std=0.5715, min=-1.7860, max=1.7764
 - After clipping (round 3): mu=-0.0030, std=0.5695, min=-1.7178, max=1.7115
 - After clipping (round 4): mu=-0.0030, std=0.5693, min=-1.7117, max=1.7056
 - After clipping (round 5): mu=-0.0030, std=0.5693, min=-1.7111, max=1.7050
 - Random Projection: mu=0.0000, std=0.0255
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9759, min=-30.3686, max=5.8448
 - After clipping (round 1): mu=-0.0040, std=0.5840, min=-2.9592, max=2.8960
 - After clipping (round 2): mu=-0.0028, std=0.5629, min=-1.7559, max=1.7480
 - After clipping (round 3): mu=-0.0027, std=0.5610, min=-1.6916, max=1.6859
 - After clipping (round 4): mu=-0.0027, std=0.5608, min=-1.6858, max=1.6803
 - After clipping (round 5): mu=-0.0027, std=0.5608, min=-1.6852, max=1.6797
 - Random Projection: mu=0.0000, std=0.0251
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9737, min=-30.4545, max=5.4222
 - After clipping (round 1): mu=-0.0037, std=0.5869, min=-2.9517, max=2.8905
 - After clipping (round 2): mu=-0.0031, std=0.5656, min=-1.7643, max=1.7569
 - After clipping (round 3): mu=-0.0031, std=0.5636, min=-1.6998, max=1.6936
 - After clipping (round 4): mu=-0.0031, std=0.5634, min=-1.6940, max=1.6878
 - After clipping (round 5): mu=-0.0031, std=0.5634, min=-1.6934, max=1.6872
 - Random Projection: mu=0.0000, std=0.0252
[Layer 19]
 - Before clipping: mu=-0.0297, std=0.9610, min=-29.5212, max=5.2185
 - After clipping (round 1): mu=-0.0036, std=0.5752, min=-2.9126, max=2.8533
 - After clipping (round 2): mu=-0.0030, std=0.5533, min=-1.7292, max=1.7220
 - After clipping (round 3): mu=-0.0030, std=0.5513, min=-1.6630, max=1.6569
 - After clipping (round 4): mu=-0.0030, std=0.5511, min=-1.6570, max=1.6510
 - After clipping (round 5): mu=-0.0030, std=0.5511, min=-1.6564, max=1.6504
 - Random Projection: mu=0.0000, std=0.0246
[Layer 20]
 - Before clipping: mu=-0.0287, std=0.9463, min=-28.8314, max=5.0425
 - After clipping (round 1): mu=-0.0038, std=0.5692, min=-2.8675, max=2.8102
 - After clipping (round 2): mu=-0.0034, std=0.5465, min=-1.7115, max=1.7039
 - After clipping (round 3): mu=-0.0034, std=0.5445, min=-1.6430, max=1.6362
 - After clipping (round 4): mu=-0.0034, std=0.5443, min=-1.6370, max=1.6301
 - After clipping (round 5): mu=-0.0034, std=0.5443, min=-1.6364, max=1.6296
 - Random Projection: mu=0.0000, std=0.0243
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9891, min=-31.2381, max=5.0463
 - After clipping (round 1): mu=-0.0073, std=0.5654, min=-3.0007, max=2.9342
 - After clipping (round 2): mu=-0.0070, std=0.5399, min=-1.7036, max=1.6889
 - After clipping (round 3): mu=-0.0070, std=0.5376, min=-1.6267, max=1.6128
 - After clipping (round 4): mu=-0.0070, std=0.5374, min=-1.6199, max=1.6059
 - After clipping (round 5): mu=-0.0070, std=0.5374, min=-1.6192, max=1.6052
 - Random Projection: mu=0.0000, std=0.0240
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0061, min=-32.0892, max=4.8454
 - After clipping (round 1): mu=-0.0151, std=0.5379, min=-3.0598, max=2.9770
 - After clipping (round 2): mu=-0.0146, std=0.5105, min=-1.6288, max=1.5987
 - After clipping (round 3): mu=-0.0146, std=0.5081, min=-1.5460, max=1.5168
 - After clipping (round 4): mu=-0.0147, std=0.5078, min=-1.5388, max=1.5095
 - After clipping (round 5): mu=-0.0147, std=0.5078, min=-1.5382, max=1.5089
 - Random Projection: mu=0.0000, std=0.0227
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0091, min=-32.3965, max=5.0195
 - After clipping (round 1): mu=-0.0050, std=0.5284, min=-3.0583, max=2.9962
 - After clipping (round 2): mu=-0.0046, std=0.5002, min=-1.5901, max=1.5802
 - After clipping (round 3): mu=-0.0047, std=0.4977, min=-1.5054, max=1.4961
 - After clipping (round 4): mu=-0.0047, std=0.4974, min=-1.4978, max=1.4884
 - After clipping (round 5): mu=-0.0047, std=0.4974, min=-1.4971, max=1.4876
 - Random Projection: mu=0.0000, std=0.0222
Random projections initialized.
[# API Calls 50] loss: 3.3797. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 100] loss: 3.1887. Current perf: 0.1667. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 3.1787. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 150] loss: 2.8526. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 200] loss: 2.6278. Current perf: 0.1667. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.6633. Dev perf: 0.1458. Best dev perf: 0.1667
********* Done *********
[# API Calls 250] loss: 2.5614. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 300] loss: 2.5096. Current perf: 0.1458. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.5514. Dev perf: 0.125. Best dev perf: 0.1667
********* Done *********
[# API Calls 350] loss: 2.3907. Current perf: 0.1042. Best perf so far: 0.1667
[# API Calls 400] loss: 2.294. Current perf: 0.125. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.3445. Dev perf: 0.1042. Best dev perf: 0.1667
********* Done *********
[# API Calls 450] loss: 2.1943. Current perf: 0.1667. Best perf so far: 0.1875
[# API Calls 500] loss: 2.2142. Current perf: 0.1458. Best perf so far: 0.1875
********* Evaluated on dev set *********
Dev loss: 2.2565. Dev perf: 0.1042. Best dev perf: 0.1667
********* Done *********
[# API Calls 550] loss: 2.0966. Current perf: 0.2083. Best perf so far: 0.2083
[# API Calls 600] loss: 2.0817. Current perf: 0.1875. Best perf so far: 0.25
********* Evaluated on dev set *********
Dev loss: 2.1602. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 650] loss: 1.9786. Current perf: 0.2708. Best perf so far: 0.2708
[# API Calls 700] loss: 2.0398. Current perf: 0.25. Best perf so far: 0.2708
********* Evaluated on dev set *********
Dev loss: 2.1433. Dev perf: 0.1458. Best dev perf: 0.1667
********* Done *********
[# API Calls 750] loss: 1.9132. Current perf: 0.1875. Best perf so far: 0.2708
[# API Calls 800] loss: 1.9099. Current perf: 0.1875. Best perf so far: 0.2708
********* Evaluated on dev set *********
Dev loss: 2.0116. Dev perf: 0.1458. Best dev perf: 0.1667
********* Done *********
[# API Calls 850] loss: 1.8582. Current perf: 0.25. Best perf so far: 0.2708
[# API Calls 900] loss: 1.85. Current perf: 0.1875. Best perf so far: 0.2708
********* Evaluated on dev set *********
Dev loss: 1.9545. Dev perf: 0.2083. Best dev perf: 0.2083
********* Done *********
[# API Calls 950] loss: 1.7972. Current perf: 0.2292. Best perf so far: 0.2917
[# API Calls 1000] loss: 1.8145. Current perf: 0.25. Best perf so far: 0.2917
********* Evaluated on dev set *********
Dev loss: 1.9174. Dev perf: 0.1875. Best dev perf: 0.2083
********* Done *********
[# API Calls 1050] loss: 1.7643. Current perf: 0.2917. Best perf so far: 0.3125
[# API Calls 1100] loss: 1.7849. Current perf: 0.2708. Best perf so far: 0.3333
********* Evaluated on dev set *********
Dev loss: 1.8844. Dev perf: 0.1875. Best dev perf: 0.2083
********* Done *********
[# API Calls 1150] loss: 1.7744. Current perf: 0.2708. Best perf so far: 0.3333
[# API Calls 1200] loss: 1.7535. Current perf: 0.2917. Best perf so far: 0.3333
********* Evaluated on dev set *********
Dev loss: 1.8505. Dev perf: 0.2083. Best dev perf: 0.2083
********* Done *********
[# API Calls 1250] loss: 1.7472. Current perf: 0.3125. Best perf so far: 0.3333
[# API Calls 1300] loss: 1.7366. Current perf: 0.25. Best perf so far: 0.3542
********* Evaluated on dev set *********
Dev loss: 1.8437. Dev perf: 0.1667. Best dev perf: 0.2083
********* Done *********
[# API Calls 1350] loss: 1.7414. Current perf: 0.2917. Best perf so far: 0.3542
[# API Calls 1400] loss: 1.7446. Current perf: 0.25. Best perf so far: 0.3542
********* Evaluated on dev set *********
Dev loss: 1.846. Dev perf: 0.25. Best dev perf: 0.25
********* Done *********
[# API Calls 1450] loss: 1.7299. Current perf: 0.2917. Best perf so far: 0.3542
[# API Calls 1500] loss: 1.7149. Current perf: 0.3333. Best perf so far: 0.3542
********* Evaluated on dev set *********
Dev loss: 1.8362. Dev perf: 0.2292. Best dev perf: 0.25
********* Done *********
[# API Calls 1550] loss: 1.7172. Current perf: 0.3125. Best perf so far: 0.375
[# API Calls 1600] loss: 1.7074. Current perf: 0.3333. Best perf so far: 0.375
********* Evaluated on dev set *********
Dev loss: 1.8293. Dev perf: 0.2708. Best dev perf: 0.2708
********* Done *********
[# API Calls 1650] loss: 1.6906. Current perf: 0.375. Best perf so far: 0.4167
[# API Calls 1700] loss: 1.6996. Current perf: 0.3333. Best perf so far: 0.4167
********* Evaluated on dev set *********
Dev loss: 1.8299. Dev perf: 0.2292. Best dev perf: 0.2708
********* Done *********
[# API Calls 1750] loss: 1.6739. Current perf: 0.3542. Best perf so far: 0.4167
[# API Calls 1800] loss: 1.6978. Current perf: 0.2708. Best perf so far: 0.4167
********* Evaluated on dev set *********
Dev loss: 1.844. Dev perf: 0.25. Best dev perf: 0.2708
********* Done *********
[# API Calls 1850] loss: 1.6655. Current perf: 0.3958. Best perf so far: 0.4375
[# API Calls 1900] loss: 1.6593. Current perf: 0.3333. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.8321. Dev perf: 0.2292. Best dev perf: 0.2708
********* Done *********
[# API Calls 1950] loss: 1.6554. Current perf: 0.375. Best perf so far: 0.4375
[# API Calls 2000] loss: 1.6544. Current perf: 0.3333. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.8152. Dev perf: 0.2708. Best dev perf: 0.2708
********* Done *********
[# API Calls 2050] loss: 1.6564. Current perf: 0.3542. Best perf so far: 0.4375
[# API Calls 2100] loss: 1.6458. Current perf: 0.2917. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.8078. Dev perf: 0.25. Best dev perf: 0.2708
********* Done *********
[# API Calls 2150] loss: 1.6379. Current perf: 0.3125. Best perf so far: 0.4375
[# API Calls 2200] loss: 1.6287. Current perf: 0.3125. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.807. Dev perf: 0.25. Best dev perf: 0.2708
********* Done *********
[# API Calls 2250] loss: 1.621. Current perf: 0.3542. Best perf so far: 0.4375
[# API Calls 2300] loss: 1.6064. Current perf: 0.3333. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.796. Dev perf: 0.25. Best dev perf: 0.2708
********* Done *********
[# API Calls 2350] loss: 1.5941. Current perf: 0.375. Best perf so far: 0.4792
[# API Calls 2400] loss: 1.5875. Current perf: 0.3958. Best perf so far: 0.4792
********* Evaluated on dev set *********
Dev loss: 1.7726. Dev perf: 0.2708. Best dev perf: 0.2708
********* Done *********
[# API Calls 2450] loss: 1.5771. Current perf: 0.4583. Best perf so far: 0.5
[# API Calls 2500] loss: 1.5866. Current perf: 0.4375. Best perf so far: 0.5
********* Evaluated on dev set *********
Dev loss: 1.7847. Dev perf: 0.2292. Best dev perf: 0.2708
********* Done *********
[# API Calls 2550] loss: 1.6044. Current perf: 0.2917. Best perf so far: 0.5
[# API Calls 2600] loss: 1.5825. Current perf: 0.4583. Best perf so far: 0.5
********* Evaluated on dev set *********
Dev loss: 1.8288. Dev perf: 0.125. Best dev perf: 0.2708
********* Done *********
[# API Calls 2650] loss: 1.5689. Current perf: 0.4792. Best perf so far: 0.5208
[# API Calls 2700] loss: 1.5732. Current perf: 0.4583. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.7984. Dev perf: 0.2708. Best dev perf: 0.2708
********* Done *********
[# API Calls 2750] loss: 1.5472. Current perf: 0.4583. Best perf so far: 0.5208
[# API Calls 2800] loss: 1.5378. Current perf: 0.4792. Best perf so far: 0.5625
********* Evaluated on dev set *********
Dev loss: 1.7668. Dev perf: 0.3125. Best dev perf: 0.3125
********* Done *********
[# API Calls 2850] loss: 1.5193. Current perf: 0.5208. Best perf so far: 0.5625
[# API Calls 2900] loss: 1.5221. Current perf: 0.4375. Best perf so far: 0.5625
********* Evaluated on dev set *********
Dev loss: 1.7416. Dev perf: 0.3333. Best dev perf: 0.3333
********* Done *********
[# API Calls 2950] loss: 1.5189. Current perf: 0.4167. Best perf so far: 0.5625
[# API Calls 3000] loss: 1.5132. Current perf: 0.4375. Best perf so far: 0.5625
********* Evaluated on dev set *********
Dev loss: 1.7487. Dev perf: 0.3333. Best dev perf: 0.3333
********* Done *********
[# API Calls 3050] loss: 1.5065. Current perf: 0.5. Best perf so far: 0.5625
[# API Calls 3100] loss: 1.5569. Current perf: 0.3542. Best perf so far: 0.5625
********* Evaluated on dev set *********
Dev loss: 1.8306. Dev perf: 0.2708. Best dev perf: 0.3333
********* Done *********
[# API Calls 3150] loss: 1.6018. Current perf: 0.2917. Best perf so far: 0.5625
[# API Calls 3200] loss: 1.4897. Current perf: 0.4583. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.7715. Dev perf: 0.3125. Best dev perf: 0.3333
********* Done *********
[# API Calls 3250] loss: 1.4874. Current perf: 0.4583. Best perf so far: 0.5833
[# API Calls 3300] loss: 1.4868. Current perf: 0.4583. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.7897. Dev perf: 0.25. Best dev perf: 0.3333
********* Done *********
[# API Calls 3350] loss: 1.4772. Current perf: 0.5417. Best perf so far: 0.5833
[# API Calls 3400] loss: 1.4814. Current perf: 0.4375. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7492. Dev perf: 0.2917. Best dev perf: 0.3333
********* Done *********
[# API Calls 3450] loss: 1.5076. Current perf: 0.5208. Best perf so far: 0.6042
[# API Calls 3500] loss: 1.5436. Current perf: 0.3125. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.8744. Dev perf: 0.2083. Best dev perf: 0.3333
********* Done *********
[# API Calls 3550] loss: 1.4687. Current perf: 0.4375. Best perf so far: 0.6042
[# API Calls 3600] loss: 1.5119. Current perf: 0.3958. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.8205. Dev perf: 0.2292. Best dev perf: 0.3333
********* Done *********
[# API Calls 3650] loss: 1.4315. Current perf: 0.375. Best perf so far: 0.6042
[# API Calls 3700] loss: 1.4319. Current perf: 0.4792. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7891. Dev perf: 0.2917. Best dev perf: 0.3333
********* Done *********
[# API Calls 3750] loss: 1.4616. Current perf: 0.3958. Best perf so far: 0.6042
[# API Calls 3800] loss: 1.445. Current perf: 0.4792. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7719. Dev perf: 0.2917. Best dev perf: 0.3333
********* Done *********
[# API Calls 3850] loss: 1.4196. Current perf: 0.5208. Best perf so far: 0.6042
[# API Calls 3900] loss: 1.4192. Current perf: 0.4792. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7616. Dev perf: 0.2708. Best dev perf: 0.3333
********* Done *********
[# API Calls 3950] loss: 1.434. Current perf: 0.5417. Best perf so far: 0.6042
[# API Calls 4000] loss: 1.4143. Current perf: 0.4583. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7464. Dev perf: 0.2917. Best dev perf: 0.3333
********* Done *********
[# API Calls 4050] loss: 1.4417. Current perf: 0.4583. Best perf so far: 0.625
[# API Calls 4100] loss: 1.4113. Current perf: 0.5625. Best perf so far: 0.625
********* Evaluated on dev set *********
Dev loss: 1.7677. Dev perf: 0.3125. Best dev perf: 0.3333
********* Done *********
[# API Calls 4150] loss: 1.435. Current perf: 0.4583. Best perf so far: 0.625
[# API Calls 4200] loss: 1.3762. Current perf: 0.4583. Best perf so far: 0.625
********* Evaluated on dev set *********
Dev loss: 1.7532. Dev perf: 0.3333. Best dev perf: 0.3333
********* Done *********
[# API Calls 4250] loss: 1.3719. Current perf: 0.4792. Best perf so far: 0.625
[# API Calls 4300] loss: 1.3371. Current perf: 0.6042. Best perf so far: 0.6458
********* Evaluated on dev set *********
Dev loss: 1.6963. Dev perf: 0.375. Best dev perf: 0.375
********* Done *********
[# API Calls 4350] loss: 1.3558. Current perf: 0.5625. Best perf so far: 0.6667
[# API Calls 4400] loss: 1.3216. Current perf: 0.5833. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 1.7029. Dev perf: 0.375. Best dev perf: 0.375
********* Done *********
[# API Calls 4450] loss: 1.3113. Current perf: 0.5417. Best perf so far: 0.6667
[# API Calls 4500] loss: 1.3658. Current perf: 0.4375. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 1.7296. Dev perf: 0.3125. Best dev perf: 0.375
********* Done *********
[# API Calls 4550] loss: 1.3386. Current perf: 0.6042. Best perf so far: 0.6667
[# API Calls 4600] loss: 1.3591. Current perf: 0.5. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 1.7009. Dev perf: 0.2917. Best dev perf: 0.375
********* Done *********
[# API Calls 4650] loss: 1.3365. Current perf: 0.5208. Best perf so far: 0.6667
[# API Calls 4700] loss: 1.3553. Current perf: 0.5833. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 1.6842. Dev perf: 0.375. Best dev perf: 0.375
********* Done *********
[# API Calls 4750] loss: 1.3525. Current perf: 0.5208. Best perf so far: 0.6667
[# API Calls 4800] loss: 1.3407. Current perf: 0.625. Best perf so far: 0.6875
********* Evaluated on dev set *********
Dev loss: 1.6799. Dev perf: 0.3125. Best dev perf: 0.375
********* Done *********
[# API Calls 4850] loss: 1.3702. Current perf: 0.6042. Best perf so far: 0.6875
[# API Calls 4900] loss: 1.3984. Current perf: 0.6042. Best perf so far: 0.6875
********* Evaluated on dev set *********
Dev loss: 1.6981. Dev perf: 0.3333. Best dev perf: 0.375
********* Done *********
[# API Calls 4950] loss: 1.4222. Current perf: 0.5208. Best perf so far: 0.6875
[# API Calls 5000] loss: 1.4813. Current perf: 0.375. Best perf so far: 0.6875
********* Evaluated on dev set *********
Dev loss: 1.8517. Dev perf: 0.2083. Best dev perf: 0.375
********* Done *********
[# API Calls 5050] loss: 1.4158. Current perf: 0.4792. Best perf so far: 0.6875
[# API Calls 5100] loss: 1.3365. Current perf: 0.6042. Best perf so far: 0.6875
********* Evaluated on dev set *********
Dev loss: 1.7041. Dev perf: 0.2917. Best dev perf: 0.375
********* Done *********
[# API Calls 5150] loss: 1.4575. Current perf: 0.4583. Best perf so far: 0.6875
[# API Calls 5200] loss: 1.3076. Current perf: 0.6458. Best perf so far: 0.7083
********* Evaluated on dev set *********
Dev loss: 1.7107. Dev perf: 0.2917. Best dev perf: 0.375
********* Done *********
[# API Calls 5250] loss: 1.2839. Current perf: 0.5833. Best perf so far: 0.7083
[# API Calls 5300] loss: 1.2534. Current perf: 0.6042. Best perf so far: 0.7083
********* Evaluated on dev set *********
Dev loss: 1.6821. Dev perf: 0.3125. Best dev perf: 0.375
********* Done *********
[# API Calls 5350] loss: 1.3015. Current perf: 0.5208. Best perf so far: 0.7083
[# API Calls 5400] loss: 1.3015. Current perf: 0.5. Best perf so far: 0.7292
********* Evaluated on dev set *********
Dev loss: 1.7212. Dev perf: 0.25. Best dev perf: 0.375
********* Done *********
[# API Calls 5450] loss: 1.4067. Current perf: 0.5. Best perf so far: 0.7292
[# API Calls 5500] loss: 1.3421. Current perf: 0.4792. Best perf so far: 0.7292
********* Evaluated on dev set *********
Dev loss: 1.7054. Dev perf: 0.3333. Best dev perf: 0.375
********* Done *********
[# API Calls 5550] loss: 1.313. Current perf: 0.5. Best perf so far: 0.7292
[# API Calls 5600] loss: 1.2588. Current perf: 0.625. Best perf so far: 0.7292
********* Evaluated on dev set *********
Dev loss: 1.6553. Dev perf: 0.375. Best dev perf: 0.375
********* Done *********
[# API Calls 5650] loss: 1.2401. Current perf: 0.6042. Best perf so far: 0.7292
[# API Calls 5700] loss: 1.2347. Current perf: 0.5417. Best perf so far: 0.7292
********* Evaluated on dev set *********
Dev loss: 1.7256. Dev perf: 0.3333. Best dev perf: 0.375
********* Done *********
[# API Calls 5750] loss: 1.2045. Current perf: 0.625. Best perf so far: 0.7292
[# API Calls 5800] loss: 1.2039. Current perf: 0.5625. Best perf so far: 0.7292
********* Evaluated on dev set *********
Dev loss: 1.6968. Dev perf: 0.3542. Best dev perf: 0.375
********* Done *********
[# API Calls 5850] loss: 1.3805. Current perf: 0.5. Best perf so far: 0.7292
[# API Calls 5900] loss: 1.2119. Current perf: 0.5625. Best perf so far: 0.7292
********* Evaluated on dev set *********
Dev loss: 1.7736. Dev perf: 0.3125. Best dev perf: 0.375
********* Done *********
[# API Calls 5950] loss: 1.2867. Current perf: 0.5. Best perf so far: 0.7292
[# API Calls 6000] loss: 1.2155. Current perf: 0.4792. Best perf so far: 0.7292
********* Evaluated on dev set *********
Dev loss: 1.7121. Dev perf: 0.375. Best dev perf: 0.375
********* Done *********
[# API Calls 6050] loss: 1.1937. Current perf: 0.625. Best perf so far: 0.7292
[# API Calls 6100] loss: 1.1594. Current perf: 0.6667. Best perf so far: 0.7292
********* Evaluated on dev set *********
Dev loss: 1.6951. Dev perf: 0.4167. Best dev perf: 0.4167
********* Done *********
[# API Calls 6150] loss: 1.2149. Current perf: 0.6875. Best perf so far: 0.7292
[# API Calls 6200] loss: 1.1484. Current perf: 0.6875. Best perf so far: 0.7292
********* Evaluated on dev set *********
Dev loss: 1.7176. Dev perf: 0.3333. Best dev perf: 0.4167
********* Done *********
[# API Calls 6250] loss: 1.1483. Current perf: 0.6458. Best perf so far: 0.7292
[# API Calls 6300] loss: 1.2185. Current perf: 0.5833. Best perf so far: 0.7292
********* Evaluated on dev set *********
Dev loss: 1.7613. Dev perf: 0.3542. Best dev perf: 0.4167
********* Done *********
[# API Calls 6350] loss: 1.1146. Current perf: 0.7083. Best perf so far: 0.75
[# API Calls 6400] loss: 1.2308. Current perf: 0.6042. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.7662. Dev perf: 0.3542. Best dev perf: 0.4167
********* Done *********
[# API Calls 6450] loss: 1.1961. Current perf: 0.6042. Best perf so far: 0.75
[# API Calls 6500] loss: 1.1912. Current perf: 0.5. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.7875. Dev perf: 0.4167. Best dev perf: 0.4167
********* Done *********
[# API Calls 6550] loss: 1.2243. Current perf: 0.5833. Best perf so far: 0.75
[# API Calls 6600] loss: 1.1606. Current perf: 0.625. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.749. Dev perf: 0.375. Best dev perf: 0.4167
********* Done *********
[# API Calls 6650] loss: 1.0925. Current perf: 0.6875. Best perf so far: 0.75
[# API Calls 6700] loss: 1.0623. Current perf: 0.7083. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.6769. Dev perf: 0.3958. Best dev perf: 0.4167
********* Done *********
[# API Calls 6750] loss: 1.0551. Current perf: 0.6458. Best perf so far: 0.75
[# API Calls 6800] loss: 1.0177. Current perf: 0.7083. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.6315. Dev perf: 0.4167. Best dev perf: 0.4167
********* Done *********
[# API Calls 6850] loss: 1.0847. Current perf: 0.6458. Best perf so far: 0.75
[# API Calls 6900] loss: 1.1233. Current perf: 0.6875. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.6865. Dev perf: 0.4167. Best dev perf: 0.4167
********* Done *********
[# API Calls 6950] loss: 1.1744. Current perf: 0.5. Best perf so far: 0.75
[# API Calls 7000] loss: 1.1174. Current perf: 0.5625. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.7661. Dev perf: 0.4167. Best dev perf: 0.4167
********* Done *********
[# API Calls 7050] loss: 1.1223. Current perf: 0.6458. Best perf so far: 0.75
[# API Calls 7100] loss: 1.0254. Current perf: 0.6667. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.7498. Dev perf: 0.375. Best dev perf: 0.4167
********* Done *********
[# API Calls 7150] loss: 1.0155. Current perf: 0.7292. Best perf so far: 0.75
[# API Calls 7200] loss: 0.9564. Current perf: 0.7292. Best perf so far: 0.7708
********* Evaluated on dev set *********
Dev loss: 1.7392. Dev perf: 0.4375. Best dev perf: 0.4375
********* Done *********
[# API Calls 7250] loss: 0.9868. Current perf: 0.7292. Best perf so far: 0.7708
[# API Calls 7300] loss: 1.0302. Current perf: 0.7083. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 1.7817. Dev perf: 0.3958. Best dev perf: 0.4375
********* Done *********
[# API Calls 7350] loss: 1.0818. Current perf: 0.5417. Best perf so far: 0.8125
[# API Calls 7400] loss: 1.0553. Current perf: 0.5625. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 2.0418. Dev perf: 0.3333. Best dev perf: 0.4375
********* Done *********
[# API Calls 7450] loss: 0.9878. Current perf: 0.7083. Best perf so far: 0.8125
[# API Calls 7500] loss: 1.0135. Current perf: 0.6875. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 1.8084. Dev perf: 0.3542. Best dev perf: 0.4375
********* Done *********
[# API Calls 7550] loss: 0.9603. Current perf: 0.5833. Best perf so far: 0.8125
[# API Calls 7600] loss: 0.9406. Current perf: 0.7083. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 1.813. Dev perf: 0.375. Best dev perf: 0.4375
********* Done *********
[# API Calls 7650] loss: 0.9154. Current perf: 0.7292. Best perf so far: 0.8125
Done. Elapsed time: 35.949898147583006 (mins)
===== seed: 8 finished! =====
===== seed: 13 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset trec (/home/qingyang/.cache/huggingface/datasets/trec/default/0.0.0/a73cf536d323b519bbd0deb03f39161f7fa0890df817bd108f07212b0603e3bb)
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5649.53ex/s]
{'text': 'What 2th-century American poet wrote a four-volume biography of Abraham Lincoln ?', 'labels': 3, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . <mask> question: What 2th-century American poet wrote a four-volume biography of Abraham Lincoln ? ", 'target_text': 'human'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 28.15ba/s]
Using custom data configuration default
Reusing dataset trec (/home/qingyang/.cache/huggingface/datasets/trec/default/0.0.0/a73cf536d323b519bbd0deb03f39161f7fa0890df817bd108f07212b0603e3bb)
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5808.11ex/s]
{'text': 'What Hermann Hesse book gave its name to a rock group ?', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . <mask> question: What Hermann Hesse book gave its name to a rock group ? ", 'target_text': 'entity'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 35.18ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 52       | 19003  |
+------------------------+------------------------+----------+--------+

# of dev data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 52       | 46317  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0082, std=0.8494, min=-16.0044, max=17.4536
 - After clipping (round 1): mu=-0.0064, std=0.7120, min=-2.5563, max=2.5399
 - After clipping (round 2): mu=-0.0057, std=0.7048, min=-2.1422, max=2.1295
 - After clipping (round 3): mu=-0.0057, std=0.7043, min=-2.1202, max=2.1087
 - After clipping (round 4): mu=-0.0057, std=0.7043, min=-2.1187, max=2.1073
 - After clipping (round 5): mu=-0.0057, std=0.7043, min=-2.1186, max=2.1072
 - Random Projection: mu=0.0000, std=0.0315
[Layer 2]
 - Before clipping: mu=-0.0296, std=0.8783, min=-20.0951, max=15.2610
 - After clipping (round 1): mu=-0.0189, std=0.6871, min=-2.6645, max=2.6053
 - After clipping (round 2): mu=-0.0183, std=0.6756, min=-2.0803, max=2.0426
 - After clipping (round 3): mu=-0.0183, std=0.6747, min=-2.0451, max=2.0085
 - After clipping (round 4): mu=-0.0183, std=0.6746, min=-2.0424, max=2.0058
 - After clipping (round 5): mu=-0.0183, std=0.6746, min=-2.0422, max=2.0056
 - Random Projection: mu=0.0000, std=0.0302
[Layer 3]
 - Before clipping: mu=-0.0321, std=0.9163, min=-21.0852, max=13.5707
 - After clipping (round 1): mu=-0.0187, std=0.6912, min=-2.7809, max=2.7167
 - After clipping (round 2): mu=-0.0182, std=0.6780, min=-2.0922, max=2.0549
 - After clipping (round 3): mu=-0.0182, std=0.6770, min=-2.0523, max=2.0158
 - After clipping (round 4): mu=-0.0182, std=0.6769, min=-2.0493, max=2.0128
 - After clipping (round 5): mu=-0.0182, std=0.6769, min=-2.0490, max=2.0126
 - Random Projection: mu=0.0000, std=0.0303
[Layer 4]
 - Before clipping: mu=-0.0354, std=0.9240, min=-25.3649, max=10.3629
 - After clipping (round 1): mu=-0.0202, std=0.7043, min=-2.8073, max=2.7364
 - After clipping (round 2): mu=-0.0197, std=0.6926, min=-2.1331, max=2.0926
 - After clipping (round 3): mu=-0.0197, std=0.6918, min=-2.0975, max=2.0581
 - After clipping (round 4): mu=-0.0197, std=0.6917, min=-2.0950, max=2.0556
 - After clipping (round 5): mu=-0.0197, std=0.6917, min=-2.0949, max=2.0554
 - Random Projection: mu=0.0000, std=0.0309
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9433, min=-26.8464, max=8.1781
 - After clipping (round 1): mu=-0.0210, std=0.6860, min=-2.8690, max=2.7908
 - After clipping (round 2): mu=-0.0203, std=0.6726, min=-2.0790, max=2.0369
 - After clipping (round 3): mu=-0.0203, std=0.6716, min=-2.0380, max=1.9974
 - After clipping (round 4): mu=-0.0203, std=0.6715, min=-2.0351, max=1.9946
 - After clipping (round 5): mu=-0.0203, std=0.6715, min=-2.0349, max=1.9943
 - Random Projection: mu=0.0000, std=0.0300
[Layer 6]
 - Before clipping: mu=-0.0452, std=0.9616, min=-28.3719, max=6.1762
 - After clipping (round 1): mu=-0.0261, std=0.6973, min=-2.9299, max=2.8396
 - After clipping (round 2): mu=-0.0253, std=0.6826, min=-2.1181, max=2.0659
 - After clipping (round 3): mu=-0.0252, std=0.6814, min=-2.0731, max=2.0225
 - After clipping (round 4): mu=-0.0252, std=0.6813, min=-2.0695, max=2.0190
 - After clipping (round 5): mu=-0.0252, std=0.6813, min=-2.0692, max=2.0188
 - Random Projection: mu=0.0000, std=0.0305
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9767, min=-29.8017, max=5.8495
 - After clipping (round 1): mu=-0.0201, std=0.6616, min=-2.9711, max=2.8894
 - After clipping (round 2): mu=-0.0190, std=0.6421, min=-2.0050, max=1.9647
 - After clipping (round 3): mu=-0.0189, std=0.6403, min=-1.9453, max=1.9072
 - After clipping (round 4): mu=-0.0189, std=0.6401, min=-1.9398, max=1.9020
 - After clipping (round 5): mu=-0.0189, std=0.6401, min=-1.9393, max=1.9015
 - Random Projection: mu=0.0000, std=0.0286
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9940, min=-31.0797, max=6.9930
 - After clipping (round 1): mu=-0.0219, std=0.6318, min=-3.0254, max=2.9389
 - After clipping (round 2): mu=-0.0199, std=0.6081, min=-1.9174, max=1.8736
 - After clipping (round 3): mu=-0.0197, std=0.6056, min=-1.8440, max=1.8043
 - After clipping (round 4): mu=-0.0196, std=0.6053, min=-1.8365, max=1.7971
 - After clipping (round 5): mu=-0.0196, std=0.6053, min=-1.8356, max=1.7963
 - Random Projection: mu=0.0000, std=0.0271
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9882, min=-30.7391, max=6.2812
 - After clipping (round 1): mu=-0.0218, std=0.6122, min=-3.0076, max=2.9217
 - After clipping (round 2): mu=-0.0197, std=0.5862, min=-1.8585, max=1.8150
 - After clipping (round 3): mu=-0.0195, std=0.5834, min=-1.7783, max=1.7389
 - After clipping (round 4): mu=-0.0194, std=0.5830, min=-1.7695, max=1.7306
 - After clipping (round 5): mu=-0.0194, std=0.5830, min=-1.7685, max=1.7296
 - Random Projection: mu=0.0000, std=0.0261
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9941, min=-30.9115, max=5.9566
 - After clipping (round 1): mu=-0.0148, std=0.5852, min=-3.0188, max=2.9458
 - After clipping (round 2): mu=-0.0131, std=0.5563, min=-1.7706, max=1.7409
 - After clipping (round 3): mu=-0.0128, std=0.5531, min=-1.6820, max=1.6559
 - After clipping (round 4): mu=-0.0128, std=0.5527, min=-1.6722, max=1.6465
 - After clipping (round 5): mu=-0.0128, std=0.5527, min=-1.6710, max=1.6454
 - Random Projection: mu=0.0000, std=0.0247
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9541, min=-29.2645, max=6.3591
 - After clipping (round 1): mu=-0.0132, std=0.5709, min=-2.8962, max=2.8284
 - After clipping (round 2): mu=-0.0117, std=0.5436, min=-1.7260, max=1.6996
 - After clipping (round 3): mu=-0.0115, std=0.5406, min=-1.6424, max=1.6191
 - After clipping (round 4): mu=-0.0114, std=0.5402, min=-1.6332, max=1.6102
 - After clipping (round 5): mu=-0.0114, std=0.5402, min=-1.6321, max=1.6092
 - Random Projection: mu=0.0000, std=0.0242
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9704, min=-29.9083, max=6.3022
 - After clipping (round 1): mu=-0.0228, std=0.5826, min=-2.9549, max=2.8677
 - After clipping (round 2): mu=-0.0212, std=0.5550, min=-1.7707, max=1.7252
 - After clipping (round 3): mu=-0.0210, std=0.5519, min=-1.6862, max=1.6438
 - After clipping (round 4): mu=-0.0210, std=0.5515, min=-1.6767, max=1.6347
 - After clipping (round 5): mu=-0.0210, std=0.5515, min=-1.6756, max=1.6336
 - Random Projection: mu=0.0000, std=0.0247
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9764, min=-30.1267, max=5.9393
 - After clipping (round 1): mu=-0.0235, std=0.5993, min=-2.9730, max=2.8852
 - After clipping (round 2): mu=-0.0226, std=0.5767, min=-1.8215, max=1.7745
 - After clipping (round 3): mu=-0.0225, std=0.5743, min=-1.7527, max=1.7075
 - After clipping (round 4): mu=-0.0225, std=0.5741, min=-1.7454, max=1.7005
 - After clipping (round 5): mu=-0.0225, std=0.5740, min=-1.7446, max=1.6997
 - Random Projection: mu=0.0000, std=0.0257
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9818, min=-30.5057, max=5.2647
 - After clipping (round 1): mu=-0.0222, std=0.5979, min=-2.9882, max=2.9028
 - After clipping (round 2): mu=-0.0217, std=0.5781, min=-1.8158, max=1.7715
 - After clipping (round 3): mu=-0.0216, std=0.5763, min=-1.7561, max=1.7127
 - After clipping (round 4): mu=-0.0216, std=0.5761, min=-1.7505, max=1.7072
 - After clipping (round 5): mu=-0.0216, std=0.5761, min=-1.7500, max=1.7067
 - Random Projection: mu=0.0000, std=0.0258
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9940, min=-28.0965, max=5.7561
 - After clipping (round 1): mu=-0.0167, std=0.6056, min=-3.0241, max=2.9401
 - After clipping (round 2): mu=-0.0152, std=0.5836, min=-1.8336, max=1.8002
 - After clipping (round 3): mu=-0.0151, std=0.5816, min=-1.7661, max=1.7357
 - After clipping (round 4): mu=-0.0151, std=0.5814, min=-1.7600, max=1.7298
 - After clipping (round 5): mu=-0.0151, std=0.5814, min=-1.7594, max=1.7292
 - Random Projection: mu=0.0000, std=0.0260
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9991, min=-31.5326, max=5.8822
 - After clipping (round 1): mu=-0.0052, std=0.6014, min=-3.0304, max=2.9644
 - After clipping (round 2): mu=-0.0036, std=0.5798, min=-1.8092, max=1.7989
 - After clipping (round 3): mu=-0.0035, std=0.5779, min=-1.7429, max=1.7357
 - After clipping (round 4): mu=-0.0035, std=0.5777, min=-1.7371, max=1.7301
 - After clipping (round 5): mu=-0.0035, std=0.5777, min=-1.7366, max=1.7296
 - Random Projection: mu=0.0000, std=0.0258
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9763, min=-30.3675, max=5.8489
 - After clipping (round 1): mu=-0.0043, std=0.5913, min=-2.9606, max=2.8974
 - After clipping (round 2): mu=-0.0031, std=0.5708, min=-1.7782, max=1.7697
 - After clipping (round 3): mu=-0.0031, std=0.5690, min=-1.7154, max=1.7092
 - After clipping (round 4): mu=-0.0031, std=0.5688, min=-1.7099, max=1.7038
 - After clipping (round 5): mu=-0.0031, std=0.5688, min=-1.7094, max=1.7033
 - Random Projection: mu=0.0000, std=0.0254
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9743, min=-30.4457, max=5.4595
 - After clipping (round 1): mu=-0.0040, std=0.5963, min=-2.9536, max=2.8923
 - After clipping (round 2): mu=-0.0034, std=0.5757, min=-1.7930, max=1.7849
 - After clipping (round 3): mu=-0.0034, std=0.5739, min=-1.7305, max=1.7236
 - After clipping (round 4): mu=-0.0034, std=0.5737, min=-1.7250, max=1.7182
 - After clipping (round 5): mu=-0.0034, std=0.5737, min=-1.7245, max=1.7177
 - Random Projection: mu=0.0000, std=0.0257
[Layer 19]
 - Before clipping: mu=-0.0297, std=0.9618, min=-29.5126, max=5.2455
 - After clipping (round 1): mu=-0.0039, std=0.5830, min=-2.9152, max=2.8558
 - After clipping (round 2): mu=-0.0033, std=0.5617, min=-1.7530, max=1.7452
 - After clipping (round 3): mu=-0.0033, std=0.5598, min=-1.6884, max=1.6818
 - After clipping (round 4): mu=-0.0033, std=0.5596, min=-1.6827, max=1.6761
 - After clipping (round 5): mu=-0.0033, std=0.5596, min=-1.6822, max=1.6756
 - Random Projection: mu=0.0000, std=0.0250
[Layer 20]
 - Before clipping: mu=-0.0287, std=0.9473, min=-28.9149, max=5.0598
 - After clipping (round 1): mu=-0.0041, std=0.5763, min=-2.8705, max=2.8131
 - After clipping (round 2): mu=-0.0036, std=0.5542, min=-1.7329, max=1.7248
 - After clipping (round 3): mu=-0.0036, std=0.5523, min=-1.6663, max=1.6590
 - After clipping (round 4): mu=-0.0036, std=0.5521, min=-1.6606, max=1.6533
 - After clipping (round 5): mu=-0.0036, std=0.5521, min=-1.6601, max=1.6528
 - Random Projection: mu=0.0000, std=0.0247
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9894, min=-31.2368, max=5.0237
 - After clipping (round 1): mu=-0.0075, std=0.5722, min=-3.0014, max=2.9350
 - After clipping (round 2): mu=-0.0071, std=0.5475, min=-1.7242, max=1.7092
 - After clipping (round 3): mu=-0.0071, std=0.5454, min=-1.6496, max=1.6353
 - After clipping (round 4): mu=-0.0071, std=0.5452, min=-1.6432, max=1.6290
 - After clipping (round 5): mu=-0.0071, std=0.5452, min=-1.6427, max=1.6284
 - Random Projection: mu=0.0000, std=0.0244
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0060, min=-32.0875, max=4.8857
 - After clipping (round 1): mu=-0.0152, std=0.5443, min=-3.0595, max=2.9766
 - After clipping (round 2): mu=-0.0147, std=0.5175, min=-1.6481, max=1.6178
 - After clipping (round 3): mu=-0.0147, std=0.5153, min=-1.5673, max=1.5379
 - After clipping (round 4): mu=-0.0148, std=0.5151, min=-1.5606, max=1.5312
 - After clipping (round 5): mu=-0.0148, std=0.5151, min=-1.5600, max=1.5305
 - Random Projection: mu=0.0000, std=0.0230
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0089, min=-32.3829, max=5.0644
 - After clipping (round 1): mu=-0.0050, std=0.5330, min=-3.0578, max=2.9957
 - After clipping (round 2): mu=-0.0046, std=0.5056, min=-1.6040, max=1.5939
 - After clipping (round 3): mu=-0.0047, std=0.5032, min=-1.5214, max=1.5121
 - After clipping (round 4): mu=-0.0047, std=0.5029, min=-1.5142, max=1.5048
 - After clipping (round 5): mu=-0.0047, std=0.5029, min=-1.5135, max=1.5041
 - Random Projection: mu=0.0000, std=0.0225
Random projections initialized.
[# API Calls 50] loss: 3.1251. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 100] loss: 2.9493. Current perf: 0.1667. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.8892. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 150] loss: 2.8186. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 200] loss: 2.68. Current perf: 0.1667. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.6248. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 250] loss: 2.5387. Current perf: 0.1458. Best perf so far: 0.1667
[# API Calls 300] loss: 2.4131. Current perf: 0.1458. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.3494. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 350] loss: 2.3518. Current perf: 0.1458. Best perf so far: 0.1667
[# API Calls 400] loss: 2.312. Current perf: 0.1667. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.2408. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 450] loss: 2.2053. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 500] loss: 2.1998. Current perf: 0.1667. Best perf so far: 0.1875
********* Evaluated on dev set *********
Dev loss: 2.1267. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 550] loss: 2.2451. Current perf: 0.1667. Best perf so far: 0.1875
[# API Calls 600] loss: 2.1557. Current perf: 0.1667. Best perf so far: 0.2083
********* Evaluated on dev set *********
Dev loss: 2.0778. Dev perf: 0.1458. Best dev perf: 0.1667
********* Done *********
[# API Calls 650] loss: 2.0784. Current perf: 0.2083. Best perf so far: 0.2083
[# API Calls 700] loss: 2.0567. Current perf: 0.1667. Best perf so far: 0.2083
********* Evaluated on dev set *********
Dev loss: 1.9979. Dev perf: 0.125. Best dev perf: 0.1667
********* Done *********
[# API Calls 750] loss: 1.9751. Current perf: 0.1875. Best perf so far: 0.2083
[# API Calls 800] loss: 1.9483. Current perf: 0.1875. Best perf so far: 0.2083
********* Evaluated on dev set *********
Dev loss: 1.8982. Dev perf: 0.1875. Best dev perf: 0.1875
********* Done *********
[# API Calls 850] loss: 1.8932. Current perf: 0.1667. Best perf so far: 0.2292
[# API Calls 900] loss: 1.8735. Current perf: 0.1667. Best perf so far: 0.2292
********* Evaluated on dev set *********
Dev loss: 1.8268. Dev perf: 0.2292. Best dev perf: 0.2292
********* Done *********
[# API Calls 950] loss: 1.8391. Current perf: 0.1875. Best perf so far: 0.25
[# API Calls 1000] loss: 1.8143. Current perf: 0.1667. Best perf so far: 0.25
********* Evaluated on dev set *********
Dev loss: 1.7819. Dev perf: 0.2708. Best dev perf: 0.2708
********* Done *********
[# API Calls 1050] loss: 1.7981. Current perf: 0.1667. Best perf so far: 0.25
[# API Calls 1100] loss: 1.7929. Current perf: 0.2292. Best perf so far: 0.2708
********* Evaluated on dev set *********
Dev loss: 1.78. Dev perf: 0.2708. Best dev perf: 0.2708
********* Done *********
[# API Calls 1150] loss: 1.7885. Current perf: 0.1875. Best perf so far: 0.2708
[# API Calls 1200] loss: 1.769. Current perf: 0.2292. Best perf so far: 0.2708
********* Evaluated on dev set *********
Dev loss: 1.775. Dev perf: 0.2708. Best dev perf: 0.2708
********* Done *********
[# API Calls 1250] loss: 1.7643. Current perf: 0.2917. Best perf so far: 0.3125
[# API Calls 1300] loss: 1.7364. Current perf: 0.2083. Best perf so far: 0.3125
********* Evaluated on dev set *********
Dev loss: 1.7812. Dev perf: 0.2917. Best dev perf: 0.2917
********* Done *********
[# API Calls 1350] loss: 1.7556. Current perf: 0.1875. Best perf so far: 0.3125
[# API Calls 1400] loss: 1.737. Current perf: 0.2292. Best perf so far: 0.3125
********* Evaluated on dev set *********
Dev loss: 1.7792. Dev perf: 0.1875. Best dev perf: 0.2917
********* Done *********
[# API Calls 1450] loss: 1.7426. Current perf: 0.2708. Best perf so far: 0.3333
[# API Calls 1500] loss: 1.7488. Current perf: 0.2083. Best perf so far: 0.3333
********* Evaluated on dev set *********
Dev loss: 1.7769. Dev perf: 0.3333. Best dev perf: 0.3333
********* Done *********
[# API Calls 1550] loss: 1.7378. Current perf: 0.25. Best perf so far: 0.3333
[# API Calls 1600] loss: 1.7383. Current perf: 0.3125. Best perf so far: 0.3542
********* Evaluated on dev set *********
Dev loss: 1.7834. Dev perf: 0.2708. Best dev perf: 0.3333
********* Done *********
[# API Calls 1650] loss: 1.7222. Current perf: 0.3542. Best perf so far: 0.3542
[# API Calls 1700] loss: 1.7112. Current perf: 0.3125. Best perf so far: 0.375
********* Evaluated on dev set *********
Dev loss: 1.7716. Dev perf: 0.2292. Best dev perf: 0.3333
********* Done *********
[# API Calls 1750] loss: 1.7097. Current perf: 0.3125. Best perf so far: 0.375
[# API Calls 1800] loss: 1.7112. Current perf: 0.3125. Best perf so far: 0.375
********* Evaluated on dev set *********
Dev loss: 1.7781. Dev perf: 0.1875. Best dev perf: 0.3333
********* Done *********
[# API Calls 1850] loss: 1.705. Current perf: 0.3333. Best perf so far: 0.375
[# API Calls 1900] loss: 1.6933. Current perf: 0.2708. Best perf so far: 0.375
********* Evaluated on dev set *********
Dev loss: 1.7595. Dev perf: 0.2083. Best dev perf: 0.3333
********* Done *********
[# API Calls 1950] loss: 1.692. Current perf: 0.2708. Best perf so far: 0.375
[# API Calls 2000] loss: 1.6967. Current perf: 0.2292. Best perf so far: 0.375
********* Evaluated on dev set *********
Dev loss: 1.7599. Dev perf: 0.2083. Best dev perf: 0.3333
********* Done *********
[# API Calls 2050] loss: 1.6825. Current perf: 0.2917. Best perf so far: 0.3958
[# API Calls 2100] loss: 1.7054. Current perf: 0.2083. Best perf so far: 0.3958
********* Evaluated on dev set *********
Dev loss: 1.8046. Dev perf: 0.25. Best dev perf: 0.3333
********* Done *********
[# API Calls 2150] loss: 1.6707. Current perf: 0.25. Best perf so far: 0.3958
[# API Calls 2200] loss: 1.6867. Current perf: 0.3542. Best perf so far: 0.3958
********* Evaluated on dev set *********
Dev loss: 1.8057. Dev perf: 0.2708. Best dev perf: 0.3333
********* Done *********
[# API Calls 2250] loss: 1.657. Current perf: 0.3542. Best perf so far: 0.4375
[# API Calls 2300] loss: 1.6551. Current perf: 0.3125. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.7765. Dev perf: 0.2708. Best dev perf: 0.3333
********* Done *********
[# API Calls 2350] loss: 1.6547. Current perf: 0.3125. Best perf so far: 0.4375
[# API Calls 2400] loss: 1.6408. Current perf: 0.2292. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.7697. Dev perf: 0.2083. Best dev perf: 0.3333
********* Done *********
[# API Calls 2450] loss: 1.7236. Current perf: 0.2708. Best perf so far: 0.4375
[# API Calls 2500] loss: 1.7209. Current perf: 0.25. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.7986. Dev perf: 0.25. Best dev perf: 0.3333
********* Done *********
[# API Calls 2550] loss: 1.6687. Current perf: 0.3125. Best perf so far: 0.4375
[# API Calls 2600] loss: 1.7353. Current perf: 0.25. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.7954. Dev perf: 0.125. Best dev perf: 0.3333
********* Done *********
[# API Calls 2650] loss: 1.6636. Current perf: 0.2708. Best perf so far: 0.4375
[# API Calls 2700] loss: 1.6514. Current perf: 0.375. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.7368. Dev perf: 0.25. Best dev perf: 0.3333
********* Done *********
[# API Calls 2750] loss: 1.6544. Current perf: 0.2917. Best perf so far: 0.4375
[# API Calls 2800] loss: 1.6582. Current perf: 0.3333. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.7296. Dev perf: 0.2292. Best dev perf: 0.3333
********* Done *********
[# API Calls 2850] loss: 1.64. Current perf: 0.375. Best perf so far: 0.4375
[# API Calls 2900] loss: 1.6508. Current perf: 0.2708. Best perf so far: 0.4375
********* Evaluated on dev set *********
Dev loss: 1.7385. Dev perf: 0.2708. Best dev perf: 0.3333
********* Done *********
[# API Calls 2950] loss: 1.6322. Current perf: 0.3125. Best perf so far: 0.4375
[# API Calls 3000] loss: 1.6381. Current perf: 0.3542. Best perf so far: 0.5
********* Evaluated on dev set *********
Dev loss: 1.7326. Dev perf: 0.2917. Best dev perf: 0.3333
********* Done *********
[# API Calls 3050] loss: 1.7032. Current perf: 0.375. Best perf so far: 0.5
[# API Calls 3100] loss: 1.613. Current perf: 0.3542. Best perf so far: 0.5
********* Evaluated on dev set *********
Dev loss: 1.7298. Dev perf: 0.3542. Best dev perf: 0.3542
********* Done *********
[# API Calls 3150] loss: 1.5377. Current perf: 0.3958. Best perf so far: 0.5417
[# API Calls 3200] loss: 1.5627. Current perf: 0.375. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.6961. Dev perf: 0.2917. Best dev perf: 0.3542
********* Done *********
[# API Calls 3250] loss: 1.5411. Current perf: 0.4583. Best perf so far: 0.5417
[# API Calls 3300] loss: 1.5437. Current perf: 0.4167. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7005. Dev perf: 0.2292. Best dev perf: 0.3542
********* Done *********
[# API Calls 3350] loss: 1.4988. Current perf: 0.4375. Best perf so far: 0.5417
[# API Calls 3400] loss: 1.5194. Current perf: 0.3958. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7248. Dev perf: 0.2708. Best dev perf: 0.3542
********* Done *********
[# API Calls 3450] loss: 1.7052. Current perf: 0.2917. Best perf so far: 0.5417
[# API Calls 3500] loss: 1.5423. Current perf: 0.4167. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7472. Dev perf: 0.2708. Best dev perf: 0.3542
********* Done *********
[# API Calls 3550] loss: 1.545. Current perf: 0.375. Best perf so far: 0.5417
[# API Calls 3600] loss: 1.4707. Current perf: 0.4375. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.6713. Dev perf: 0.2083. Best dev perf: 0.3542
********* Done *********
[# API Calls 3650] loss: 1.4808. Current perf: 0.5. Best perf so far: 0.5417
[# API Calls 3700] loss: 1.5139. Current perf: 0.3333. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7246. Dev perf: 0.2083. Best dev perf: 0.3542
********* Done *********
[# API Calls 3750] loss: 1.4563. Current perf: 0.4167. Best perf so far: 0.5417
[# API Calls 3800] loss: 1.4466. Current perf: 0.5208. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7241. Dev perf: 0.2917. Best dev perf: 0.3542
********* Done *********
[# API Calls 3850] loss: 1.442. Current perf: 0.4583. Best perf so far: 0.5417
[# API Calls 3900] loss: 1.5245. Current perf: 0.375. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.7416. Dev perf: 0.25. Best dev perf: 0.3542
********* Done *********
[# API Calls 3950] loss: 1.585. Current perf: 0.3542. Best perf so far: 0.6042
[# API Calls 4000] loss: 1.6116. Current perf: 0.4583. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.8503. Dev perf: 0.3333. Best dev perf: 0.3542
********* Done *********
[# API Calls 4050] loss: 1.5123. Current perf: 0.3958. Best perf so far: 0.6042
[# API Calls 4100] loss: 1.468. Current perf: 0.5208. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7168. Dev perf: 0.4167. Best dev perf: 0.4167
********* Done *********
[# API Calls 4150] loss: 1.5134. Current perf: 0.4792. Best perf so far: 0.6042
[# API Calls 4200] loss: 1.4372. Current perf: 0.5833. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6425. Dev perf: 0.3125. Best dev perf: 0.4167
********* Done *********
[# API Calls 4250] loss: 1.4401. Current perf: 0.4792. Best perf so far: 0.6042
[# API Calls 4300] loss: 1.4199. Current perf: 0.4792. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.651. Dev perf: 0.3125. Best dev perf: 0.4167
********* Done *********
[# API Calls 4350] loss: 1.4418. Current perf: 0.4583. Best perf so far: 0.6042
[# API Calls 4400] loss: 1.4752. Current perf: 0.4583. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.8309. Dev perf: 0.25. Best dev perf: 0.4167
********* Done *********
[# API Calls 4450] loss: 1.5713. Current perf: 0.3958. Best perf so far: 0.6042
[# API Calls 4500] loss: 1.5321. Current perf: 0.4583. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7223. Dev perf: 0.1875. Best dev perf: 0.4167
********* Done *********
[# API Calls 4550] loss: 1.4616. Current perf: 0.3333. Best perf so far: 0.6042
[# API Calls 4600] loss: 1.476. Current perf: 0.375. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7197. Dev perf: 0.2292. Best dev perf: 0.4167
********* Done *********
[# API Calls 4650] loss: 1.4583. Current perf: 0.3958. Best perf so far: 0.6042
[# API Calls 4700] loss: 1.4689. Current perf: 0.3542. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7032. Dev perf: 0.2292. Best dev perf: 0.4167
********* Done *********
[# API Calls 4750] loss: 1.3956. Current perf: 0.5208. Best perf so far: 0.6042
[# API Calls 4800] loss: 1.4122. Current perf: 0.4792. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.683. Dev perf: 0.2917. Best dev perf: 0.4167
********* Done *********
[# API Calls 4850] loss: 1.7143. Current perf: 0.2083. Best perf so far: 0.6042
[# API Calls 4900] loss: 1.4055. Current perf: 0.5208. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6566. Dev perf: 0.2292. Best dev perf: 0.4167
********* Done *********
[# API Calls 4950] loss: 1.6233. Current perf: 0.2708. Best perf so far: 0.6042
[# API Calls 5000] loss: 1.401. Current perf: 0.4167. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6671. Dev perf: 0.3542. Best dev perf: 0.4167
********* Done *********
[# API Calls 5050] loss: 1.4303. Current perf: 0.3542. Best perf so far: 0.6042
[# API Calls 5100] loss: 1.4122. Current perf: 0.3958. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.739. Dev perf: 0.2917. Best dev perf: 0.4167
********* Done *********
[# API Calls 5150] loss: 1.4319. Current perf: 0.3542. Best perf so far: 0.6042
[# API Calls 5200] loss: 1.4182. Current perf: 0.5208. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6688. Dev perf: 0.3333. Best dev perf: 0.4167
********* Done *********
[# API Calls 5250] loss: 1.4014. Current perf: 0.5208. Best perf so far: 0.6042
[# API Calls 5300] loss: 1.3821. Current perf: 0.5208. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6383. Dev perf: 0.3333. Best dev perf: 0.4167
********* Done *********
[# API Calls 5350] loss: 2.0067. Current perf: 0.3333. Best perf so far: 0.6042
[# API Calls 5400] loss: 1.4587. Current perf: 0.4375. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7504. Dev perf: 0.2917. Best dev perf: 0.4167
********* Done *********
[# API Calls 5450] loss: 1.4753. Current perf: 0.4792. Best perf so far: 0.6042
[# API Calls 5500] loss: 1.3458. Current perf: 0.3542. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6425. Dev perf: 0.2708. Best dev perf: 0.4167
********* Done *********
[# API Calls 5550] loss: 1.3608. Current perf: 0.375. Best perf so far: 0.6042
[# API Calls 5600] loss: 1.3778. Current perf: 0.3333. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6907. Dev perf: 0.2917. Best dev perf: 0.4167
********* Done *********
[# API Calls 5650] loss: 1.3403. Current perf: 0.4792. Best perf so far: 0.6042
[# API Calls 5700] loss: 1.3279. Current perf: 0.5. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.724. Dev perf: 0.1875. Best dev perf: 0.4167
********* Done *********
[# API Calls 5750] loss: 1.2919. Current perf: 0.5. Best perf so far: 0.6042
[# API Calls 5800] loss: 1.5197. Current perf: 0.3542. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.8543. Dev perf: 0.1875. Best dev perf: 0.4167
********* Done *********
[# API Calls 5850] loss: 1.8732. Current perf: 0.4167. Best perf so far: 0.6042
[# API Calls 5900] loss: 1.3648. Current perf: 0.5208. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6997. Dev perf: 0.3333. Best dev perf: 0.4167
********* Done *********
[# API Calls 5950] loss: 1.4275. Current perf: 0.3958. Best perf so far: 0.6042
[# API Calls 6000] loss: 1.328. Current perf: 0.4583. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.677. Dev perf: 0.2708. Best dev perf: 0.4167
********* Done *********
[# API Calls 6050] loss: 1.317. Current perf: 0.4167. Best perf so far: 0.6042
[# API Calls 6100] loss: 1.2657. Current perf: 0.5208. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6664. Dev perf: 0.3333. Best dev perf: 0.4167
********* Done *********
[# API Calls 6150] loss: 1.2405. Current perf: 0.5. Best perf so far: 0.6042
[# API Calls 6200] loss: 1.218. Current perf: 0.5208. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6194. Dev perf: 0.3125. Best dev perf: 0.4167
********* Done *********
[# API Calls 6250] loss: 1.2254. Current perf: 0.5208. Best perf so far: 0.6042
[# API Calls 6300] loss: 1.2108. Current perf: 0.6042. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6208. Dev perf: 0.2708. Best dev perf: 0.4167
********* Done *********
[# API Calls 6350] loss: 1.2261. Current perf: 0.5. Best perf so far: 0.6042
[# API Calls 6400] loss: 1.3744. Current perf: 0.4583. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6919. Dev perf: 0.25. Best dev perf: 0.4167
********* Done *********
[# API Calls 6450] loss: 1.3283. Current perf: 0.4583. Best perf so far: 0.6042
[# API Calls 6500] loss: 1.2475. Current perf: 0.4792. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6183. Dev perf: 0.2708. Best dev perf: 0.4167
********* Done *********
[# API Calls 6550] loss: 1.2131. Current perf: 0.5625. Best perf so far: 0.625
[# API Calls 6600] loss: 1.2176. Current perf: 0.6042. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 1.6456. Dev perf: 0.3958. Best dev perf: 0.4167
********* Done *********
[# API Calls 6650] loss: 1.2371. Current perf: 0.5. Best perf so far: 0.6667
[# API Calls 6700] loss: 1.1834. Current perf: 0.5833. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 1.6543. Dev perf: 0.3125. Best dev perf: 0.4167
********* Done *********
[# API Calls 6750] loss: 1.2565. Current perf: 0.5. Best perf so far: 0.6667
[# API Calls 6800] loss: 1.5429. Current perf: 0.3333. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 1.909. Dev perf: 0.2292. Best dev perf: 0.4167
********* Done *********
[# API Calls 6850] loss: 1.2155. Current perf: 0.5833. Best perf so far: 0.6667
[# API Calls 6900] loss: 1.2543. Current perf: 0.5. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 1.7323. Dev perf: 0.2917. Best dev perf: 0.4167
********* Done *********
[# API Calls 6950] loss: 1.218. Current perf: 0.5417. Best perf so far: 0.6667
[# API Calls 7000] loss: 1.2059. Current perf: 0.5833. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 1.8268. Dev perf: 0.25. Best dev perf: 0.4167
********* Done *********
[# API Calls 7050] loss: 1.1474. Current perf: 0.6042. Best perf so far: 0.7083
[# API Calls 7100] loss: 1.172. Current perf: 0.6458. Best perf so far: 0.7083
********* Evaluated on dev set *********
Dev loss: 1.7969. Dev perf: 0.25. Best dev perf: 0.4167
********* Done *********
[# API Calls 7150] loss: 1.1376. Current perf: 0.6458. Best perf so far: 0.75
[# API Calls 7200] loss: 1.1107. Current perf: 0.6667. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.71. Dev perf: 0.25. Best dev perf: 0.4167
********* Done *********
[# API Calls 7250] loss: 1.1502. Current perf: 0.6042. Best perf so far: 0.75
[# API Calls 7300] loss: 2.6286. Current perf: 0.2292. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 2.4808. Dev perf: 0.2917. Best dev perf: 0.4167
********* Done *********
[# API Calls 7350] loss: 2.6447. Current perf: 0.2708. Best perf so far: 0.75
[# API Calls 7400] loss: 1.1875. Current perf: 0.5208. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.738. Dev perf: 0.3542. Best dev perf: 0.4167
********* Done *********
[# API Calls 7450] loss: 1.1514. Current perf: 0.5833. Best perf so far: 0.75
[# API Calls 7500] loss: 1.1975. Current perf: 0.5. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.7094. Dev perf: 0.2917. Best dev perf: 0.4167
********* Done *********
[# API Calls 7550] loss: 1.1922. Current perf: 0.5625. Best perf so far: 0.75
[# API Calls 7600] loss: 1.1752. Current perf: 0.5625. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 1.7295. Dev perf: 0.2708. Best dev perf: 0.4167
********* Done *********
[# API Calls 7650] loss: 1.1469. Current perf: 0.6458. Best perf so far: 0.75
Done. Elapsed time: 50.27624029318492 (mins)
===== seed: 13 finished! =====
===== seed: 42 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset trec (/home/qingyang/.cache/huggingface/datasets/trec/default/0.0.0/a73cf536d323b519bbd0deb03f39161f7fa0890df817bd108f07212b0603e3bb)
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5291.11ex/s]
{'text': 'What city is served by Tempelhol Airport ?', 'labels': 5, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . <mask> question: What city is served by Tempelhol Airport ? ", 'target_text': 'location'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 27.32ba/s]
Using custom data configuration default
Reusing dataset trec (/home/qingyang/.cache/huggingface/datasets/trec/default/0.0.0/a73cf536d323b519bbd0deb03f39161f7fa0890df817bd108f07212b0603e3bb)
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5535.82ex/s]
{'text': 'What country did the Nazis occupy for 1 , CD NNS IN NNP NNP NNP .', 'labels': 5, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . <mask> question: What country did the Nazis occupy for 1 , CD NNS IN NNP NNP NNP . ", 'target_text': 'location'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 35.50ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 52       | 41829  |
+------------------------+------------------------+----------+--------+

# of dev data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 52       | 41829  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0084, std=0.8525, min=-15.9993, max=17.4101
 - After clipping (round 1): mu=-0.0065, std=0.7228, min=-2.5658, max=2.5490
 - After clipping (round 2): mu=-0.0059, std=0.7164, min=-2.1748, max=2.1618
 - After clipping (round 3): mu=-0.0059, std=0.7161, min=-2.1552, max=2.1434
 - After clipping (round 4): mu=-0.0059, std=0.7160, min=-2.1541, max=2.1423
 - After clipping (round 5): mu=-0.0059, std=0.7160, min=-2.1540, max=2.1422
 - Random Projection: mu=0.0000, std=0.0320
[Layer 2]
 - Before clipping: mu=-0.0297, std=0.8794, min=-20.1670, max=15.7603
 - After clipping (round 1): mu=-0.0191, std=0.6949, min=-2.6678, max=2.6083
 - After clipping (round 2): mu=-0.0186, std=0.6842, min=-2.1037, max=2.0655
 - After clipping (round 3): mu=-0.0186, std=0.6834, min=-2.0713, max=2.0341
 - After clipping (round 4): mu=-0.0186, std=0.6834, min=-2.0689, max=2.0317
 - After clipping (round 5): mu=-0.0186, std=0.6834, min=-2.0688, max=2.0316
 - Random Projection: mu=0.0000, std=0.0306
[Layer 3]
 - Before clipping: mu=-0.0322, std=0.9168, min=-21.1071, max=13.9450
 - After clipping (round 1): mu=-0.0189, std=0.6940, min=-2.7827, max=2.7183
 - After clipping (round 2): mu=-0.0185, std=0.6810, min=-2.1008, max=2.0631
 - After clipping (round 3): mu=-0.0185, std=0.6800, min=-2.0616, max=2.0246
 - After clipping (round 4): mu=-0.0185, std=0.6800, min=-2.0586, max=2.0217
 - After clipping (round 5): mu=-0.0185, std=0.6800, min=-2.0584, max=2.0214
 - Random Projection: mu=0.0000, std=0.0304
[Layer 4]
 - Before clipping: mu=-0.0355, std=0.9250, min=-25.3883, max=10.2277
 - After clipping (round 1): mu=-0.0202, std=0.7050, min=-2.8104, max=2.7394
 - After clipping (round 2): mu=-0.0197, std=0.6934, min=-2.1351, max=2.0948
 - After clipping (round 3): mu=-0.0197, std=0.6926, min=-2.0999, max=2.0605
 - After clipping (round 4): mu=-0.0197, std=0.6925, min=-2.0974, max=2.0581
 - After clipping (round 5): mu=-0.0197, std=0.6925, min=-2.0972, max=2.0579
 - Random Projection: mu=0.0000, std=0.0310
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9441, min=-26.9607, max=7.9907
 - After clipping (round 1): mu=-0.0211, std=0.6900, min=-2.8713, max=2.7931
 - After clipping (round 2): mu=-0.0203, std=0.6766, min=-2.0912, max=2.0489
 - After clipping (round 3): mu=-0.0203, std=0.6756, min=-2.0501, max=2.0095
 - After clipping (round 4): mu=-0.0203, std=0.6756, min=-2.0472, max=2.0066
 - After clipping (round 5): mu=-0.0203, std=0.6756, min=-2.0470, max=2.0064
 - Random Projection: mu=0.0000, std=0.0302
[Layer 6]
 - Before clipping: mu=-0.0451, std=0.9619, min=-28.5012, max=6.2179
 - After clipping (round 1): mu=-0.0261, std=0.7010, min=-2.9308, max=2.8405
 - After clipping (round 2): mu=-0.0251, std=0.6860, min=-2.1290, max=2.0767
 - After clipping (round 3): mu=-0.0251, std=0.6848, min=-2.0830, max=2.0327
 - After clipping (round 4): mu=-0.0251, std=0.6847, min=-2.0793, max=2.0292
 - After clipping (round 5): mu=-0.0250, std=0.6847, min=-2.0790, max=2.0289
 - Random Projection: mu=0.0000, std=0.0306
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9768, min=-29.6977, max=6.3631
 - After clipping (round 1): mu=-0.0200, std=0.6650, min=-2.9713, max=2.8897
 - After clipping (round 2): mu=-0.0188, std=0.6452, min=-2.0152, max=1.9751
 - After clipping (round 3): mu=-0.0187, std=0.6433, min=-1.9544, max=1.9168
 - After clipping (round 4): mu=-0.0187, std=0.6432, min=-1.9487, max=1.9113
 - After clipping (round 5): mu=-0.0187, std=0.6431, min=-1.9482, max=1.9108
 - Random Projection: mu=0.0000, std=0.0288
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9938, min=-31.1610, max=7.2166
 - After clipping (round 1): mu=-0.0217, std=0.6345, min=-3.0246, max=2.9383
 - After clipping (round 2): mu=-0.0196, std=0.6097, min=-1.9253, max=1.8820
 - After clipping (round 3): mu=-0.0194, std=0.6071, min=-1.8489, max=1.8096
 - After clipping (round 4): mu=-0.0194, std=0.6068, min=-1.8407, max=1.8019
 - After clipping (round 5): mu=-0.0194, std=0.6068, min=-1.8398, max=1.8010
 - Random Projection: mu=0.0000, std=0.0271
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9883, min=-30.7602, max=7.0617
 - After clipping (round 1): mu=-0.0214, std=0.6058, min=-3.0078, max=2.9220
 - After clipping (round 2): mu=-0.0193, std=0.5784, min=-1.8387, max=1.7959
 - After clipping (round 3): mu=-0.0191, std=0.5753, min=-1.7545, max=1.7158
 - After clipping (round 4): mu=-0.0191, std=0.5749, min=-1.7449, max=1.7067
 - After clipping (round 5): mu=-0.0191, std=0.5749, min=-1.7438, max=1.7057
 - Random Projection: mu=0.0000, std=0.0257
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9942, min=-30.8833, max=6.7747
 - After clipping (round 1): mu=-0.0145, std=0.5764, min=-3.0192, max=2.9462
 - After clipping (round 2): mu=-0.0127, std=0.5459, min=-1.7436, max=1.7145
 - After clipping (round 3): mu=-0.0125, std=0.5424, min=-1.6504, max=1.6249
 - After clipping (round 4): mu=-0.0125, std=0.5420, min=-1.6396, max=1.6147
 - After clipping (round 5): mu=-0.0124, std=0.5419, min=-1.6383, max=1.6134
 - Random Projection: mu=0.0000, std=0.0242
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9535, min=-29.2514, max=6.4185
 - After clipping (round 1): mu=-0.0130, std=0.5620, min=-2.8943, max=2.8266
 - After clipping (round 2): mu=-0.0114, std=0.5336, min=-1.6989, max=1.6729
 - After clipping (round 3): mu=-0.0112, std=0.5303, min=-1.6121, max=1.5893
 - After clipping (round 4): mu=-0.0111, std=0.5299, min=-1.6021, max=1.5798
 - After clipping (round 5): mu=-0.0111, std=0.5299, min=-1.6009, max=1.5786
 - Random Projection: mu=0.0000, std=0.0237
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9700, min=-29.9042, max=6.3000
 - After clipping (round 1): mu=-0.0225, std=0.5722, min=-2.9537, max=2.8665
 - After clipping (round 2): mu=-0.0209, std=0.5434, min=-1.7393, max=1.6942
 - After clipping (round 3): mu=-0.0207, std=0.5401, min=-1.6512, max=1.6094
 - After clipping (round 4): mu=-0.0207, std=0.5396, min=-1.6408, max=1.5995
 - After clipping (round 5): mu=-0.0206, std=0.5396, min=-1.6395, max=1.5982
 - Random Projection: mu=0.0000, std=0.0241
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9763, min=-30.1557, max=5.6384
 - After clipping (round 1): mu=-0.0233, std=0.5900, min=-2.9727, max=2.8849
 - After clipping (round 2): mu=-0.0223, std=0.5666, min=-1.7934, max=1.7468
 - After clipping (round 3): mu=-0.0222, std=0.5641, min=-1.7222, max=1.6775
 - After clipping (round 4): mu=-0.0222, std=0.5638, min=-1.7145, max=1.6701
 - After clipping (round 5): mu=-0.0222, std=0.5638, min=-1.7136, max=1.6693
 - Random Projection: mu=0.0000, std=0.0252
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9818, min=-30.3740, max=5.4148
 - After clipping (round 1): mu=-0.0220, std=0.5908, min=-2.9883, max=2.9028
 - After clipping (round 2): mu=-0.0215, std=0.5704, min=-1.7943, max=1.7503
 - After clipping (round 3): mu=-0.0214, std=0.5684, min=-1.7327, max=1.6896
 - After clipping (round 4): mu=-0.0214, std=0.5682, min=-1.7267, max=1.6838
 - After clipping (round 5): mu=-0.0214, std=0.5682, min=-1.7260, max=1.6832
 - Random Projection: mu=0.0000, std=0.0254
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9943, min=-28.0046, max=5.7682
 - After clipping (round 1): mu=-0.0164, std=0.5966, min=-3.0249, max=2.9409
 - After clipping (round 2): mu=-0.0149, std=0.5738, min=-1.8061, max=1.7733
 - After clipping (round 3): mu=-0.0148, std=0.5717, min=-1.7363, max=1.7065
 - After clipping (round 4): mu=-0.0148, std=0.5714, min=-1.7297, max=1.7002
 - After clipping (round 5): mu=-0.0148, std=0.5714, min=-1.7291, max=1.6996
 - Random Projection: mu=0.0000, std=0.0256
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9993, min=-31.5310, max=5.9821
 - After clipping (round 1): mu=-0.0048, std=0.5926, min=-3.0308, max=2.9649
 - After clipping (round 2): mu=-0.0032, std=0.5702, min=-1.7825, max=1.7729
 - After clipping (round 3): mu=-0.0031, std=0.5681, min=-1.7138, max=1.7073
 - After clipping (round 4): mu=-0.0031, std=0.5679, min=-1.7075, max=1.7012
 - After clipping (round 5): mu=-0.0031, std=0.5679, min=-1.7069, max=1.7007
 - Random Projection: mu=0.0000, std=0.0254
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9758, min=-30.3682, max=5.9390
 - After clipping (round 1): mu=-0.0040, std=0.5822, min=-2.9591, max=2.8960
 - After clipping (round 2): mu=-0.0029, std=0.5609, min=-1.7506, max=1.7426
 - After clipping (round 3): mu=-0.0028, std=0.5589, min=-1.6855, max=1.6797
 - After clipping (round 4): mu=-0.0028, std=0.5587, min=-1.6796, max=1.6739
 - After clipping (round 5): mu=-0.0028, std=0.5587, min=-1.6790, max=1.6734
 - Random Projection: mu=0.0000, std=0.0250
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9737, min=-30.4476, max=5.5122
 - After clipping (round 1): mu=-0.0037, std=0.5850, min=-2.9516, max=2.8904
 - After clipping (round 2): mu=-0.0032, std=0.5634, min=-1.7586, max=1.7512
 - After clipping (round 3): mu=-0.0032, std=0.5614, min=-1.6934, max=1.6870
 - After clipping (round 4): mu=-0.0032, std=0.5612, min=-1.6874, max=1.6810
 - After clipping (round 5): mu=-0.0032, std=0.5612, min=-1.6868, max=1.6804
 - Random Projection: mu=0.0000, std=0.0251
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9609, min=-29.4699, max=5.2735
 - After clipping (round 1): mu=-0.0036, std=0.5741, min=-2.9123, max=2.8530
 - After clipping (round 2): mu=-0.0032, std=0.5519, min=-1.7258, max=1.7186
 - After clipping (round 3): mu=-0.0032, std=0.5498, min=-1.6588, max=1.6524
 - After clipping (round 4): mu=-0.0032, std=0.5496, min=-1.6527, max=1.6463
 - After clipping (round 5): mu=-0.0032, std=0.5496, min=-1.6521, max=1.6458
 - Random Projection: mu=0.0000, std=0.0246
[Layer 20]
 - Before clipping: mu=-0.0287, std=0.9461, min=-28.8741, max=5.1469
 - After clipping (round 1): mu=-0.0039, std=0.5678, min=-2.8670, max=2.8096
 - After clipping (round 2): mu=-0.0036, std=0.5449, min=-1.7073, max=1.6996
 - After clipping (round 3): mu=-0.0036, std=0.5428, min=-1.6382, max=1.6310
 - After clipping (round 4): mu=-0.0036, std=0.5426, min=-1.6321, max=1.6249
 - After clipping (round 5): mu=-0.0036, std=0.5426, min=-1.6315, max=1.6243
 - Random Projection: mu=0.0000, std=0.0243
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9891, min=-31.2377, max=5.2386
 - After clipping (round 1): mu=-0.0073, std=0.5639, min=-3.0007, max=2.9342
 - After clipping (round 2): mu=-0.0071, std=0.5381, min=-1.6991, max=1.6844
 - After clipping (round 3): mu=-0.0071, std=0.5358, min=-1.6213, max=1.6071
 - After clipping (round 4): mu=-0.0071, std=0.5355, min=-1.6144, max=1.6001
 - After clipping (round 5): mu=-0.0071, std=0.5355, min=-1.6138, max=1.5995
 - Random Projection: mu=0.0000, std=0.0239
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0062, min=-32.0874, max=4.8445
 - After clipping (round 1): mu=-0.0150, std=0.5348, min=-3.0600, max=2.9771
 - After clipping (round 2): mu=-0.0147, std=0.5069, min=-1.6196, max=1.5895
 - After clipping (round 3): mu=-0.0147, std=0.5044, min=-1.5352, max=1.5059
 - After clipping (round 4): mu=-0.0147, std=0.5042, min=-1.5279, max=1.4985
 - After clipping (round 5): mu=-0.0147, std=0.5042, min=-1.5273, max=1.4978
 - Random Projection: mu=0.0000, std=0.0225
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0093, min=-32.3887, max=5.0957
 - After clipping (round 1): mu=-0.0049, std=0.5212, min=-3.0589, max=2.9968
 - After clipping (round 2): mu=-0.0046, std=0.4924, min=-1.5686, max=1.5589
 - After clipping (round 3): mu=-0.0046, std=0.4898, min=-1.4819, max=1.4728
 - After clipping (round 4): mu=-0.0046, std=0.4895, min=-1.4740, max=1.4648
 - After clipping (round 5): mu=-0.0046, std=0.4895, min=-1.4732, max=1.4640
 - Random Projection: mu=0.0000, std=0.0219
Random projections initialized.
[# API Calls 50] loss: 3.1191. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 100] loss: 2.9304. Current perf: 0.1667. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.9424. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 150] loss: 2.744. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 200] loss: 2.42. Current perf: 0.1667. Best perf so far: 0.1875
********* Evaluated on dev set *********
Dev loss: 2.4323. Dev perf: 0.1875. Best dev perf: 0.1875
********* Done *********
[# API Calls 250] loss: 2.3586. Current perf: 0.1667. Best perf so far: 0.1875
[# API Calls 300] loss: 2.2933. Current perf: 0.1458. Best perf so far: 0.1875
********* Evaluated on dev set *********
Dev loss: 2.3026. Dev perf: 0.1875. Best dev perf: 0.1875
********* Done *********
[# API Calls 350] loss: 2.181. Current perf: 0.1875. Best perf so far: 0.1875
[# API Calls 400] loss: 2.1238. Current perf: 0.1875. Best perf so far: 0.1875
********* Evaluated on dev set *********
Dev loss: 2.1269. Dev perf: 0.2083. Best dev perf: 0.2083
********* Done *********
[# API Calls 450] loss: 2.0979. Current perf: 0.1875. Best perf so far: 0.2083
[# API Calls 500] loss: 2.0796. Current perf: 0.2083. Best perf so far: 0.2083
********* Evaluated on dev set *********
Dev loss: 2.0619. Dev perf: 0.2292. Best dev perf: 0.2292
********* Done *********
[# API Calls 550] loss: 2.031. Current perf: 0.2083. Best perf so far: 0.25
[# API Calls 600] loss: 1.894. Current perf: 0.2292. Best perf so far: 0.2708
********* Evaluated on dev set *********
Dev loss: 1.8893. Dev perf: 0.2292. Best dev perf: 0.2292
********* Done *********
[# API Calls 650] loss: 1.8987. Current perf: 0.2292. Best perf so far: 0.2708
[# API Calls 700] loss: 1.8339. Current perf: 0.2292. Best perf so far: 0.2708
********* Evaluated on dev set *********
Dev loss: 1.8519. Dev perf: 0.2292. Best dev perf: 0.2292
********* Done *********
[# API Calls 750] loss: 1.7813. Current perf: 0.2292. Best perf so far: 0.2708
[# API Calls 800] loss: 1.7695. Current perf: 0.25. Best perf so far: 0.3125
********* Evaluated on dev set *********
Dev loss: 1.8018. Dev perf: 0.2083. Best dev perf: 0.2292
********* Done *********
[# API Calls 850] loss: 1.7464. Current perf: 0.3333. Best perf so far: 0.375
[# API Calls 900] loss: 1.7384. Current perf: 0.3125. Best perf so far: 0.375
********* Evaluated on dev set *********
Dev loss: 1.7928. Dev perf: 0.25. Best dev perf: 0.25
********* Done *********
[# API Calls 950] loss: 1.709. Current perf: 0.3542. Best perf so far: 0.375
[# API Calls 1000] loss: 1.7202. Current perf: 0.3125. Best perf so far: 0.375
********* Evaluated on dev set *********
Dev loss: 1.771. Dev perf: 0.2708. Best dev perf: 0.2708
********* Done *********
[# API Calls 1050] loss: 1.7401. Current perf: 0.2917. Best perf so far: 0.375
[# API Calls 1100] loss: 1.7101. Current perf: 0.3333. Best perf so far: 0.3958
********* Evaluated on dev set *********
Dev loss: 1.7845. Dev perf: 0.2083. Best dev perf: 0.2708
********* Done *********
[# API Calls 1150] loss: 1.6817. Current perf: 0.3542. Best perf so far: 0.5208
[# API Calls 1200] loss: 1.6928. Current perf: 0.3542. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.7669. Dev perf: 0.25. Best dev perf: 0.2708
********* Done *********
[# API Calls 1250] loss: 1.6928. Current perf: 0.3958. Best perf so far: 0.5208
[# API Calls 1300] loss: 1.6999. Current perf: 0.3125. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.7547. Dev perf: 0.3333. Best dev perf: 0.3333
********* Done *********
[# API Calls 1350] loss: 1.7061. Current perf: 0.3125. Best perf so far: 0.5208
[# API Calls 1400] loss: 1.6951. Current perf: 0.3125. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.7532. Dev perf: 0.25. Best dev perf: 0.3333
********* Done *********
[# API Calls 1450] loss: 1.6862. Current perf: 0.3958. Best perf so far: 0.5208
[# API Calls 1500] loss: 1.7131. Current perf: 0.2292. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.7844. Dev perf: 0.125. Best dev perf: 0.3333
********* Done *********
[# API Calls 1550] loss: 1.722. Current perf: 0.25. Best perf so far: 0.5208
[# API Calls 1600] loss: 1.696. Current perf: 0.3125. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.746. Dev perf: 0.1667. Best dev perf: 0.3333
********* Done *********
[# API Calls 1650] loss: 1.6242. Current perf: 0.3958. Best perf so far: 0.5208
[# API Calls 1700] loss: 1.619. Current perf: 0.3542. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.7425. Dev perf: 0.375. Best dev perf: 0.375
********* Done *********
[# API Calls 1750] loss: 1.5883. Current perf: 0.375. Best perf so far: 0.5208
[# API Calls 1800] loss: 1.6113. Current perf: 0.2917. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.7873. Dev perf: 0.2083. Best dev perf: 0.375
********* Done *********
[# API Calls 1850] loss: 1.5721. Current perf: 0.3125. Best perf so far: 0.5208
[# API Calls 1900] loss: 1.5651. Current perf: 0.3125. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.7356. Dev perf: 0.3125. Best dev perf: 0.375
********* Done *********
[# API Calls 1950] loss: 1.6109. Current perf: 0.2708. Best perf so far: 0.5208
[# API Calls 2000] loss: 1.7349. Current perf: 0.2917. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.8819. Dev perf: 0.1458. Best dev perf: 0.375
********* Done *********
[# API Calls 2050] loss: 1.7233. Current perf: 0.2917. Best perf so far: 0.5208
[# API Calls 2100] loss: 1.5235. Current perf: 0.4375. Best perf so far: 0.5208
********* Evaluated on dev set *********
Dev loss: 1.7556. Dev perf: 0.3125. Best dev perf: 0.375
********* Done *********
[# API Calls 2150] loss: 1.5516. Current perf: 0.4375. Best perf so far: 0.5208
[# API Calls 2200] loss: 1.5563. Current perf: 0.4583. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7339. Dev perf: 0.3333. Best dev perf: 0.375
********* Done *********
[# API Calls 2250] loss: 1.564. Current perf: 0.375. Best perf so far: 0.5417
[# API Calls 2300] loss: 1.5499. Current perf: 0.4167. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7016. Dev perf: 0.2708. Best dev perf: 0.375
********* Done *********
[# API Calls 2350] loss: 1.5455. Current perf: 0.3333. Best perf so far: 0.5417
[# API Calls 2400] loss: 1.5231. Current perf: 0.4167. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.6956. Dev perf: 0.2917. Best dev perf: 0.375
********* Done *********
[# API Calls 2450] loss: 1.5365. Current perf: 0.4167. Best perf so far: 0.5417
[# API Calls 2500] loss: 1.5506. Current perf: 0.4375. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.6975. Dev perf: 0.2708. Best dev perf: 0.375
********* Done *********
[# API Calls 2550] loss: 1.5755. Current perf: 0.5. Best perf so far: 0.5417
[# API Calls 2600] loss: 1.6051. Current perf: 0.3125. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7739. Dev perf: 0.2292. Best dev perf: 0.375
********* Done *********
[# API Calls 2650] loss: 1.6423. Current perf: 0.25. Best perf so far: 0.5417
[# API Calls 2700] loss: 1.5769. Current perf: 0.3958. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.7804. Dev perf: 0.25. Best dev perf: 0.375
********* Done *********
[# API Calls 2750] loss: 1.5033. Current perf: 0.4583. Best perf so far: 0.5833
[# API Calls 2800] loss: 1.4904. Current perf: 0.4167. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.7014. Dev perf: 0.25. Best dev perf: 0.375
********* Done *********
[# API Calls 2850] loss: 1.4499. Current perf: 0.3542. Best perf so far: 0.5833
[# API Calls 2900] loss: 1.5039. Current perf: 0.5417. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.7706. Dev perf: 0.3125. Best dev perf: 0.375
********* Done *********
[# API Calls 2950] loss: 1.5324. Current perf: 0.4583. Best perf so far: 0.5833
[# API Calls 3000] loss: 1.6393. Current perf: 0.4167. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.8408. Dev perf: 0.2083. Best dev perf: 0.375
********* Done *********
[# API Calls 3050] loss: 1.5816. Current perf: 0.3542. Best perf so far: 0.5833
[# API Calls 3100] loss: 1.477. Current perf: 0.5417. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.711. Dev perf: 0.25. Best dev perf: 0.375
********* Done *********
[# API Calls 3150] loss: 1.4868. Current perf: 0.4375. Best perf so far: 0.5833
[# API Calls 3200] loss: 1.4588. Current perf: 0.3958. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.7055. Dev perf: 0.2708. Best dev perf: 0.375
********* Done *********
[# API Calls 3250] loss: 1.4253. Current perf: 0.5. Best perf so far: 0.6042
[# API Calls 3300] loss: 1.4083. Current perf: 0.5208. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6847. Dev perf: 0.3333. Best dev perf: 0.375
********* Done *********
[# API Calls 3350] loss: 1.3751. Current perf: 0.4792. Best perf so far: 0.6042
[# API Calls 3400] loss: 1.4271. Current perf: 0.3542. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6885. Dev perf: 0.3125. Best dev perf: 0.375
********* Done *********
[# API Calls 3450] loss: 1.4293. Current perf: 0.3333. Best perf so far: 0.6042
[# API Calls 3500] loss: 1.4727. Current perf: 0.5208. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6826. Dev perf: 0.3542. Best dev perf: 0.375
********* Done *********
[# API Calls 3550] loss: 1.571. Current perf: 0.3958. Best perf so far: 0.6042
[# API Calls 3600] loss: 1.5711. Current perf: 0.2917. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.8112. Dev perf: 0.2917. Best dev perf: 0.375
********* Done *********
[# API Calls 3650] loss: 1.4953. Current perf: 0.375. Best perf so far: 0.6042
[# API Calls 3700] loss: 1.4779. Current perf: 0.4583. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7563. Dev perf: 0.2292. Best dev perf: 0.375
********* Done *********
[# API Calls 3750] loss: 1.5116. Current perf: 0.3542. Best perf so far: 0.6042
[# API Calls 3800] loss: 1.3982. Current perf: 0.4375. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.7078. Dev perf: 0.25. Best dev perf: 0.375
********* Done *********
[# API Calls 3850] loss: 1.3587. Current perf: 0.5. Best perf so far: 0.6875
[# API Calls 3900] loss: 1.5522. Current perf: 0.4375. Best perf so far: 0.6875
********* Evaluated on dev set *********
Dev loss: 1.8551. Dev perf: 0.2292. Best dev perf: 0.375
********* Done *********
[# API Calls 3950] loss: 1.3838. Current perf: 0.5. Best perf so far: 0.6875
[# API Calls 4000] loss: 1.4268. Current perf: 0.4583. Best perf so far: 0.6875
********* Evaluated on dev set *********
Dev loss: 1.7362. Dev perf: 0.3333. Best dev perf: 0.375
********* Done *********
[# API Calls 4050] loss: 1.5493. Current perf: 0.3958. Best perf so far: 0.6875
[# API Calls 4100] loss: 1.4047. Current perf: 0.4792. Best perf so far: 0.6875
********* Evaluated on dev set *********
Dev loss: 1.6597. Dev perf: 0.3958. Best dev perf: 0.3958
********* Done *********
[# API Calls 4150] loss: 1.3534. Current perf: 0.5. Best perf so far: 0.6875
[# API Calls 4200] loss: 1.379. Current perf: 0.375. Best perf so far: 0.6875
********* Evaluated on dev set *********
Dev loss: 1.7154. Dev perf: 0.3333. Best dev perf: 0.3958
********* Done *********
./4.other.sh: line 4:  7983 Killed                  python deepbbt.py --seed $seed_num --task_name $task_name --device "cuda:0"
===== seed: 42 finished! =====
===== seed: 50 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset trec (/home/qingyang/.cache/huggingface/datasets/trec/default/0.0.0/a73cf536d323b519bbd0deb03f39161f7fa0890df817bd108f07212b0603e3bb)
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5481.11ex/s]
{'text': 'What is a fear of being dirty ?', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . <mask> question: What is a fear of being dirty ? ", 'target_text': 'entity'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 25.93ba/s]
Using custom data configuration default
Reusing dataset trec (/home/qingyang/.cache/huggingface/datasets/trec/default/0.0.0/a73cf536d323b519bbd0deb03f39161f7fa0890df817bd108f07212b0603e3bb)
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5640.19ex/s]
{'text': 'What 1942 espionage movie reunited director John Huston with Maltese Falconers Humphrey Bogart , Mary Astor , and Sidney Greenstreet ?', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . <mask> question: What 1942 espionage movie reunited director John Huston with Maltese Falconers Humphrey Bogart , Mary Astor , and Sidney Greenstreet ? ", 'target_text': 'entity'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 35.14ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 52       | 46317  |
+------------------------+------------------------+----------+--------+

# of dev data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 52       | 46317  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0083, std=0.8508, min=-16.0182, max=17.3938
 - After clipping (round 1): mu=-0.0063, std=0.7169, min=-2.5606, max=2.5441
 - After clipping (round 2): mu=-0.0057, std=0.7101, min=-2.1569, max=2.1443
 - After clipping (round 3): mu=-0.0057, std=0.7097, min=-2.1361, max=2.1247
 - After clipping (round 4): mu=-0.0057, std=0.7097, min=-2.1348, max=2.1234
 - After clipping (round 5): mu=-0.0057, std=0.7097, min=-2.1347, max=2.1233
 - Random Projection: mu=0.0000, std=0.0317
[Layer 2]
 - Before clipping: mu=-0.0297, std=0.8788, min=-20.1031, max=15.4665
 - After clipping (round 1): mu=-0.0189, std=0.6896, min=-2.6662, max=2.6069
 - After clipping (round 2): mu=-0.0184, std=0.6784, min=-2.0878, max=2.0500
 - After clipping (round 3): mu=-0.0184, std=0.6775, min=-2.0536, max=2.0168
 - After clipping (round 4): mu=-0.0184, std=0.6775, min=-2.0510, max=2.0142
 - After clipping (round 5): mu=-0.0184, std=0.6775, min=-2.0508, max=2.0140
 - Random Projection: mu=0.0000, std=0.0303
[Layer 3]
 - Before clipping: mu=-0.0321, std=0.9164, min=-21.1062, max=13.6098
 - After clipping (round 1): mu=-0.0187, std=0.6917, min=-2.7813, max=2.7170
 - After clipping (round 2): mu=-0.0183, std=0.6786, min=-2.0937, max=2.0564
 - After clipping (round 3): mu=-0.0183, std=0.6776, min=-2.0540, max=2.0175
 - After clipping (round 4): mu=-0.0183, std=0.6775, min=-2.0511, max=2.0145
 - After clipping (round 5): mu=-0.0183, std=0.6775, min=-2.0508, max=2.0143
 - Random Projection: mu=0.0000, std=0.0303
[Layer 4]
 - Before clipping: mu=-0.0355, std=0.9243, min=-25.3775, max=11.0277
 - After clipping (round 1): mu=-0.0201, std=0.7044, min=-2.8083, max=2.7373
 - After clipping (round 2): mu=-0.0197, std=0.6928, min=-2.1334, max=2.0932
 - After clipping (round 3): mu=-0.0196, std=0.6920, min=-2.0980, max=2.0587
 - After clipping (round 4): mu=-0.0196, std=0.6919, min=-2.0956, max=2.0563
 - After clipping (round 5): mu=-0.0196, std=0.6919, min=-2.0954, max=2.0561
 - Random Projection: mu=0.0000, std=0.0309
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9437, min=-26.9331, max=7.7406
 - After clipping (round 1): mu=-0.0211, std=0.6884, min=-2.8702, max=2.7920
 - After clipping (round 2): mu=-0.0203, std=0.6751, min=-2.0863, max=2.0442
 - After clipping (round 3): mu=-0.0203, std=0.6742, min=-2.0456, max=2.0050
 - After clipping (round 4): mu=-0.0203, std=0.6741, min=-2.0427, max=2.0022
 - After clipping (round 5): mu=-0.0203, std=0.6741, min=-2.0425, max=2.0020
 - Random Projection: mu=0.0000, std=0.0301
[Layer 6]
 - Before clipping: mu=-0.0452, std=0.9618, min=-28.4831, max=5.7833
 - After clipping (round 1): mu=-0.0261, std=0.6993, min=-2.9306, max=2.8403
 - After clipping (round 2): mu=-0.0253, std=0.6846, min=-2.1241, max=2.0718
 - After clipping (round 3): mu=-0.0252, std=0.6834, min=-2.0790, max=2.0284
 - After clipping (round 4): mu=-0.0252, std=0.6833, min=-2.0755, max=2.0250
 - After clipping (round 5): mu=-0.0252, std=0.6833, min=-2.0752, max=2.0248
 - Random Projection: mu=0.0000, std=0.0306
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9768, min=-29.7075, max=5.6408
 - After clipping (round 1): mu=-0.0201, std=0.6617, min=-2.9713, max=2.8897
 - After clipping (round 2): mu=-0.0190, std=0.6421, min=-2.0053, max=1.9652
 - After clipping (round 3): mu=-0.0189, std=0.6403, min=-1.9454, max=1.9074
 - After clipping (round 4): mu=-0.0189, std=0.6402, min=-1.9399, max=1.9021
 - After clipping (round 5): mu=-0.0189, std=0.6401, min=-1.9394, max=1.9016
 - Random Projection: mu=0.0000, std=0.0286
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9942, min=-31.1138, max=6.8269
 - After clipping (round 1): mu=-0.0218, std=0.6307, min=-3.0257, max=2.9393
 - After clipping (round 2): mu=-0.0198, std=0.6066, min=-1.9139, max=1.8704
 - After clipping (round 3): mu=-0.0196, std=0.6040, min=-1.8395, max=1.7998
 - After clipping (round 4): mu=-0.0196, std=0.6037, min=-1.8317, max=1.7924
 - After clipping (round 5): mu=-0.0196, std=0.6037, min=-1.8308, max=1.7916
 - Random Projection: mu=0.0000, std=0.0270
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9883, min=-30.7640, max=5.5276
 - After clipping (round 1): mu=-0.0217, std=0.6097, min=-3.0078, max=2.9220
 - After clipping (round 2): mu=-0.0197, std=0.5831, min=-1.8507, max=1.8073
 - After clipping (round 3): mu=-0.0194, std=0.5801, min=-1.7689, max=1.7296
 - After clipping (round 4): mu=-0.0194, std=0.5798, min=-1.7599, max=1.7210
 - After clipping (round 5): mu=-0.0194, std=0.5798, min=-1.7588, max=1.7200
 - Random Projection: mu=0.0000, std=0.0259
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9942, min=-30.9256, max=6.4228
 - After clipping (round 1): mu=-0.0148, std=0.5821, min=-3.0191, max=2.9461
 - After clipping (round 2): mu=-0.0131, std=0.5526, min=-1.7612, max=1.7316
 - After clipping (round 3): mu=-0.0128, std=0.5493, min=-1.6709, max=1.6448
 - After clipping (round 4): mu=-0.0128, std=0.5489, min=-1.6606, max=1.6350
 - After clipping (round 5): mu=-0.0128, std=0.5488, min=-1.6594, max=1.6338
 - Random Projection: mu=0.0000, std=0.0245
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9540, min=-29.2886, max=6.6287
 - After clipping (round 1): mu=-0.0132, std=0.5681, min=-2.8958, max=2.8280
 - After clipping (round 2): mu=-0.0116, std=0.5404, min=-1.7176, max=1.6912
 - After clipping (round 3): mu=-0.0114, std=0.5372, min=-1.6327, max=1.6094
 - After clipping (round 4): mu=-0.0114, std=0.5369, min=-1.6232, max=1.6003
 - After clipping (round 5): mu=-0.0114, std=0.5368, min=-1.6221, max=1.5992
 - Random Projection: mu=0.0000, std=0.0240
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9703, min=-29.9276, max=6.5611
 - After clipping (round 1): mu=-0.0227, std=0.5793, min=-2.9546, max=2.8674
 - After clipping (round 2): mu=-0.0212, std=0.5513, min=-1.7607, max=1.7152
 - After clipping (round 3): mu=-0.0209, std=0.5481, min=-1.6751, max=1.6328
 - After clipping (round 4): mu=-0.0209, std=0.5477, min=-1.6653, max=1.6235
 - After clipping (round 5): mu=-0.0209, std=0.5477, min=-1.6641, max=1.6223
 - Random Projection: mu=0.0000, std=0.0245
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9763, min=-30.1533, max=6.0838
 - After clipping (round 1): mu=-0.0235, std=0.5966, min=-2.9729, max=2.8851
 - After clipping (round 2): mu=-0.0226, std=0.5739, min=-1.8133, max=1.7664
 - After clipping (round 3): mu=-0.0224, std=0.5715, min=-1.7442, max=1.6990
 - After clipping (round 4): mu=-0.0224, std=0.5712, min=-1.7369, max=1.6920
 - After clipping (round 5): mu=-0.0224, std=0.5712, min=-1.7361, max=1.6912
 - Random Projection: mu=0.0000, std=0.0255
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9819, min=-30.5385, max=5.3388
 - After clipping (round 1): mu=-0.0221, std=0.5961, min=-2.9884, max=2.9029
 - After clipping (round 2): mu=-0.0217, std=0.5762, min=-1.8104, max=1.7661
 - After clipping (round 3): mu=-0.0216, std=0.5743, min=-1.7503, max=1.7069
 - After clipping (round 4): mu=-0.0216, std=0.5741, min=-1.7446, max=1.7014
 - After clipping (round 5): mu=-0.0216, std=0.5741, min=-1.7441, max=1.7008
 - Random Projection: mu=0.0000, std=0.0257
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9942, min=-28.0884, max=5.6950
 - After clipping (round 1): mu=-0.0167, std=0.6040, min=-3.0245, max=2.9405
 - After clipping (round 2): mu=-0.0151, std=0.5819, min=-1.8288, max=1.7954
 - After clipping (round 3): mu=-0.0150, std=0.5799, min=-1.7608, max=1.7305
 - After clipping (round 4): mu=-0.0150, std=0.5797, min=-1.7546, max=1.7246
 - After clipping (round 5): mu=-0.0150, std=0.5796, min=-1.7540, max=1.7240
 - Random Projection: mu=0.0000, std=0.0259
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9992, min=-31.5303, max=5.9497
 - After clipping (round 1): mu=-0.0051, std=0.5996, min=-3.0304, max=2.9645
 - After clipping (round 2): mu=-0.0035, std=0.5780, min=-1.8040, max=1.7938
 - After clipping (round 3): mu=-0.0034, std=0.5761, min=-1.7375, max=1.7306
 - After clipping (round 4): mu=-0.0034, std=0.5759, min=-1.7317, max=1.7249
 - After clipping (round 5): mu=-0.0034, std=0.5759, min=-1.7311, max=1.7244
 - Random Projection: mu=0.0000, std=0.0258
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9762, min=-30.3676, max=5.8805
 - After clipping (round 1): mu=-0.0042, std=0.5895, min=-2.9602, max=2.8971
 - After clipping (round 2): mu=-0.0031, std=0.5689, min=-1.7726, max=1.7642
 - After clipping (round 3): mu=-0.0030, std=0.5670, min=-1.7097, max=1.7036
 - After clipping (round 4): mu=-0.0030, std=0.5669, min=-1.7041, max=1.6981
 - After clipping (round 5): mu=-0.0030, std=0.5669, min=-1.7036, max=1.6976
 - Random Projection: mu=0.0000, std=0.0254
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9742, min=-30.4445, max=5.5372
 - After clipping (round 1): mu=-0.0040, std=0.5937, min=-2.9532, max=2.8919
 - After clipping (round 2): mu=-0.0034, std=0.5731, min=-1.7852, max=1.7772
 - After clipping (round 3): mu=-0.0034, std=0.5712, min=-1.7226, max=1.7158
 - After clipping (round 4): mu=-0.0034, std=0.5711, min=-1.7171, max=1.7103
 - After clipping (round 5): mu=-0.0034, std=0.5710, min=-1.7165, max=1.7098
 - Random Projection: mu=0.0000, std=0.0255
[Layer 19]
 - Before clipping: mu=-0.0297, std=0.9616, min=-29.5056, max=5.1881
 - After clipping (round 1): mu=-0.0038, std=0.5807, min=-2.9144, max=2.8551
 - After clipping (round 2): mu=-0.0032, std=0.5593, min=-1.7458, max=1.7382
 - After clipping (round 3): mu=-0.0032, std=0.5574, min=-1.6812, max=1.6747
 - After clipping (round 4): mu=-0.0032, std=0.5572, min=-1.6754, max=1.6690
 - After clipping (round 5): mu=-0.0032, std=0.5572, min=-1.6749, max=1.6685
 - Random Projection: mu=0.0000, std=0.0249
[Layer 20]
 - Before clipping: mu=-0.0287, std=0.9469, min=-28.8456, max=5.0607
 - After clipping (round 1): mu=-0.0040, std=0.5741, min=-2.8695, max=2.8121
 - After clipping (round 2): mu=-0.0036, std=0.5519, min=-1.7262, max=1.7182
 - After clipping (round 3): mu=-0.0036, std=0.5500, min=-1.6593, max=1.6521
 - After clipping (round 4): mu=-0.0036, std=0.5498, min=-1.6535, max=1.6463
 - After clipping (round 5): mu=-0.0036, std=0.5498, min=-1.6529, max=1.6458
 - Random Projection: mu=0.0000, std=0.0246
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9893, min=-31.2374, max=5.0289
 - After clipping (round 1): mu=-0.0075, std=0.5700, min=-3.0012, max=2.9347
 - After clipping (round 2): mu=-0.0071, std=0.5451, min=-1.7173, max=1.7024
 - After clipping (round 3): mu=-0.0071, std=0.5429, min=-1.6423, max=1.6281
 - After clipping (round 4): mu=-0.0071, std=0.5427, min=-1.6358, max=1.6216
 - After clipping (round 5): mu=-0.0071, std=0.5427, min=-1.6352, max=1.6210
 - Random Projection: mu=0.0000, std=0.0243
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0061, min=-32.0875, max=4.9007
 - After clipping (round 1): mu=-0.0151, std=0.5426, min=-3.0596, max=2.9767
 - After clipping (round 2): mu=-0.0147, std=0.5157, min=-1.6430, max=1.6128
 - After clipping (round 3): mu=-0.0148, std=0.5134, min=-1.5619, max=1.5324
 - After clipping (round 4): mu=-0.0148, std=0.5132, min=-1.5550, max=1.5255
 - After clipping (round 5): mu=-0.0148, std=0.5132, min=-1.5544, max=1.5249
 - Random Projection: mu=0.0000, std=0.0230
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0090, min=-32.3854, max=5.0455
 - After clipping (round 1): mu=-0.0050, std=0.5313, min=-3.0581, max=2.9959
 - After clipping (round 2): mu=-0.0047, std=0.5037, min=-1.5989, max=1.5888
 - After clipping (round 3): mu=-0.0047, std=0.5013, min=-1.5157, max=1.5064
 - After clipping (round 4): mu=-0.0047, std=0.5010, min=-1.5085, max=1.4990
 - After clipping (round 5): mu=-0.0047, std=0.5010, min=-1.5078, max=1.4983
 - Random Projection: mu=0.0000, std=0.0224
Random projections initialized.
[# API Calls 50] loss: 3.2664. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 100] loss: 2.9247. Current perf: 0.1667. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.9476. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 150] loss: 2.8201. Current perf: 0.1667. Best perf so far: 0.1875
[# API Calls 200] loss: 2.6077. Current perf: 0.1667. Best perf so far: 0.1875
********* Evaluated on dev set *********
Dev loss: 2.6511. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 250] loss: 2.4922. Current perf: 0.1875. Best perf so far: 0.1875
[# API Calls 300] loss: 2.4496. Current perf: 0.1875. Best perf so far: 0.1875
********* Evaluated on dev set *********
Dev loss: 2.4797. Dev perf: 0.125. Best dev perf: 0.1667
********* Done *********
[# API Calls 350] loss: 2.3836. Current perf: 0.1875. Best perf so far: 0.1875
[# API Calls 400] loss: 2.2818. Current perf: 0.1875. Best perf so far: 0.1875
********* Evaluated on dev set *********
Dev loss: 2.3257. Dev perf: 0.1458. Best dev perf: 0.1667
********* Done *********
[# API Calls 450] loss: 2.2009. Current perf: 0.1875. Best perf so far: 0.1875
[# API Calls 500] loss: 2.14. Current perf: 0.1875. Best perf so far: 0.1875
********* Evaluated on dev set *********
Dev loss: 2.1912. Dev perf: 0.1458. Best dev perf: 0.1667
********* Done *********
[# API Calls 550] loss: 2.0927. Current perf: 0.1875. Best perf so far: 0.1875
[# API Calls 600] loss: 2.0095. Current perf: 0.1875. Best perf so far: 0.1875
********* Evaluated on dev set *********
Dev loss: 2.047. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 650] loss: 1.9114. Current perf: 0.1875. Best perf so far: 0.2083
[# API Calls 700] loss: 1.9258. Current perf: 0.1875. Best perf so far: 0.2292
********* Evaluated on dev set *********
Dev loss: 1.9846. Dev perf: 0.1875. Best dev perf: 0.1875
********* Done *********
[# API Calls 750] loss: 1.8501. Current perf: 0.2083. Best perf so far: 0.2292
[# API Calls 800] loss: 1.8262. Current perf: 0.2292. Best perf so far: 0.25
********* Evaluated on dev set *********
Dev loss: 1.889. Dev perf: 0.25. Best dev perf: 0.25
********* Done *********
[# API Calls 850] loss: 1.8148. Current perf: 0.1875. Best perf so far: 0.2917
[# API Calls 900] loss: 1.7724. Current perf: 0.2708. Best perf so far: 0.2917
********* Evaluated on dev set *********
Dev loss: 1.8227. Dev perf: 0.25. Best dev perf: 0.25
********* Done *********
[# API Calls 950] loss: 1.7667. Current perf: 0.3125. Best perf so far: 0.3333
[# API Calls 1000] loss: 1.7528. Current perf: 0.25. Best perf so far: 0.3333
********* Evaluated on dev set *********
Dev loss: 1.7999. Dev perf: 0.2708. Best dev perf: 0.2708
********* Done *********
[# API Calls 1050] loss: 1.7637. Current perf: 0.1875. Best perf so far: 0.3542
[# API Calls 1100] loss: 1.7712. Current perf: 0.1875. Best perf so far: 0.3542
********* Evaluated on dev set *********
Dev loss: 1.8183. Dev perf: 0.2083. Best dev perf: 0.2708
********* Done *********
[# API Calls 1150] loss: 1.7641. Current perf: 0.2083. Best perf so far: 0.3542
[# API Calls 1200] loss: 1.6975. Current perf: 0.3125. Best perf so far: 0.3542
********* Evaluated on dev set *********
Dev loss: 1.7662. Dev perf: 0.2708. Best dev perf: 0.2708
********* Done *********
[# API Calls 1250] loss: 1.7087. Current perf: 0.3125. Best perf so far: 0.375
[# API Calls 1300] loss: 1.7059. Current perf: 0.2917. Best perf so far: 0.375
********* Evaluated on dev set *********
Dev loss: 1.7985. Dev perf: 0.25. Best dev perf: 0.2708
********* Done *********
[# API Calls 1350] loss: 1.6759. Current perf: 0.3958. Best perf so far: 0.3958
[# API Calls 1400] loss: 1.6717. Current perf: 0.3542. Best perf so far: 0.4583
********* Evaluated on dev set *********
Dev loss: 1.7612. Dev perf: 0.2917. Best dev perf: 0.2917
********* Done *********
[# API Calls 1450] loss: 1.6548. Current perf: 0.3542. Best perf so far: 0.4583
[# API Calls 1500] loss: 1.6542. Current perf: 0.3958. Best perf so far: 0.4583
********* Evaluated on dev set *********
Dev loss: 1.7473. Dev perf: 0.3333. Best dev perf: 0.3333
********* Done *********
[# API Calls 1550] loss: 1.695. Current perf: 0.3333. Best perf so far: 0.4583
[# API Calls 1600] loss: 1.6719. Current perf: 0.3542. Best perf so far: 0.4583
********* Evaluated on dev set *********
Dev loss: 1.7505. Dev perf: 0.3333. Best dev perf: 0.3333
********* Done *********
[# API Calls 1650] loss: 1.6687. Current perf: 0.3958. Best perf so far: 0.4583
[# API Calls 1700] loss: 1.6523. Current perf: 0.3333. Best perf so far: 0.4583
********* Evaluated on dev set *********
Dev loss: 1.7507. Dev perf: 0.2917. Best dev perf: 0.3333
********* Done *********
[# API Calls 1750] loss: 1.6373. Current perf: 0.375. Best perf so far: 0.4583
[# API Calls 1800] loss: 1.6268. Current perf: 0.4167. Best perf so far: 0.4583
********* Evaluated on dev set *********
Dev loss: 1.7433. Dev perf: 0.2083. Best dev perf: 0.3333
********* Done *********
[# API Calls 1850] loss: 1.6127. Current perf: 0.3958. Best perf so far: 0.4583
[# API Calls 1900] loss: 1.6114. Current perf: 0.375. Best perf so far: 0.4583
********* Evaluated on dev set *********
Dev loss: 1.738. Dev perf: 0.25. Best dev perf: 0.3333
********* Done *********
[# API Calls 1950] loss: 1.6311. Current perf: 0.3333. Best perf so far: 0.4583
[# API Calls 2000] loss: 1.6392. Current perf: 0.2917. Best perf so far: 0.4583
********* Evaluated on dev set *********
Dev loss: 1.7716. Dev perf: 0.2083. Best dev perf: 0.3333
********* Done *********
[# API Calls 2050] loss: 1.7193. Current perf: 0.2292. Best perf so far: 0.4792
[# API Calls 2100] loss: 1.6411. Current perf: 0.2708. Best perf so far: 0.4792
********* Evaluated on dev set *********
Dev loss: 1.8006. Dev perf: 0.25. Best dev perf: 0.3333
********* Done *********
[# API Calls 2150] loss: 1.6118. Current perf: 0.3958. Best perf so far: 0.4792
[# API Calls 2200] loss: 1.6017. Current perf: 0.3542. Best perf so far: 0.5
********* Evaluated on dev set *********
Dev loss: 1.746. Dev perf: 0.2708. Best dev perf: 0.3333
********* Done *********
[# API Calls 2250] loss: 1.5848. Current perf: 0.3542. Best perf so far: 0.5
[# API Calls 2300] loss: 1.5549. Current perf: 0.3958. Best perf so far: 0.5
********* Evaluated on dev set *********
Dev loss: 1.7257. Dev perf: 0.2917. Best dev perf: 0.3333
********* Done *********
[# API Calls 2350] loss: 1.545. Current perf: 0.4583. Best perf so far: 0.5208
[# API Calls 2400] loss: 1.5457. Current perf: 0.4792. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7208. Dev perf: 0.3125. Best dev perf: 0.3333
********* Done *********
[# API Calls 2450] loss: 1.5513. Current perf: 0.5. Best perf so far: 0.5417
[# API Calls 2500] loss: 1.5819. Current perf: 0.3333. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7498. Dev perf: 0.2917. Best dev perf: 0.3333
********* Done *********
[# API Calls 2550] loss: 1.5937. Current perf: 0.2917. Best perf so far: 0.5417
[# API Calls 2600] loss: 1.5878. Current perf: 0.375. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7519. Dev perf: 0.3333. Best dev perf: 0.3333
********* Done *********
[# API Calls 2650] loss: 1.534. Current perf: 0.3958. Best perf so far: 0.5417
[# API Calls 2700] loss: 1.5489. Current perf: 0.375. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.77. Dev perf: 0.2292. Best dev perf: 0.3333
********* Done *********
[# API Calls 2750] loss: 1.4935. Current perf: 0.4167. Best perf so far: 0.5417
[# API Calls 2800] loss: 1.4918. Current perf: 0.4583. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7123. Dev perf: 0.25. Best dev perf: 0.3333
********* Done *********
[# API Calls 2850] loss: 1.4825. Current perf: 0.4792. Best perf so far: 0.5417
[# API Calls 2900] loss: 1.5064. Current perf: 0.3958. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.7225. Dev perf: 0.25. Best dev perf: 0.3333
********* Done *********
[# API Calls 2950] loss: 1.6296. Current perf: 0.3125. Best perf so far: 0.5417
[# API Calls 3000] loss: 1.5072. Current perf: 0.3542. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.711. Dev perf: 0.3125. Best dev perf: 0.3333
********* Done *********
[# API Calls 3050] loss: 1.5987. Current perf: 0.375. Best perf so far: 0.5417
[# API Calls 3100] loss: 1.5126. Current perf: 0.375. Best perf so far: 0.5417
********* Evaluated on dev set *********
Dev loss: 1.6648. Dev perf: 0.3333. Best dev perf: 0.3333
********* Done *********
[# API Calls 3150] loss: 1.4888. Current perf: 0.4583. Best perf so far: 0.5417
[# API Calls 3200] loss: 1.4802. Current perf: 0.3958. Best perf so far: 0.5625
********* Evaluated on dev set *********
Dev loss: 1.6797. Dev perf: 0.3125. Best dev perf: 0.3333
********* Done *********
[# API Calls 3250] loss: 1.4346. Current perf: 0.4375. Best perf so far: 0.5625
[# API Calls 3300] loss: 1.4384. Current perf: 0.5625. Best perf so far: 0.5625
********* Evaluated on dev set *********
Dev loss: 1.6265. Dev perf: 0.3333. Best dev perf: 0.3333
********* Done *********
[# API Calls 3350] loss: 1.4296. Current perf: 0.5417. Best perf so far: 0.5833
[# API Calls 3400] loss: 1.4421. Current perf: 0.5417. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.6628. Dev perf: 0.3542. Best dev perf: 0.3542
********* Done *********
[# API Calls 3450] loss: 1.5576. Current perf: 0.3958. Best perf so far: 0.5833
[# API Calls 3500] loss: 1.4645. Current perf: 0.4583. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.7276. Dev perf: 0.2708. Best dev perf: 0.3542
********* Done *********
[# API Calls 3550] loss: 1.4885. Current perf: 0.3958. Best perf so far: 0.5833
[# API Calls 3600] loss: 1.4243. Current perf: 0.4583. Best perf so far: 0.5833
********* Evaluated on dev set *********
Dev loss: 1.6959. Dev perf: 0.375. Best dev perf: 0.375
********* Done *********
[# API Calls 3650] loss: 1.3768. Current perf: 0.5. Best perf so far: 0.5833
[# API Calls 3700] loss: 1.3779. Current perf: 0.5. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6741. Dev perf: 0.2917. Best dev perf: 0.375
********* Done *********
[# API Calls 3750] loss: 1.3789. Current perf: 0.5208. Best perf so far: 0.6042
[# API Calls 3800] loss: 1.3677. Current perf: 0.5417. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.689. Dev perf: 0.3958. Best dev perf: 0.3958
********* Done *********
[# API Calls 3850] loss: 1.3768. Current perf: 0.5417. Best perf so far: 0.6042
[# API Calls 3900] loss: 1.3743. Current perf: 0.5. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6827. Dev perf: 0.3542. Best dev perf: 0.3958
********* Done *********
[# API Calls 3950] loss: 1.4944. Current perf: 0.4792. Best perf so far: 0.6042
[# API Calls 4000] loss: 1.7115. Current perf: 0.2917. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.9237. Dev perf: 0.2708. Best dev perf: 0.3958
********* Done *********
[# API Calls 4050] loss: 1.3935. Current perf: 0.5. Best perf so far: 0.6042
[# API Calls 4100] loss: 1.3747. Current perf: 0.5. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6946. Dev perf: 0.3542. Best dev perf: 0.3958
********* Done *********
[# API Calls 4150] loss: 1.3267. Current perf: 0.4583. Best perf so far: 0.6042
[# API Calls 4200] loss: 1.3413. Current perf: 0.5. Best perf so far: 0.6042
********* Evaluated on dev set *********
Dev loss: 1.6911. Dev perf: 0.3333. Best dev perf: 0.3958
********* Done *********
./4.other.sh: line 4: 26630 Killed                  python deepbbt.py --seed $seed_num --task_name $task_name --device "cuda:0"
===== seed: 50 finished! =====
===== seed: 60 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset trec (/home/qingyang/.cache/huggingface/datasets/trec/default/0.0.0/a73cf536d323b519bbd0deb03f39161f7fa0890df817bd108f07212b0603e3bb)
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5306.03ex/s]
{'text': "What is Nicholas Cage 's profession ?", 'labels': 3, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . <mask> question: What is Nicholas Cage 's profession ? ", 'target_text': 'human'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 28.67ba/s]
Using custom data configuration default
Reusing dataset trec (/home/qingyang/.cache/huggingface/datasets/trec/default/0.0.0/a73cf536d323b519bbd0deb03f39161f7fa0890df817bd108f07212b0603e3bb)
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5574.13ex/s]
{'text': 'What was another name for East Germany ?', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . <mask> question: What was another name for East Germany ? ", 'target_text': 'entity'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 35.30ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 52       | 19003  |
+------------------------+------------------------+----------+--------+

# of dev data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 52       | 46317  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0083, std=0.8516, min=-16.0268, max=17.5300
 - After clipping (round 1): mu=-0.0066, std=0.7197, min=-2.5630, max=2.5464
 - After clipping (round 2): mu=-0.0060, std=0.7132, min=-2.1656, max=2.1524
 - After clipping (round 3): mu=-0.0060, std=0.7128, min=-2.1455, max=2.1335
 - After clipping (round 4): mu=-0.0060, std=0.7127, min=-2.1443, max=2.1323
 - After clipping (round 5): mu=-0.0060, std=0.7127, min=-2.1442, max=2.1322
 - Random Projection: mu=0.0000, std=0.0319
[Layer 2]
 - Before clipping: mu=-0.0297, std=0.8787, min=-20.1071, max=15.4212
 - After clipping (round 1): mu=-0.0191, std=0.6919, min=-2.6658, max=2.6064
 - After clipping (round 2): mu=-0.0186, std=0.6810, min=-2.0948, max=2.0566
 - After clipping (round 3): mu=-0.0186, std=0.6801, min=-2.0615, max=2.0243
 - After clipping (round 4): mu=-0.0186, std=0.6801, min=-2.0590, max=2.0218
 - After clipping (round 5): mu=-0.0186, std=0.6801, min=-2.0588, max=2.0216
 - Random Projection: mu=0.0000, std=0.0304
[Layer 3]
 - Before clipping: mu=-0.0321, std=0.9165, min=-21.0834, max=13.8437
 - After clipping (round 1): mu=-0.0188, std=0.6914, min=-2.7818, max=2.7175
 - After clipping (round 2): mu=-0.0184, std=0.6784, min=-2.0930, max=2.0555
 - After clipping (round 3): mu=-0.0184, std=0.6774, min=-2.0535, max=2.0167
 - After clipping (round 4): mu=-0.0184, std=0.6773, min=-2.0506, max=2.0138
 - After clipping (round 5): mu=-0.0184, std=0.6773, min=-2.0503, max=2.0136
 - Random Projection: mu=0.0000, std=0.0303
[Layer 4]
 - Before clipping: mu=-0.0355, std=0.9247, min=-25.4121, max=10.8478
 - After clipping (round 1): mu=-0.0202, std=0.7036, min=-2.8097, max=2.7388
 - After clipping (round 2): mu=-0.0197, std=0.6918, min=-2.1309, max=2.0905
 - After clipping (round 3): mu=-0.0197, std=0.6910, min=-2.0952, max=2.0558
 - After clipping (round 4): mu=-0.0197, std=0.6910, min=-2.0927, max=2.0533
 - After clipping (round 5): mu=-0.0197, std=0.6909, min=-2.0926, max=2.0532
 - Random Projection: mu=0.0000, std=0.0309
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9439, min=-26.9912, max=8.3468
 - After clipping (round 1): mu=-0.0211, std=0.6879, min=-2.8709, max=2.7927
 - After clipping (round 2): mu=-0.0203, std=0.6744, min=-2.0849, max=2.0427
 - After clipping (round 3): mu=-0.0203, std=0.6735, min=-2.0435, max=2.0029
 - After clipping (round 4): mu=-0.0203, std=0.6734, min=-2.0406, max=2.0001
 - After clipping (round 5): mu=-0.0203, std=0.6734, min=-2.0404, max=1.9999
 - Random Projection: mu=0.0000, std=0.0301
[Layer 6]
 - Before clipping: mu=-0.0452, std=0.9618, min=-28.5508, max=6.1932
 - After clipping (round 1): mu=-0.0262, std=0.6988, min=-2.9307, max=2.8404
 - After clipping (round 2): mu=-0.0253, std=0.6839, min=-2.1227, max=2.0703
 - After clipping (round 3): mu=-0.0252, std=0.6827, min=-2.0768, max=2.0263
 - After clipping (round 4): mu=-0.0252, std=0.6826, min=-2.0732, max=2.0228
 - After clipping (round 5): mu=-0.0252, std=0.6826, min=-2.0729, max=2.0226
 - Random Projection: mu=0.0000, std=0.0305
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9768, min=-29.7791, max=5.8298
 - After clipping (round 1): mu=-0.0201, std=0.6620, min=-2.9713, max=2.8897
 - After clipping (round 2): mu=-0.0189, std=0.6421, min=-2.0059, max=1.9658
 - After clipping (round 3): mu=-0.0188, std=0.6403, min=-1.9453, max=1.9074
 - After clipping (round 4): mu=-0.0188, std=0.6401, min=-1.9396, max=1.9020
 - After clipping (round 5): mu=-0.0188, std=0.6401, min=-1.9391, max=1.9014
 - Random Projection: mu=0.0000, std=0.0286
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9940, min=-31.0445, max=6.9549
 - After clipping (round 1): mu=-0.0217, std=0.6307, min=-3.0253, max=2.9389
 - After clipping (round 2): mu=-0.0198, std=0.6058, min=-1.9137, max=1.8704
 - After clipping (round 3): mu=-0.0195, std=0.6031, min=-1.8372, max=1.7977
 - After clipping (round 4): mu=-0.0195, std=0.6028, min=-1.8289, max=1.7899
 - After clipping (round 5): mu=-0.0195, std=0.6028, min=-1.8280, max=1.7890
 - Random Projection: mu=0.0000, std=0.0270
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9883, min=-30.7484, max=6.2138
 - After clipping (round 1): mu=-0.0215, std=0.6039, min=-3.0079, max=2.9221
 - After clipping (round 2): mu=-0.0194, std=0.5765, min=-1.8332, max=1.7902
 - After clipping (round 3): mu=-0.0192, std=0.5734, min=-1.7489, max=1.7100
 - After clipping (round 4): mu=-0.0192, std=0.5730, min=-1.7393, max=1.7009
 - After clipping (round 5): mu=-0.0192, std=0.5730, min=-1.7382, max=1.6998
 - Random Projection: mu=0.0000, std=0.0256
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9943, min=-30.9458, max=7.1567
 - After clipping (round 1): mu=-0.0145, std=0.5749, min=-3.0192, max=2.9463
 - After clipping (round 2): mu=-0.0128, std=0.5445, min=-1.7391, max=1.7101
 - After clipping (round 3): mu=-0.0125, std=0.5409, min=-1.6462, max=1.6207
 - After clipping (round 4): mu=-0.0125, std=0.5405, min=-1.6353, max=1.6103
 - After clipping (round 5): mu=-0.0125, std=0.5404, min=-1.6340, max=1.6090
 - Random Projection: mu=0.0000, std=0.0242
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9534, min=-29.3098, max=6.8515
 - After clipping (round 1): mu=-0.0130, std=0.5608, min=-2.8942, max=2.8264
 - After clipping (round 2): mu=-0.0114, std=0.5324, min=-1.6955, max=1.6695
 - After clipping (round 3): mu=-0.0112, std=0.5291, min=-1.6085, max=1.5857
 - After clipping (round 4): mu=-0.0111, std=0.5287, min=-1.5984, max=1.5761
 - After clipping (round 5): mu=-0.0111, std=0.5286, min=-1.5972, max=1.5749
 - Random Projection: mu=0.0000, std=0.0236
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9700, min=-29.9538, max=6.5933
 - After clipping (round 1): mu=-0.0225, std=0.5714, min=-2.9537, max=2.8665
 - After clipping (round 2): mu=-0.0209, std=0.5426, min=-1.7367, max=1.6917
 - After clipping (round 3): mu=-0.0207, std=0.5393, min=-1.6489, max=1.6070
 - After clipping (round 4): mu=-0.0207, std=0.5389, min=-1.6386, max=1.5972
 - After clipping (round 5): mu=-0.0207, std=0.5388, min=-1.6373, max=1.5960
 - Random Projection: mu=0.0000, std=0.0241
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9762, min=-30.2162, max=6.0477
 - After clipping (round 1): mu=-0.0233, std=0.5898, min=-2.9725, max=2.8847
 - After clipping (round 2): mu=-0.0224, std=0.5665, min=-1.7927, max=1.7461
 - After clipping (round 3): mu=-0.0222, std=0.5640, min=-1.7219, max=1.6772
 - After clipping (round 4): mu=-0.0222, std=0.5637, min=-1.7143, max=1.6699
 - After clipping (round 5): mu=-0.0222, std=0.5637, min=-1.7134, max=1.6690
 - Random Projection: mu=0.0000, std=0.0252
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9818, min=-30.4328, max=5.3212
 - After clipping (round 1): mu=-0.0220, std=0.5901, min=-2.9882, max=2.9028
 - After clipping (round 2): mu=-0.0215, std=0.5699, min=-1.7922, max=1.7483
 - After clipping (round 3): mu=-0.0214, std=0.5680, min=-1.7314, max=1.6883
 - After clipping (round 4): mu=-0.0214, std=0.5678, min=-1.7254, max=1.6825
 - After clipping (round 5): mu=-0.0214, std=0.5678, min=-1.7248, max=1.6820
 - Random Projection: mu=0.0000, std=0.0254
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9942, min=-28.1032, max=5.6415
 - After clipping (round 1): mu=-0.0164, std=0.5973, min=-3.0245, max=2.9405
 - After clipping (round 2): mu=-0.0149, std=0.5748, min=-1.8084, max=1.7756
 - After clipping (round 3): mu=-0.0148, std=0.5727, min=-1.7394, max=1.7096
 - After clipping (round 4): mu=-0.0148, std=0.5725, min=-1.7330, max=1.7033
 - After clipping (round 5): mu=-0.0148, std=0.5725, min=-1.7323, max=1.7027
 - Random Projection: mu=0.0000, std=0.0256
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9992, min=-31.5335, max=5.8469
 - After clipping (round 1): mu=-0.0049, std=0.5945, min=-3.0304, max=2.9645
 - After clipping (round 2): mu=-0.0034, std=0.5724, min=-1.7883, max=1.7785
 - After clipping (round 3): mu=-0.0033, std=0.5704, min=-1.7206, max=1.7138
 - After clipping (round 4): mu=-0.0033, std=0.5702, min=-1.7145, max=1.7079
 - After clipping (round 5): mu=-0.0033, std=0.5702, min=-1.7139, max=1.7073
 - Random Projection: mu=0.0000, std=0.0255
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9758, min=-30.3682, max=5.8539
 - After clipping (round 1): mu=-0.0041, std=0.5854, min=-2.9591, max=2.8960
 - After clipping (round 2): mu=-0.0031, std=0.5643, min=-1.7604, max=1.7522
 - After clipping (round 3): mu=-0.0031, std=0.5624, min=-1.6961, max=1.6899
 - After clipping (round 4): mu=-0.0031, std=0.5622, min=-1.6903, max=1.6842
 - After clipping (round 5): mu=-0.0031, std=0.5622, min=-1.6897, max=1.6836
 - Random Projection: mu=0.0000, std=0.0251
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9738, min=-30.4481, max=5.4787
 - After clipping (round 1): mu=-0.0039, std=0.5890, min=-2.9520, max=2.8907
 - After clipping (round 2): mu=-0.0034, std=0.5676, min=-1.7709, max=1.7631
 - After clipping (round 3): mu=-0.0034, std=0.5656, min=-1.7061, max=1.6993
 - After clipping (round 4): mu=-0.0034, std=0.5654, min=-1.7003, max=1.6934
 - After clipping (round 5): mu=-0.0034, std=0.5654, min=-1.6997, max=1.6929
 - Random Projection: mu=0.0000, std=0.0253
[Layer 19]
 - Before clipping: mu=-0.0297, std=0.9612, min=-29.4741, max=5.2320
 - After clipping (round 1): mu=-0.0038, std=0.5781, min=-2.9131, max=2.8538
 - After clipping (round 2): mu=-0.0034, std=0.5561, min=-1.7379, max=1.7304
 - After clipping (round 3): mu=-0.0034, std=0.5541, min=-1.6716, max=1.6649
 - After clipping (round 4): mu=-0.0034, std=0.5539, min=-1.6657, max=1.6590
 - After clipping (round 5): mu=-0.0034, std=0.5539, min=-1.6651, max=1.6584
 - Random Projection: mu=0.0000, std=0.0248
[Layer 20]
 - Before clipping: mu=-0.0287, std=0.9465, min=-28.8985, max=5.1061
 - After clipping (round 1): mu=-0.0040, std=0.5715, min=-2.8681, max=2.8108
 - After clipping (round 2): mu=-0.0037, std=0.5488, min=-1.7184, max=1.7105
 - After clipping (round 3): mu=-0.0037, std=0.5468, min=-1.6502, max=1.6427
 - After clipping (round 4): mu=-0.0037, std=0.5466, min=-1.6442, max=1.6367
 - After clipping (round 5): mu=-0.0037, std=0.5466, min=-1.6436, max=1.6362
 - Random Projection: mu=0.0000, std=0.0244
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9892, min=-31.2381, max=5.1116
 - After clipping (round 1): mu=-0.0074, std=0.5663, min=-3.0008, max=2.9343
 - After clipping (round 2): mu=-0.0072, std=0.5407, min=-1.7062, max=1.6914
 - After clipping (round 3): mu=-0.0072, std=0.5385, min=-1.6294, max=1.6150
 - After clipping (round 4): mu=-0.0072, std=0.5383, min=-1.6226, max=1.6082
 - After clipping (round 5): mu=-0.0072, std=0.5382, min=-1.6220, max=1.6076
 - Random Projection: mu=0.0000, std=0.0241
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0061, min=-32.0883, max=4.8491
 - After clipping (round 1): mu=-0.0151, std=0.5384, min=-3.0598, max=2.9770
 - After clipping (round 2): mu=-0.0148, std=0.5108, min=-1.6301, max=1.6000
 - After clipping (round 3): mu=-0.0148, std=0.5084, min=-1.5472, max=1.5177
 - After clipping (round 4): mu=-0.0148, std=0.5082, min=-1.5401, max=1.5105
 - After clipping (round 5): mu=-0.0148, std=0.5082, min=-1.5394, max=1.5099
 - Random Projection: mu=0.0000, std=0.0227
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0091, min=-32.3944, max=5.0169
 - After clipping (round 1): mu=-0.0050, std=0.5272, min=-3.0584, max=2.9963
 - After clipping (round 2): mu=-0.0047, std=0.4990, min=-1.5866, max=1.5767
 - After clipping (round 3): mu=-0.0047, std=0.4964, min=-1.5016, max=1.4923
 - After clipping (round 4): mu=-0.0047, std=0.4962, min=-1.4939, max=1.4845
 - After clipping (round 5): mu=-0.0047, std=0.4961, min=-1.4932, max=1.4838
 - Random Projection: mu=0.0000, std=0.0222
Random projections initialized.
[# API Calls 50] loss: 3.1867. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 100] loss: 2.9968. Current perf: 0.1667. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.9001. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 150] loss: 2.8646. Current perf: 0.1667. Best perf so far: 0.1667
[# API Calls 200] loss: 2.7116. Current perf: 0.125. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.6025. Dev perf: 0.1667. Best dev perf: 0.1667
********* Done *********
[# API Calls 250] loss: 2.5776. Current perf: 0.125. Best perf so far: 0.1667
[# API Calls 300] loss: 2.4621. Current perf: 0.125. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.3473. Dev perf: 0.1875. Best dev perf: 0.1875
********* Done *********
[# API Calls 350] loss: 2.3395. Current perf: 0.125. Best perf so far: 0.1667
[# API Calls 400] loss: 2.2918. Current perf: 0.1458. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.176. Dev perf: 0.2083. Best dev perf: 0.2083
********* Done *********
[# API Calls 450] loss: 2.2281. Current perf: 0.1458. Best perf so far: 0.1667
[# API Calls 500] loss: 2.2112. Current perf: 0.1458. Best perf so far: 0.1667
********* Evaluated on dev set *********
Dev loss: 2.0778. Dev perf: 0.1875. Best dev perf: 0.2083
********* Done *********
[# API Calls 550] loss: 2.217. Current perf: 0.1458. Best perf so far: 0.1667
[# API Calls 600] loss: 2.1178. Current perf: 0.1875. Best perf so far: 0.2292
********* Evaluated on dev set *********
Dev loss: 1.9905. Dev perf: 0.2083. Best dev perf: 0.2083
********* Done *********
[# API Calls 650] loss: 2.0372. Current perf: 0.1667. Best perf so far: 0.2292
[# API Calls 700] loss: 2.0231. Current perf: 0.1667. Best perf so far: 0.2292
********* Evaluated on dev set *********
Dev loss: 1.9395. Dev perf: 0.1667. Best dev perf: 0.2083
********* Done *********
[# API Calls 750] loss: 2.0242. Current perf: 0.1458. Best perf so far: 0.2292
[# API Calls 800] loss: 2.0778. Current perf: 0.1667. Best perf so far: 0.2292
********* Evaluated on dev set *********
Dev loss: 1.9869. Dev perf: 0.1458. Best dev perf: 0.2083
********* Done *********
[# API Calls 850] loss: 1.9763. Current perf: 0.1875. Best perf so far: 0.2292
[# API Calls 900] loss: 1.9717. Current perf: 0.2083. Best perf so far: 0.2292
********* Evaluated on dev set *********
Dev loss: 1.8898. Dev perf: 0.1667. Best dev perf: 0.2083
********* Done *********
[# API Calls 950] loss: 1.8974. Current perf: 0.25. Best perf so far: 0.2708
[# API Calls 1000] loss: 1.883. Current perf: 0.2708. Best perf so far: 0.3125
********* Evaluated on dev set *********
Dev loss: 1.8078. Dev perf: 0.2083. Best dev perf: 0.2083
********* Done *********
[# API Calls 1050] loss: 1.8713. Current perf: 0.2708. Best perf so far: 0.3125
[# API Calls 1100] loss: 1.8505. Current perf: 0.2917. Best perf so far: 0.3125
********* Evaluated on dev set *********
Dev loss: 1.7816. Dev perf: 0.1875. Best dev perf: 0.2083
********* Done *********
[# API Calls 1150] loss: 1.8147. Current perf: 0.3125. Best perf so far: 0.3125
[# API Calls 1200] loss: 1.7761. Current perf: 0.3958. Best perf so far: 0.3958
********* Evaluated on dev set *********
Dev loss: 1.7231. Dev perf: 0.2292. Best dev perf: 0.2292
********* Done *********
[# API Calls 1250] loss: 1.7622. Current perf: 0.3542. Best perf so far: 0.3958
[# API Calls 1300] loss: 1.7474. Current perf: 0.3125. Best perf so far: 0.3958
********* Evaluated on dev set *********
Dev loss: 1.7061. Dev perf: 0.25. Best dev perf: 0.25
********* Done *********
./4.other.sh: line 4: 38509 Killed                  python deepbbt.py --seed $seed_num --task_name $task_name --device "cuda:0"
===== seed: 60 finished! =====
===== task: trec finished! =====
===== task: snli start! =====
===== seed: 8 start! =====
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset snli (/home/qingyang/.cache/huggingface/datasets/snli/default/0.0.0/73c7063d1d6ea6b34d71b18b0947826472535af1ea5ac5bdf0149db07367524f)
Loading cached processed dataset at /home/qingyang/.cache/huggingface/datasets/snli/default/0.0.0/73c7063d1d6ea6b34d71b18b0947826472535af1ea5ac5bdf0149db07367524f/cache-e07f58dc7ebf28d1.arrow
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 4716.79ex/s]
{'text1': 'Girl in plaid shirt riding a unicycle.', 'text2': 'A girl is riding.', 'labels': 0, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . Girl in plaid shirt riding a unicycle. ? <mask> , A girl is riding.", 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 19.05ba/s]
Using custom data configuration default
Reusing dataset snli (/home/qingyang/.cache/huggingface/datasets/snli/default/0.0.0/73c7063d1d6ea6b34d71b18b0947826472535af1ea5ac5bdf0149db07367524f)
Loading cached processed dataset at /home/qingyang/.cache/huggingface/datasets/snli/default/0.0.0/73c7063d1d6ea6b34d71b18b0947826472535af1ea5ac5bdf0149db07367524f/cache-b7f876643b92cc22.arrow
  0%|          | 0/48 [00:00<?, ?ex/s]100%|██████████| 48/48 [00:00<00:00, 5049.70ex/s]
{'text1': 'People using an outdoor ice skating rink.', 'text2': 'The people are on a plane.', 'labels': 2, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . People using an outdoor ice skating rink. ? <mask> , The people are on a plane.", 'target_text': 'No'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 29.64ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 63       | 9904   |
+------------------------+------------------------+----------+--------+

# of dev data: 48
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 61       | 3084   |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0084, std=0.8490, min=-16.1065, max=17.5296
 - After clipping (round 1): mu=-0.0066, std=0.7086, min=-2.5554, max=2.5386
 - After clipping (round 2): mu=-0.0060, std=0.7013, min=-2.1324, max=2.1192
 - After clipping (round 3): mu=-0.0059, std=0.7008, min=-2.1099, max=2.0979
 - After clipping (round 4): mu=-0.0059, std=0.7008, min=-2.1084, max=2.0965
 - After clipping (round 5): mu=-0.0059, std=0.7008, min=-2.1083, max=2.0964
 - Random Projection: mu=0.0000, std=0.0313
[Layer 2]
 - Before clipping: mu=-0.0297, std=0.8797, min=-19.9834, max=16.5221
 - After clipping (round 1): mu=-0.0194, std=0.6817, min=-2.6689, max=2.6095
 - After clipping (round 2): mu=-0.0188, std=0.6699, min=-2.0645, max=2.0258
 - After clipping (round 3): mu=-0.0188, std=0.6689, min=-2.0284, max=1.9908
 - After clipping (round 4): mu=-0.0188, std=0.6689, min=-2.0256, max=1.9881
 - After clipping (round 5): mu=-0.0188, std=0.6689, min=-2.0254, max=1.9878
 - Random Projection: mu=0.0000, std=0.0299
[Layer 3]
 - Before clipping: mu=-0.0320, std=0.9154, min=-21.1410, max=14.7507
 - After clipping (round 1): mu=-0.0187, std=0.6760, min=-2.7782, max=2.7141
 - After clipping (round 2): mu=-0.0183, std=0.6619, min=-2.0466, max=2.0093
 - After clipping (round 3): mu=-0.0183, std=0.6608, min=-2.0040, max=1.9674
 - After clipping (round 4): mu=-0.0183, std=0.6607, min=-2.0007, max=1.9642
 - After clipping (round 5): mu=-0.0183, std=0.6607, min=-2.0005, max=1.9639
 - Random Projection: mu=0.0000, std=0.0295
[Layer 4]
 - Before clipping: mu=-0.0354, std=0.9233, min=-25.4630, max=11.0405
 - After clipping (round 1): mu=-0.0199, std=0.6884, min=-2.8052, max=2.7344
 - After clipping (round 2): mu=-0.0194, std=0.6756, min=-2.0851, max=2.0453
 - After clipping (round 3): mu=-0.0194, std=0.6747, min=-2.0463, max=2.0075
 - After clipping (round 4): mu=-0.0193, std=0.6746, min=-2.0434, max=2.0047
 - After clipping (round 5): mu=-0.0193, std=0.6746, min=-2.0432, max=2.0045
 - Random Projection: mu=0.0000, std=0.0302
[Layer 5]
 - Before clipping: mu=-0.0390, std=0.9432, min=-26.9795, max=8.5611
 - After clipping (round 1): mu=-0.0210, std=0.6764, min=-2.8687, max=2.7907
 - After clipping (round 2): mu=-0.0202, std=0.6619, min=-2.0503, max=2.0083
 - After clipping (round 3): mu=-0.0201, std=0.6608, min=-2.0059, max=1.9656
 - After clipping (round 4): mu=-0.0201, std=0.6607, min=-2.0026, max=1.9624
 - After clipping (round 5): mu=-0.0201, std=0.6607, min=-2.0023, max=1.9621
 - Random Projection: mu=0.0000, std=0.0295
[Layer 6]
 - Before clipping: mu=-0.0450, std=0.9610, min=-28.5164, max=7.0249
 - After clipping (round 1): mu=-0.0258, std=0.6795, min=-2.9280, max=2.8379
 - After clipping (round 2): mu=-0.0249, std=0.6629, min=-2.0644, max=2.0128
 - After clipping (round 3): mu=-0.0248, std=0.6614, min=-2.0135, max=1.9637
 - After clipping (round 4): mu=-0.0248, std=0.6613, min=-2.0091, max=1.9595
 - After clipping (round 5): mu=-0.0248, std=0.6613, min=-2.0088, max=1.9592
 - Random Projection: mu=0.0000, std=0.0296
[Layer 7]
 - Before clipping: mu=-0.0407, std=0.9765, min=-29.8880, max=6.4587
 - After clipping (round 1): mu=-0.0199, std=0.6510, min=-2.9703, max=2.8889
 - After clipping (round 2): mu=-0.0188, std=0.6299, min=-1.9728, max=1.9329
 - After clipping (round 3): mu=-0.0187, std=0.6279, min=-1.9085, max=1.8709
 - After clipping (round 4): mu=-0.0187, std=0.6277, min=-1.9024, max=1.8650
 - After clipping (round 5): mu=-0.0187, std=0.6277, min=-1.9018, max=1.8644
 - Random Projection: mu=0.0000, std=0.0281
[Layer 8]
 - Before clipping: mu=-0.0431, std=0.9942, min=-30.9742, max=6.2774
 - After clipping (round 1): mu=-0.0214, std=0.6196, min=-3.0257, max=2.9394
 - After clipping (round 2): mu=-0.0197, std=0.5935, min=-1.8802, max=1.8373
 - After clipping (round 3): mu=-0.0195, std=0.5907, min=-1.8003, max=1.7610
 - After clipping (round 4): mu=-0.0195, std=0.5904, min=-1.7915, max=1.7526
 - After clipping (round 5): mu=-0.0195, std=0.5903, min=-1.7905, max=1.7516
 - Random Projection: mu=0.0000, std=0.0264
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9880, min=-30.5855, max=6.0390
 - After clipping (round 1): mu=-0.0213, std=0.5946, min=-3.0069, max=2.9211
 - After clipping (round 2): mu=-0.0195, std=0.5665, min=-1.8050, max=1.7624
 - After clipping (round 3): mu=-0.0193, std=0.5632, min=-1.7189, max=1.6799
 - After clipping (round 4): mu=-0.0192, std=0.5629, min=-1.7090, max=1.6705
 - After clipping (round 5): mu=-0.0192, std=0.5628, min=-1.7078, max=1.6693
 - Random Projection: mu=0.0000, std=0.0252
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9940, min=-30.5689, max=6.7265
 - After clipping (round 1): mu=-0.0144, std=0.5669, min=-3.0183, max=2.9454
 - After clipping (round 2): mu=-0.0127, std=0.5358, min=-1.7150, max=1.6861
 - After clipping (round 3): mu=-0.0125, std=0.5321, min=-1.6201, max=1.5946
 - After clipping (round 4): mu=-0.0125, std=0.5317, min=-1.6089, max=1.5840
 - After clipping (round 5): mu=-0.0125, std=0.5316, min=-1.6076, max=1.5826
 - Random Projection: mu=0.0000, std=0.0238
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9530, min=-29.0101, max=6.5381
 - After clipping (round 1): mu=-0.0129, std=0.5541, min=-2.8929, max=2.8251
 - After clipping (round 2): mu=-0.0114, std=0.5249, min=-1.6753, max=1.6496
 - After clipping (round 3): mu=-0.0112, std=0.5216, min=-1.5862, max=1.5635
 - After clipping (round 4): mu=-0.0111, std=0.5212, min=-1.5760, max=1.5536
 - After clipping (round 5): mu=-0.0111, std=0.5211, min=-1.5747, max=1.5524
 - Random Projection: mu=0.0000, std=0.0233
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9697, min=-29.6372, max=6.9025
 - After clipping (round 1): mu=-0.0224, std=0.5646, min=-2.9526, max=2.8654
 - After clipping (round 2): mu=-0.0208, std=0.5350, min=-1.7161, max=1.6714
 - After clipping (round 3): mu=-0.0206, std=0.5315, min=-1.6258, max=1.5841
 - After clipping (round 4): mu=-0.0206, std=0.5311, min=-1.6153, max=1.5740
 - After clipping (round 5): mu=-0.0206, std=0.5311, min=-1.6140, max=1.5727
 - Random Projection: mu=0.0000, std=0.0237
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9759, min=-29.8608, max=6.4581
 - After clipping (round 1): mu=-0.0231, std=0.5811, min=-2.9715, max=2.8838
 - After clipping (round 2): mu=-0.0223, std=0.5564, min=-1.7664, max=1.7202
 - After clipping (round 3): mu=-0.0221, std=0.5537, min=-1.6914, max=1.6469
 - After clipping (round 4): mu=-0.0221, std=0.5534, min=-1.6833, max=1.6391
 - After clipping (round 5): mu=-0.0221, std=0.5534, min=-1.6824, max=1.6382
 - Random Projection: mu=0.0000, std=0.0247
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9817, min=-30.1039, max=5.5881
 - After clipping (round 1): mu=-0.0218, std=0.5850, min=-2.9879, max=2.9024
 - After clipping (round 2): mu=-0.0212, std=0.5630, min=-1.7767, max=1.7332
 - After clipping (round 3): mu=-0.0211, std=0.5609, min=-1.7104, max=1.6679
 - After clipping (round 4): mu=-0.0211, std=0.5606, min=-1.7038, max=1.6615
 - After clipping (round 5): mu=-0.0211, std=0.5606, min=-1.7031, max=1.6608
 - Random Projection: mu=0.0000, std=0.0251
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9937, min=-28.0521, max=5.7849
