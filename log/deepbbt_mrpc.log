nohup: ignoring input
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset mrpc (/home/qingyang/.cache/huggingface/datasets/mrpc/default/0.0.0/8e9daa09bd61aa81cad8b8a10f40891bae9e05ef809a511222348af3d59a32d0)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 4822.94ex/s]
{'text1': 'He said : " I fear on this occasion what happened was those bits of the alphabet which supported the case were selected .', 'text2': '" I fear on this occasion what happened is that those bits of the alphabet that supported the case were selected , " he said .', 'labels': 1, 'input_text': 'Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International\'d Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . He said : " I fear on this occasion what happened was those bits of the alphabet which supported the case were selected . ? <mask> , " I fear on this occasion what happened is that those bits of the alphabet that supported the case were selected , " he said .', 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 22.20ba/s]
Using custom data configuration default
Reusing dataset mrpc (/home/qingyang/.cache/huggingface/datasets/mrpc/default/0.0.0/8e9daa09bd61aa81cad8b8a10f40891bae9e05ef809a511222348af3d59a32d0)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 2645.10ex/s]
{'text1': "The 2002 second quarter results don 't include figures from our friends at Compaq .", 'text2': 'The year-ago numbers do not include figures from Compaq Computer .', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . The 2002 second quarter results don 't include figures from our friends at Compaq . ? <mask> , The year-ago numbers do not include figures from Compaq Computer .", 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 30.35ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 77       | 9904   |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 70       | 9904   |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0086, std=0.8522, min=-16.1936, max=17.5440
 - After clipping (round 1): mu=-0.0070, std=0.7215, min=-2.5650, max=2.5479
 - After clipping (round 2): mu=-0.0064, std=0.7150, min=-2.1714, max=2.1574
 - After clipping (round 3): mu=-0.0063, std=0.7146, min=-2.1514, max=2.1387
 - After clipping (round 4): mu=-0.0063, std=0.7146, min=-2.1502, max=2.1375
 - After clipping (round 5): mu=-0.0063, std=0.7146, min=-2.1501, max=2.1375
 - Random Projection: mu=0.0000, std=0.0320
[Layer 2]
 - Before clipping: mu=-0.0297, std=0.8780, min=-20.3050, max=15.9050
 - After clipping (round 1): mu=-0.0196, std=0.6861, min=-2.6638, max=2.6043
 - After clipping (round 2): mu=-0.0190, std=0.6755, min=-2.0780, max=2.0387
 - After clipping (round 3): mu=-0.0190, std=0.6747, min=-2.0454, max=2.0074
 - After clipping (round 4): mu=-0.0189, std=0.6746, min=-2.0430, max=2.0051
 - After clipping (round 5): mu=-0.0189, std=0.6746, min=-2.0428, max=2.0049
 - Random Projection: mu=0.0000, std=0.0302
[Layer 3]
 - Before clipping: mu=-0.0321, std=0.9142, min=-21.1334, max=14.3778
 - After clipping (round 1): mu=-0.0188, std=0.6741, min=-2.7745, max=2.7104
 - After clipping (round 2): mu=-0.0184, std=0.6605, min=-2.0412, max=2.0036
 - After clipping (round 3): mu=-0.0184, std=0.6595, min=-1.9999, max=1.9631
 - After clipping (round 4): mu=-0.0184, std=0.6594, min=-1.9968, max=1.9601
 - After clipping (round 5): mu=-0.0184, std=0.6594, min=-1.9966, max=1.9598
 - Random Projection: mu=0.0000, std=0.0295
[Layer 4]
 - Before clipping: mu=-0.0354, std=0.9233, min=-25.3643, max=11.3717
 - After clipping (round 1): mu=-0.0201, std=0.6872, min=-2.8055, max=2.7346
 - After clipping (round 2): mu=-0.0196, std=0.6745, min=-2.0816, max=2.0415
 - After clipping (round 3): mu=-0.0195, std=0.6736, min=-2.0432, max=2.0040
 - After clipping (round 4): mu=-0.0195, std=0.6736, min=-2.0404, max=2.0013
 - After clipping (round 5): mu=-0.0195, std=0.6736, min=-2.0402, max=2.0011
 - Random Projection: mu=0.0000, std=0.0301
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9437, min=-26.9481, max=9.0355
 - After clipping (round 1): mu=-0.0214, std=0.6806, min=-2.8701, max=2.7918
 - After clipping (round 2): mu=-0.0205, std=0.6661, min=-2.0633, max=2.0205
 - After clipping (round 3): mu=-0.0204, std=0.6650, min=-2.0188, max=1.9779
 - After clipping (round 4): mu=-0.0204, std=0.6649, min=-2.0155, max=1.9746
 - After clipping (round 5): mu=-0.0204, std=0.6649, min=-2.0152, max=1.9744
 - Random Projection: mu=0.0000, std=0.0297
[Layer 6]
 - Before clipping: mu=-0.0451, std=0.9607, min=-28.5767, max=7.2599
 - After clipping (round 1): mu=-0.0258, std=0.6799, min=-2.9272, max=2.8369
 - After clipping (round 2): mu=-0.0248, std=0.6628, min=-2.0655, max=2.0139
 - After clipping (round 3): mu=-0.0247, std=0.6614, min=-2.0133, max=1.9638
 - After clipping (round 4): mu=-0.0247, std=0.6612, min=-2.0088, max=1.9595
 - After clipping (round 5): mu=-0.0247, std=0.6612, min=-2.0084, max=1.9591
 - Random Projection: mu=0.0000, std=0.0296
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9761, min=-29.8848, max=6.8753
 - After clipping (round 1): mu=-0.0197, std=0.6535, min=-2.9693, max=2.8876
 - After clipping (round 2): mu=-0.0184, std=0.6319, min=-1.9803, max=1.9408
 - After clipping (round 3): mu=-0.0183, std=0.6298, min=-1.9143, max=1.8774
 - After clipping (round 4): mu=-0.0183, std=0.6296, min=-1.9078, max=1.8712
 - After clipping (round 5): mu=-0.0183, std=0.6296, min=-1.9072, max=1.8706
 - Random Projection: mu=0.0000, std=0.0282
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9934, min=-31.2894, max=6.5096
 - After clipping (round 1): mu=-0.0213, std=0.6260, min=-3.0233, max=2.9369
 - After clipping (round 2): mu=-0.0193, std=0.5992, min=-1.8992, max=1.8566
 - After clipping (round 3): mu=-0.0191, std=0.5963, min=-1.8169, max=1.7782
 - After clipping (round 4): mu=-0.0191, std=0.5960, min=-1.8080, max=1.7697
 - After clipping (round 5): mu=-0.0191, std=0.5959, min=-1.8070, max=1.7688
 - Random Projection: mu=0.0000, std=0.0267
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9877, min=-30.7953, max=6.6140
 - After clipping (round 1): mu=-0.0208, std=0.5900, min=-3.0061, max=2.9203
 - After clipping (round 2): mu=-0.0188, std=0.5598, min=-1.7907, max=1.7491
 - After clipping (round 3): mu=-0.0185, std=0.5563, min=-1.6981, max=1.6605
 - After clipping (round 4): mu=-0.0185, std=0.5559, min=-1.6874, max=1.6504
 - After clipping (round 5): mu=-0.0185, std=0.5558, min=-1.6861, max=1.6491
 - Random Projection: mu=0.0000, std=0.0249
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9937, min=-31.0287, max=7.3669
 - After clipping (round 1): mu=-0.0140, std=0.5643, min=-3.0175, max=2.9445
 - After clipping (round 2): mu=-0.0119, std=0.5319, min=-1.7070, max=1.6789
 - After clipping (round 3): mu=-0.0116, std=0.5281, min=-1.6076, max=1.5839
 - After clipping (round 4): mu=-0.0116, std=0.5276, min=-1.5958, max=1.5727
 - After clipping (round 5): mu=-0.0115, std=0.5275, min=-1.5943, max=1.5712
 - Random Projection: mu=0.0000, std=0.0236
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9529, min=-29.4105, max=7.5709
 - After clipping (round 1): mu=-0.0124, std=0.5534, min=-2.8926, max=2.8248
 - After clipping (round 2): mu=-0.0104, std=0.5240, min=-1.6725, max=1.6476
 - After clipping (round 3): mu=-0.0101, std=0.5206, min=-1.5825, max=1.5617
 - After clipping (round 4): mu=-0.0101, std=0.5201, min=-1.5718, max=1.5516
 - After clipping (round 5): mu=-0.0101, std=0.5201, min=-1.5705, max=1.5503
 - Random Projection: mu=0.0000, std=0.0233
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9693, min=-29.9814, max=7.3390
 - After clipping (round 1): mu=-0.0220, std=0.5641, min=-2.9515, max=2.8643
 - After clipping (round 2): mu=-0.0199, std=0.5353, min=-1.7143, max=1.6703
 - After clipping (round 3): mu=-0.0196, std=0.5319, min=-1.6257, max=1.5860
 - After clipping (round 4): mu=-0.0196, std=0.5314, min=-1.6152, max=1.5760
 - After clipping (round 5): mu=-0.0196, std=0.5314, min=-1.6139, max=1.5747
 - Random Projection: mu=0.0000, std=0.0238
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9758, min=-30.3518, max=6.3115
 - After clipping (round 1): mu=-0.0230, std=0.5869, min=-2.9712, max=2.8834
 - After clipping (round 2): mu=-0.0215, std=0.5630, min=-1.7836, max=1.7376
 - After clipping (round 3): mu=-0.0213, std=0.5604, min=-1.7105, max=1.6676
 - After clipping (round 4): mu=-0.0212, std=0.5601, min=-1.7026, max=1.6600
 - After clipping (round 5): mu=-0.0212, std=0.5601, min=-1.7016, max=1.6592
 - Random Projection: mu=0.0000, std=0.0250
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9814, min=-30.6911, max=5.4189
 - After clipping (round 1): mu=-0.0218, std=0.5909, min=-2.9868, max=2.9014
 - After clipping (round 2): mu=-0.0206, std=0.5700, min=-1.7945, max=1.7509
 - After clipping (round 3): mu=-0.0205, std=0.5679, min=-1.7305, max=1.6893
 - After clipping (round 4): mu=-0.0205, std=0.5676, min=-1.7241, max=1.6831
 - After clipping (round 5): mu=-0.0205, std=0.5676, min=-1.7234, max=1.6824
 - Random Projection: mu=0.0000, std=0.0254
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9934, min=-28.0154, max=6.0857
 - After clipping (round 1): mu=-0.0160, std=0.5933, min=-3.0221, max=2.9381
 - After clipping (round 2): mu=-0.0140, std=0.5693, min=-1.7960, max=1.7639
 - After clipping (round 3): mu=-0.0139, std=0.5668, min=-1.7218, max=1.6937
 - After clipping (round 4): mu=-0.0139, std=0.5665, min=-1.7143, max=1.6865
 - After clipping (round 5): mu=-0.0139, std=0.5665, min=-1.7135, max=1.6858
 - Random Projection: mu=0.0000, std=0.0253
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9986, min=-31.5325, max=6.0314
 - After clipping (round 1): mu=-0.0045, std=0.5908, min=-3.0287, max=2.9628
 - After clipping (round 2): mu=-0.0027, std=0.5666, min=-1.7769, max=1.7679
 - After clipping (round 3): mu=-0.0025, std=0.5642, min=-1.7023, max=1.6970
 - After clipping (round 4): mu=-0.0025, std=0.5640, min=-1.6952, max=1.6901
 - After clipping (round 5): mu=-0.0025, std=0.5640, min=-1.6945, max=1.6894
 - Random Projection: mu=0.0000, std=0.0252
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9749, min=-30.3702, max=5.9535
 - After clipping (round 1): mu=-0.0036, std=0.5759, min=-2.9564, max=2.8932
 - After clipping (round 2): mu=-0.0022, std=0.5520, min=-1.7314, max=1.7241
 - After clipping (round 3): mu=-0.0021, std=0.5498, min=-1.6583, max=1.6539
 - After clipping (round 4): mu=-0.0021, std=0.5496, min=-1.6515, max=1.6473
 - After clipping (round 5): mu=-0.0021, std=0.5496, min=-1.6508, max=1.6467
 - Random Projection: mu=0.0000, std=0.0246
[Layer 18]
 - Before clipping: mu=-0.0307, std=0.9734, min=-30.4727, max=5.7005
 - After clipping (round 1): mu=-0.0035, std=0.5811, min=-2.9508, max=2.8894
 - After clipping (round 2): mu=-0.0025, std=0.5562, min=-1.7467, max=1.7397
 - After clipping (round 3): mu=-0.0025, std=0.5538, min=-1.6713, max=1.6662
 - After clipping (round 4): mu=-0.0025, std=0.5536, min=-1.6640, max=1.6591
 - After clipping (round 5): mu=-0.0025, std=0.5536, min=-1.6633, max=1.6583
 - Random Projection: mu=0.0000, std=0.0248
[Layer 19]
 - Before clipping: mu=-0.0297, std=0.9615, min=-29.4803, max=5.6538
 - After clipping (round 1): mu=-0.0034, std=0.5762, min=-2.9142, max=2.8548
 - After clipping (round 2): mu=-0.0025, std=0.5509, min=-1.7320, max=1.7252
 - After clipping (round 3): mu=-0.0025, std=0.5484, min=-1.6552, max=1.6501
 - After clipping (round 4): mu=-0.0025, std=0.5482, min=-1.6478, max=1.6428
 - After clipping (round 5): mu=-0.0025, std=0.5481, min=-1.6470, max=1.6420
 - Random Projection: mu=0.0000, std=0.0245
[Layer 20]
 - Before clipping: mu=-0.0287, std=0.9474, min=-28.9164, max=5.3605
 - After clipping (round 1): mu=-0.0038, std=0.5760, min=-2.8710, max=2.8136
 - After clipping (round 2): mu=-0.0031, std=0.5508, min=-1.7318, max=1.7242
 - After clipping (round 3): mu=-0.0031, std=0.5484, min=-1.6556, max=1.6494
 - After clipping (round 4): mu=-0.0031, std=0.5481, min=-1.6482, max=1.6421
 - After clipping (round 5): mu=-0.0031, std=0.5481, min=-1.6475, max=1.6413
 - Random Projection: mu=0.0000, std=0.0245
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9896, min=-31.2403, max=5.6541
 - After clipping (round 1): mu=-0.0074, std=0.5776, min=-3.0022, max=2.9357
 - After clipping (round 2): mu=-0.0068, std=0.5496, min=-1.7403, max=1.7254
 - After clipping (round 3): mu=-0.0068, std=0.5468, min=-1.6556, max=1.6419
 - After clipping (round 4): mu=-0.0068, std=0.5465, min=-1.6473, max=1.6336
 - After clipping (round 5): mu=-0.0068, std=0.5465, min=-1.6464, max=1.6327
 - Random Projection: mu=0.0000, std=0.0244
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0062, min=-32.0952, max=5.4566
 - After clipping (round 1): mu=-0.0152, std=0.5545, min=-3.0600, max=2.9771
 - After clipping (round 2): mu=-0.0146, std=0.5250, min=-1.6788, max=1.6483
 - After clipping (round 3): mu=-0.0146, std=0.5221, min=-1.5896, max=1.5605
 - After clipping (round 4): mu=-0.0146, std=0.5218, min=-1.5808, max=1.5516
 - After clipping (round 5): mu=-0.0146, std=0.5217, min=-1.5799, max=1.5507
 - Random Projection: mu=0.0000, std=0.0233
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0088, min=-32.4039, max=5.7252
 - After clipping (round 1): mu=-0.0053, std=0.5477, min=-3.0576, max=2.9955
 - After clipping (round 2): mu=-0.0046, std=0.5183, min=-1.6484, max=1.6378
 - After clipping (round 3): mu=-0.0046, std=0.5152, min=-1.5595, max=1.5504
 - After clipping (round 4): mu=-0.0046, std=0.5148, min=-1.5502, max=1.5410
 - After clipping (round 5): mu=-0.0046, std=0.5148, min=-1.5492, max=1.5399
 - Random Projection: mu=0.0000, std=0.0230
Random projections initialized.
[# API Calls 50] loss: 0.852. Current perf: 0.6667. Best perf so far: 0.6809
[# API Calls 100] loss: 0.8254. Current perf: 0.6809. Best perf so far: 0.6809
********* Evaluated on dev set *********
Dev loss: 0.9156. Dev perf: 0.6383. Best dev perf: 0.6383
********* Done *********
[# API Calls 150] loss: 0.7897. Current perf: 0.6809. Best perf so far: 0.6809
[# API Calls 200] loss: 0.7749. Current perf: 0.6957. Best perf so far: 0.6957
********* Evaluated on dev set *********
Dev loss: 0.8705. Dev perf: 0.6383. Best dev perf: 0.6383
********* Done *********
[# API Calls 250] loss: 0.7407. Current perf: 0.7111. Best perf so far: 0.7273
[# API Calls 300] loss: 0.7223. Current perf: 0.7273. Best perf so far: 0.7442
********* Evaluated on dev set *********
Dev loss: 0.8506. Dev perf: 0.6047. Best dev perf: 0.6383
********* Done *********
[# API Calls 350] loss: 0.6816. Current perf: 0.7442. Best perf so far: 0.7805
[# API Calls 400] loss: 0.6828. Current perf: 0.7442. Best perf so far: 0.8
********* Evaluated on dev set *********
Dev loss: 0.8049. Dev perf: 0.6222. Best dev perf: 0.6383
********* Done *********
[# API Calls 450] loss: 0.6618. Current perf: 0.8. Best perf so far: 0.8205
[# API Calls 500] loss: 0.6272. Current perf: 0.7647. Best perf so far: 0.8205
********* Evaluated on dev set *********
Dev loss: 0.759. Dev perf: 0.5556. Best dev perf: 0.6383
********* Done *********
[# API Calls 550] loss: 0.624. Current perf: 0.6875. Best perf so far: 0.8205
[# API Calls 600] loss: 0.6205. Current perf: 0.7059. Best perf so far: 0.8205
********* Evaluated on dev set *********
Dev loss: 0.7394. Dev perf: 0.5714. Best dev perf: 0.6383
********* Done *********
[# API Calls 650] loss: 0.6065. Current perf: 0.8108. Best perf so far: 0.8333
[# API Calls 700] loss: 0.6002. Current perf: 0.75. Best perf so far: 0.8333
********* Evaluated on dev set *********
Dev loss: 0.7331. Dev perf: 0.5789. Best dev perf: 0.6383
********* Done *********
[# API Calls 750] loss: 0.5923. Current perf: 0.7619. Best perf so far: 0.8333
[# API Calls 800] loss: 0.5848. Current perf: 0.7805. Best perf so far: 0.8649
********* Evaluated on dev set *********
Dev loss: 0.711. Dev perf: 0.6154. Best dev perf: 0.6383
********* Done *********
[# API Calls 850] loss: 0.5495. Current perf: 0.8485. Best perf so far: 0.9143
[# API Calls 900] loss: 0.5363. Current perf: 0.8889. Best perf so far: 0.9143
********* Evaluated on dev set *********
Dev loss: 0.6971. Dev perf: 0.5556. Best dev perf: 0.6383
********* Done *********
[# API Calls 950] loss: 0.5064. Current perf: 0.8485. Best perf so far: 0.9143
[# API Calls 1000] loss: 0.5063. Current perf: 0.8333. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.7075. Dev perf: 0.5946. Best dev perf: 0.6383
********* Done *********
[# API Calls 1050] loss: 0.4731. Current perf: 0.8889. Best perf so far: 0.9412
[# API Calls 1100] loss: 0.4798. Current perf: 0.8571. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.7201. Dev perf: 0.5946. Best dev perf: 0.6383
********* Done *********
[# API Calls 1150] loss: 0.4846. Current perf: 0.8649. Best perf so far: 0.9412
[# API Calls 1200] loss: 0.4642. Current perf: 0.8889. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.728. Dev perf: 0.6316. Best dev perf: 0.6383
********* Done *********
[# API Calls 1250] loss: 0.4608. Current perf: 0.8889. Best perf so far: 0.9412
[# API Calls 1300] loss: 0.4408. Current perf: 0.8824. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.7653. Dev perf: 0.6341. Best dev perf: 0.6383
********* Done *********
[# API Calls 1350] loss: 0.4254. Current perf: 0.9091. Best perf so far: 0.9412
[# API Calls 1400] loss: 0.4123. Current perf: 0.9091. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.7322. Dev perf: 0.6316. Best dev perf: 0.6383
********* Done *********
[# API Calls 1450] loss: 0.3835. Current perf: 0.9091. Best perf so far: 0.9412
[# API Calls 1500] loss: 0.3832. Current perf: 0.875. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.7697. Dev perf: 0.5455. Best dev perf: 0.6383
********* Done *********
[# API Calls 1550] loss: 0.384. Current perf: 0.8824. Best perf so far: 0.9412
[# API Calls 1600] loss: 0.3762. Current perf: 0.9091. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.7081. Dev perf: 0.6471. Best dev perf: 0.6471
********* Done *********
[# API Calls 1650] loss: 0.3706. Current perf: 0.9091. Best perf so far: 0.9412
[# API Calls 1700] loss: 0.3624. Current perf: 0.9091. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.6672. Dev perf: 0.7368. Best dev perf: 0.7368
********* Done *********
[# API Calls 1750] loss: 0.3285. Current perf: 0.9032. Best perf so far: 0.9697
[# API Calls 1800] loss: 0.3313. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.682. Dev perf: 0.7368. Best dev perf: 0.7368
********* Done *********
[# API Calls 1850] loss: 0.3082. Current perf: 0.9091. Best perf so far: 0.9697
[# API Calls 1900] loss: 0.292. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7489. Dev perf: 0.6667. Best dev perf: 0.7368
********* Done *********
[# API Calls 1950] loss: 0.3188. Current perf: 0.9091. Best perf so far: 0.9697
[# API Calls 2000] loss: 0.3328. Current perf: 0.9091. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7109. Dev perf: 0.7429. Best dev perf: 0.7429
********* Done *********
[# API Calls 2050] loss: 0.3493. Current perf: 0.8667. Best perf so far: 0.9697
[# API Calls 2100] loss: 0.3039. Current perf: 0.9412. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8289. Dev perf: 0.6667. Best dev perf: 0.7429
********* Done *********
[# API Calls 2150] loss: 0.3063. Current perf: 0.9032. Best perf so far: 0.9697
[# API Calls 2200] loss: 0.2691. Current perf: 0.9697. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8265. Dev perf: 0.6667. Best dev perf: 0.7429
********* Done *********
[# API Calls 2250] loss: 0.2602. Current perf: 0.9032. Best perf so far: 0.9697
[# API Calls 2300] loss: 0.2619. Current perf: 0.9412. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8536. Dev perf: 0.7027. Best dev perf: 0.7429
********* Done *********
[# API Calls 2350] loss: 0.2315. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 2400] loss: 0.226. Current perf: 0.9697. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.9528. Dev perf: 0.6667. Best dev perf: 0.7429
********* Done *********
[# API Calls 2450] loss: 0.2253. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 2500] loss: 0.2338. Current perf: 0.9143. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.9785. Dev perf: 0.7027. Best dev perf: 0.7429
********* Done *********
[# API Calls 2550] loss: 0.1924. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 2600] loss: 0.1886. Current perf: 0.9697. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8589. Dev perf: 0.7368. Best dev perf: 0.7429
********* Done *********
[# API Calls 2650] loss: 0.2133. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 2700] loss: 0.199. Current perf: 0.9697. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8219. Dev perf: 0.7. Best dev perf: 0.7429
********* Done *********
[# API Calls 2750] loss: 0.1747. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 2800] loss: 0.185. Current perf: 0.9697. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8928. Dev perf: 0.6471. Best dev perf: 0.7429
********* Done *********
[# API Calls 2850] loss: 0.1642. Current perf: 0.9375. Best perf so far: 0.9697
[# API Calls 2900] loss: 0.1421. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.928. Dev perf: 0.6471. Best dev perf: 0.7429
********* Done *********
[# API Calls 2950] loss: 0.158. Current perf: 0.9677. Best perf so far: 0.9697
[# API Calls 3000] loss: 0.1627. Current perf: 0.9333. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9643. Dev perf: 0.6452. Best dev perf: 0.7429
********* Done *********
[# API Calls 3050] loss: 0.1874. Current perf: 0.9032. Best perf so far: 1.0
[# API Calls 3100] loss: 0.1652. Current perf: 0.9375. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8342. Dev perf: 0.6875. Best dev perf: 0.7429
********* Done *********
[# API Calls 3150] loss: 0.1429. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3200] loss: 0.1348. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0032. Dev perf: 0.7059. Best dev perf: 0.7429
********* Done *********
[# API Calls 3250] loss: 0.1361. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3300] loss: 0.1249. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1958. Dev perf: 0.6. Best dev perf: 0.7429
********* Done *********
[# API Calls 3350] loss: 0.1185. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 3400] loss: 0.1404. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2267. Dev perf: 0.6471. Best dev perf: 0.7429
********* Done *********
[# API Calls 3450] loss: 0.1224. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 3500] loss: 0.1144. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2398. Dev perf: 0.5806. Best dev perf: 0.7429
********* Done *********
[# API Calls 3550] loss: 0.1094. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 3600] loss: 0.1137. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2718. Dev perf: 0.625. Best dev perf: 0.7429
********* Done *********
[# API Calls 3650] loss: 0.1296. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 3700] loss: 0.1184. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2953. Dev perf: 0.625. Best dev perf: 0.7429
********* Done *********
[# API Calls 3750] loss: 0.1105. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 3800] loss: 0.0943. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2794. Dev perf: 0.6061. Best dev perf: 0.7429
********* Done *********
[# API Calls 3850] loss: 0.0882. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3900] loss: 0.1083. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5634. Dev perf: 0.6471. Best dev perf: 0.7429
********* Done *********
[# API Calls 3950] loss: 0.0829. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 4000] loss: 0.0835. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6457. Dev perf: 0.6. Best dev perf: 0.7429
********* Done *********
[# API Calls 4050] loss: 0.1112. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 4100] loss: 0.0791. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5826. Dev perf: 0.5517. Best dev perf: 0.7429
********* Done *********
[# API Calls 4150] loss: 0.0731. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 4200] loss: 0.0773. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6009. Dev perf: 0.5517. Best dev perf: 0.7429
********* Done *********
[# API Calls 4250] loss: 0.0688. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0694. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5531. Dev perf: 0.5517. Best dev perf: 0.7429
********* Done *********
[# API Calls 4350] loss: 0.0796. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.06. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.486. Dev perf: 0.6. Best dev perf: 0.7429
********* Done *********
[# API Calls 4450] loss: 0.0697. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4500] loss: 0.0765. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3552. Dev perf: 0.5806. Best dev perf: 0.7429
********* Done *********
[# API Calls 4550] loss: 0.0781. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.064. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5877. Dev perf: 0.6. Best dev perf: 0.7429
********* Done *********
[# API Calls 4650] loss: 0.0544. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.0545. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.7111. Dev perf: 0.5. Best dev perf: 0.7429
********* Done *********
[# API Calls 4750] loss: 0.0467. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.0434. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.857. Dev perf: 0.5517. Best dev perf: 0.7429
********* Done *********
[# API Calls 4850] loss: 0.044. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.0557. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.8949. Dev perf: 0.5333. Best dev perf: 0.7429
********* Done *********
[# API Calls 4950] loss: 0.0438. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.0426. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.9401. Dev perf: 0.5517. Best dev perf: 0.7429
********* Done *********
[# API Calls 5050] loss: 0.046. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.0444. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.971. Dev perf: 0.5333. Best dev perf: 0.7429
********* Done *********
[# API Calls 5150] loss: 0.0364. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0349. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.2384. Dev perf: 0.5. Best dev perf: 0.7429
********* Done *********
[# API Calls 5250] loss: 0.031. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0308. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.4981. Dev perf: 0.5. Best dev perf: 0.7429
********* Done *********
[# API Calls 5350] loss: 0.0463. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.0378. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.3951. Dev perf: 0.5517. Best dev perf: 0.7429
********* Done *********
[# API Calls 5450] loss: 0.0403. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0382. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.2115. Dev perf: 0.4828. Best dev perf: 0.7429
********* Done *********
[# API Calls 5550] loss: 0.065. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0339. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.017. Dev perf: 0.5333. Best dev perf: 0.7429
********* Done *********
[# API Calls 5650] loss: 0.0388. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0309. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.0395. Dev perf: 0.5333. Best dev perf: 0.7429
********* Done *********
[# API Calls 5750] loss: 0.0255. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0259. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.2446. Dev perf: 0.4828. Best dev perf: 0.7429
********* Done *********
[# API Calls 5850] loss: 0.0268. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0541. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.9352. Dev perf: 0.5. Best dev perf: 0.7429
********* Done *********
[# API Calls 5950] loss: 0.0367. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0283. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.9763. Dev perf: 0.5333. Best dev perf: 0.7429
********* Done *********
[# API Calls 6050] loss: 0.0258. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0322. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.8286. Dev perf: 0.625. Best dev perf: 0.7429
********* Done *********
[# API Calls 6150] loss: 0.0238. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0251. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6678. Dev perf: 0.6. Best dev perf: 0.7429
********* Done *********
[# API Calls 6250] loss: 0.0219. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0234. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.7875. Dev perf: 0.6. Best dev perf: 0.7429
********* Done *********
[# API Calls 6350] loss: 0.0226. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.099. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.8166. Dev perf: 0.6486. Best dev perf: 0.7429
********* Done *********
[# API Calls 6450] loss: 0.0203. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0208. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.1356. Dev perf: 0.5333. Best dev perf: 0.7429
********* Done *********
[# API Calls 6550] loss: 0.021. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0169. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.1504. Dev perf: 0.5517. Best dev perf: 0.7429
********* Done *********
[# API Calls 6650] loss: 0.0171. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0153. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.2375. Dev perf: 0.5517. Best dev perf: 0.7429
********* Done *********
[# API Calls 6750] loss: 0.0147. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0147. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.5927. Dev perf: 0.5333. Best dev perf: 0.7429
********* Done *********
[# API Calls 6850] loss: 0.0155. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0152. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.1482. Dev perf: 0.5333. Best dev perf: 0.7429
********* Done *********
[# API Calls 6950] loss: 0.019. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0183. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.1928. Dev perf: 0.5333. Best dev perf: 0.7429
********* Done *********
[# API Calls 7050] loss: 0.017. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0152. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.1059. Dev perf: 0.6. Best dev perf: 0.7429
********* Done *********
[# API Calls 7150] loss: 0.0152. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0136. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.2721. Dev perf: 0.5806. Best dev perf: 0.7429
********* Done *********
[# API Calls 7250] loss: 0.0188. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0168. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.2972. Dev perf: 0.6061. Best dev perf: 0.7429
********* Done *********
[# API Calls 7350] loss: 0.0143. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0129. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.636. Dev perf: 0.5625. Best dev perf: 0.7429
********* Done *********
[# API Calls 7450] loss: 0.0143. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.014. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.2184. Dev perf: 0.5455. Best dev perf: 0.7429
********* Done *********
[# API Calls 7550] loss: 0.0149. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0134. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 2.2058. Dev perf: 0.5161. Best dev perf: 0.7429
********* Done *********
[# API Calls 7650] loss: 0.0128. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 40.7500003417333 (mins)
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset mrpc (/home/qingyang/.cache/huggingface/datasets/mrpc/default/0.0.0/8e9daa09bd61aa81cad8b8a10f40891bae9e05ef809a511222348af3d59a32d0)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5013.92ex/s]
{'text1': "The court 's 1992 decision reaffirmed the basic findings of Roe protecting abortion choice but lessened the standards of protection guaranteed to women by Roe .", 'text2': 'In a 1992 case , the Supreme Court reaffirmed the basic findings of Roe protecting abortion choice , but lessened the standards of protection guaranteed to women by Roe .', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . The court 's 1992 decision reaffirmed the basic findings of Roe protecting abortion choice but lessened the standards of protection guaranteed to women by Roe . ? <mask> , In a 1992 case , the Supreme Court reaffirmed the basic findings of Roe protecting abortion choice , but lessened the standards of protection guaranteed to women by Roe .", 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 20.34ba/s]
Using custom data configuration default
Reusing dataset mrpc (/home/qingyang/.cache/huggingface/datasets/mrpc/default/0.0.0/8e9daa09bd61aa81cad8b8a10f40891bae9e05ef809a511222348af3d59a32d0)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5142.24ex/s]
{'text1': 'The retailer said it came to the decision after hearing the opinions of customers and associates .', 'text2': 'The decision came after " listening to our customers and associates , " Melissa Berryhill , a spokeswoman for Wal-Mart , said .', 'labels': 1, 'input_text': 'Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International\'d Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . The retailer said it came to the decision after hearing the opinions of customers and associates . ? <mask> , The decision came after " listening to our customers and associates , " Melissa Berryhill , a spokeswoman for Wal-Mart , said .', 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 29.67ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 82       | 9904   |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 70       | 9904   |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0084, std=0.8475, min=-16.1406, max=17.5097
 - After clipping (round 1): mu=-0.0067, std=0.7058, min=-2.5509, max=2.5342
 - After clipping (round 2): mu=-0.0060, std=0.6982, min=-2.1240, max=2.1105
 - After clipping (round 3): mu=-0.0060, std=0.6977, min=-2.1007, max=2.0887
 - After clipping (round 4): mu=-0.0060, std=0.6977, min=-2.0991, max=2.0872
 - After clipping (round 5): mu=-0.0060, std=0.6977, min=-2.0990, max=2.0871
 - Random Projection: mu=0.0000, std=0.0312
[Layer 2]
 - Before clipping: mu=-0.0296, std=0.8766, min=-20.2625, max=15.9578
 - After clipping (round 1): mu=-0.0196, std=0.6775, min=-2.6594, max=2.6002
 - After clipping (round 2): mu=-0.0189, std=0.6657, min=-2.0521, max=2.0130
 - After clipping (round 3): mu=-0.0188, std=0.6648, min=-2.0160, max=1.9782
 - After clipping (round 4): mu=-0.0188, std=0.6647, min=-2.0132, max=1.9755
 - After clipping (round 5): mu=-0.0188, std=0.6647, min=-2.0129, max=1.9753
 - Random Projection: mu=0.0000, std=0.0297
[Layer 3]
 - Before clipping: mu=-0.0320, std=0.9135, min=-21.0815, max=14.4646
 - After clipping (round 1): mu=-0.0188, std=0.6720, min=-2.7726, max=2.7086
 - After clipping (round 2): mu=-0.0183, std=0.6579, min=-2.0349, max=1.9973
 - After clipping (round 3): mu=-0.0183, std=0.6568, min=-1.9922, max=1.9555
 - After clipping (round 4): mu=-0.0183, std=0.6568, min=-1.9889, max=1.9522
 - After clipping (round 5): mu=-0.0183, std=0.6568, min=-1.9886, max=1.9520
 - Random Projection: mu=0.0000, std=0.0294
[Layer 4]
 - Before clipping: mu=-0.0354, std=0.9230, min=-25.3565, max=11.2968
 - After clipping (round 1): mu=-0.0203, std=0.6914, min=-2.8045, max=2.7336
 - After clipping (round 2): mu=-0.0198, std=0.6788, min=-2.0944, max=2.0538
 - After clipping (round 3): mu=-0.0197, std=0.6779, min=-2.0562, max=2.0167
 - After clipping (round 4): mu=-0.0197, std=0.6778, min=-2.0534, max=2.0139
 - After clipping (round 5): mu=-0.0197, std=0.6778, min=-2.0531, max=2.0137
 - Random Projection: mu=0.0000, std=0.0303
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9432, min=-26.8953, max=8.3396
 - After clipping (round 1): mu=-0.0214, std=0.6818, min=-2.8688, max=2.7906
 - After clipping (round 2): mu=-0.0205, std=0.6674, min=-2.0667, max=2.0239
 - After clipping (round 3): mu=-0.0204, std=0.6663, min=-2.0226, max=1.9816
 - After clipping (round 4): mu=-0.0204, std=0.6662, min=-2.0192, max=1.9784
 - After clipping (round 5): mu=-0.0204, std=0.6662, min=-2.0190, max=1.9781
 - Random Projection: mu=0.0000, std=0.0298
[Layer 6]
 - Before clipping: mu=-0.0452, std=0.9607, min=-28.5646, max=7.1357
 - After clipping (round 1): mu=-0.0260, std=0.6853, min=-2.9271, max=2.8368
 - After clipping (round 2): mu=-0.0250, std=0.6686, min=-2.0819, max=2.0299
 - After clipping (round 3): mu=-0.0249, std=0.6672, min=-2.0307, max=1.9808
 - After clipping (round 4): mu=-0.0249, std=0.6671, min=-2.0264, max=1.9767
 - After clipping (round 5): mu=-0.0249, std=0.6670, min=-2.0260, max=1.9763
 - Random Projection: mu=0.0000, std=0.0298
[Layer 7]
 - Before clipping: mu=-0.0409, std=0.9760, min=-29.8349, max=6.4465
 - After clipping (round 1): mu=-0.0200, std=0.6584, min=-2.9689, max=2.8872
 - After clipping (round 2): mu=-0.0186, std=0.6370, min=-1.9952, max=1.9553
 - After clipping (round 3): mu=-0.0185, std=0.6349, min=-1.9296, max=1.8923
 - After clipping (round 4): mu=-0.0185, std=0.6347, min=-1.9233, max=1.8862
 - After clipping (round 5): mu=-0.0185, std=0.6347, min=-1.9226, max=1.8856
 - Random Projection: mu=0.0000, std=0.0284
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9932, min=-31.2344, max=6.4473
 - After clipping (round 1): mu=-0.0216, std=0.6290, min=-3.0228, max=2.9364
 - After clipping (round 2): mu=-0.0195, std=0.6029, min=-1.9086, max=1.8654
 - After clipping (round 3): mu=-0.0193, std=0.6001, min=-1.8282, max=1.7891
 - After clipping (round 4): mu=-0.0193, std=0.5998, min=-1.8197, max=1.7810
 - After clipping (round 5): mu=-0.0193, std=0.5998, min=-1.8188, max=1.7802
 - Random Projection: mu=0.0000, std=0.0268
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9876, min=-30.9228, max=6.8638
 - After clipping (round 1): mu=-0.0213, std=0.6002, min=-3.0056, max=2.9197
 - After clipping (round 2): mu=-0.0192, std=0.5715, min=-1.8217, max=1.7792
 - After clipping (round 3): mu=-0.0190, std=0.5683, min=-1.7336, max=1.6952
 - After clipping (round 4): mu=-0.0190, std=0.5679, min=-1.7238, max=1.6859
 - After clipping (round 5): mu=-0.0190, std=0.5679, min=-1.7227, max=1.6848
 - Random Projection: mu=0.0000, std=0.0254
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9934, min=-31.0077, max=7.2394
 - After clipping (round 1): mu=-0.0145, std=0.5762, min=-3.0168, max=2.9437
 - After clipping (round 2): mu=-0.0124, std=0.5455, min=-1.7432, max=1.7143
 - After clipping (round 3): mu=-0.0121, std=0.5420, min=-1.6489, max=1.6241
 - After clipping (round 4): mu=-0.0121, std=0.5416, min=-1.6382, max=1.6140
 - After clipping (round 5): mu=-0.0121, std=0.5416, min=-1.6370, max=1.6128
 - Random Projection: mu=0.0000, std=0.0242
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9536, min=-29.3554, max=7.1215
 - After clipping (round 1): mu=-0.0128, std=0.5647, min=-2.8948, max=2.8269
 - After clipping (round 2): mu=-0.0108, std=0.5363, min=-1.7068, max=1.6812
 - After clipping (round 3): mu=-0.0106, std=0.5331, min=-1.6196, max=1.5981
 - After clipping (round 4): mu=-0.0105, std=0.5327, min=-1.6099, max=1.5888
 - After clipping (round 5): mu=-0.0105, std=0.5327, min=-1.6087, max=1.5877
 - Random Projection: mu=0.0000, std=0.0238
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9697, min=-30.0213, max=6.7302
 - After clipping (round 1): mu=-0.0223, std=0.5747, min=-2.9526, max=2.8654
 - After clipping (round 2): mu=-0.0202, std=0.5467, min=-1.7465, max=1.7019
 - After clipping (round 3): mu=-0.0200, std=0.5435, min=-1.6604, max=1.6199
 - After clipping (round 4): mu=-0.0200, std=0.5432, min=-1.6506, max=1.6106
 - After clipping (round 5): mu=-0.0200, std=0.5431, min=-1.6494, max=1.6095
 - Random Projection: mu=0.0000, std=0.0243
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9758, min=-30.2745, max=6.4081
 - After clipping (round 1): mu=-0.0231, std=0.5943, min=-2.9712, max=2.8834
 - After clipping (round 2): mu=-0.0217, std=0.5709, min=-1.8061, max=1.7598
 - After clipping (round 3): mu=-0.0215, std=0.5684, min=-1.7343, max=1.6909
 - After clipping (round 4): mu=-0.0215, std=0.5681, min=-1.7267, max=1.6837
 - After clipping (round 5): mu=-0.0215, std=0.5681, min=-1.7258, max=1.6829
 - Random Projection: mu=0.0000, std=0.0254
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9813, min=-30.4942, max=5.6225
 - After clipping (round 1): mu=-0.0218, std=0.5976, min=-2.9865, max=2.9011
 - After clipping (round 2): mu=-0.0207, std=0.5769, min=-1.8147, max=1.7710
 - After clipping (round 3): mu=-0.0206, std=0.5749, min=-1.7515, max=1.7101
 - After clipping (round 4): mu=-0.0206, std=0.5747, min=-1.7454, max=1.7042
 - After clipping (round 5): mu=-0.0206, std=0.5747, min=-1.7448, max=1.7036
 - Random Projection: mu=0.0000, std=0.0257
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9928, min=-28.0922, max=5.9880
 - After clipping (round 1): mu=-0.0161, std=0.6017, min=-3.0205, max=2.9365
 - After clipping (round 2): mu=-0.0142, std=0.5783, min=-1.8213, max=1.7890
 - After clipping (round 3): mu=-0.0140, std=0.5760, min=-1.7490, max=1.7207
 - After clipping (round 4): mu=-0.0140, std=0.5758, min=-1.7421, max=1.7140
 - After clipping (round 5): mu=-0.0140, std=0.5758, min=-1.7414, max=1.7134
 - Random Projection: mu=0.0000, std=0.0257
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9983, min=-31.5375, max=6.1239
 - After clipping (round 1): mu=-0.0048, std=0.5998, min=-3.0279, max=2.9619
 - After clipping (round 2): mu=-0.0029, std=0.5763, min=-1.8042, max=1.7946
 - After clipping (round 3): mu=-0.0028, std=0.5742, min=-1.7319, max=1.7262
 - After clipping (round 4): mu=-0.0027, std=0.5739, min=-1.7252, max=1.7197
 - After clipping (round 5): mu=-0.0027, std=0.5739, min=-1.7246, max=1.7191
 - Random Projection: mu=0.0000, std=0.0257
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9752, min=-30.3703, max=6.0706
 - After clipping (round 1): mu=-0.0039, std=0.5855, min=-2.9573, max=2.8941
 - After clipping (round 2): mu=-0.0023, std=0.5624, min=-1.7604, max=1.7527
 - After clipping (round 3): mu=-0.0022, std=0.5603, min=-1.6896, max=1.6850
 - After clipping (round 4): mu=-0.0022, std=0.5601, min=-1.6831, max=1.6787
 - After clipping (round 5): mu=-0.0022, std=0.5601, min=-1.6825, max=1.6780
 - Random Projection: mu=0.0000, std=0.0250
[Layer 18]
 - Before clipping: mu=-0.0307, std=0.9738, min=-30.4614, max=5.6128
 - After clipping (round 1): mu=-0.0038, std=0.5932, min=-2.9522, max=2.8908
 - After clipping (round 2): mu=-0.0027, std=0.5696, min=-1.7834, max=1.7758
 - After clipping (round 3): mu=-0.0026, std=0.5673, min=-1.7114, max=1.7060
 - After clipping (round 4): mu=-0.0026, std=0.5671, min=-1.7046, max=1.6994
 - After clipping (round 5): mu=-0.0026, std=0.5671, min=-1.7040, max=1.6987
 - Random Projection: mu=0.0000, std=0.0254
[Layer 19]
 - Before clipping: mu=-0.0297, std=0.9625, min=-29.4855, max=5.4151
 - After clipping (round 1): mu=-0.0037, std=0.5879, min=-2.9173, max=2.8578
 - After clipping (round 2): mu=-0.0027, std=0.5638, min=-1.7675, max=1.7601
 - After clipping (round 3): mu=-0.0026, std=0.5615, min=-1.6941, max=1.6888
 - After clipping (round 4): mu=-0.0026, std=0.5613, min=-1.6872, max=1.6820
 - After clipping (round 5): mu=-0.0026, std=0.5613, min=-1.6865, max=1.6813
 - Random Projection: mu=0.0000, std=0.0251
[Layer 20]
 - Before clipping: mu=-0.0287, std=0.9486, min=-28.9154, max=5.2034
 - After clipping (round 1): mu=-0.0040, std=0.5866, min=-2.8746, max=2.8171
 - After clipping (round 2): mu=-0.0032, std=0.5624, min=-1.7638, max=1.7558
 - After clipping (round 3): mu=-0.0031, std=0.5601, min=-1.6904, max=1.6840
 - After clipping (round 4): mu=-0.0031, std=0.5599, min=-1.6834, max=1.6771
 - After clipping (round 5): mu=-0.0031, std=0.5598, min=-1.6827, max=1.6764
 - Random Projection: mu=0.0000, std=0.0250
[Layer 21]
 - Before clipping: mu=-0.0333, std=0.9898, min=-31.2399, max=5.2162
 - After clipping (round 1): mu=-0.0077, std=0.5883, min=-3.0028, max=2.9363
 - After clipping (round 2): mu=-0.0069, std=0.5617, min=-1.7727, max=1.7573
 - After clipping (round 3): mu=-0.0069, std=0.5591, min=-1.6919, max=1.6781
 - After clipping (round 4): mu=-0.0069, std=0.5589, min=-1.6842, max=1.6704
 - After clipping (round 5): mu=-0.0069, std=0.5588, min=-1.6834, max=1.6697
 - Random Projection: mu=0.0000, std=0.0250
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0059, min=-32.0931, max=5.0924
 - After clipping (round 1): mu=-0.0155, std=0.5670, min=-3.0592, max=2.9763
 - After clipping (round 2): mu=-0.0147, std=0.5392, min=-1.7165, max=1.6855
 - After clipping (round 3): mu=-0.0147, std=0.5365, min=-1.6321, max=1.6028
 - After clipping (round 4): mu=-0.0147, std=0.5362, min=-1.6241, max=1.5948
 - After clipping (round 5): mu=-0.0147, std=0.5362, min=-1.6233, max=1.5940
 - Random Projection: mu=0.0000, std=0.0240
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0083, min=-32.4015, max=5.2873
 - After clipping (round 1): mu=-0.0056, std=0.5642, min=-3.0560, max=2.9939
 - After clipping (round 2): mu=-0.0048, std=0.5366, min=-1.6981, max=1.6869
 - After clipping (round 3): mu=-0.0048, std=0.5339, min=-1.6147, max=1.6052
 - After clipping (round 4): mu=-0.0048, std=0.5336, min=-1.6065, max=1.5969
 - After clipping (round 5): mu=-0.0048, std=0.5336, min=-1.6056, max=1.5960
 - Random Projection: mu=0.0000, std=0.0239
Random projections initialized.
[# API Calls 50] loss: 0.8565. Current perf: 0.6522. Best perf so far: 0.6522
[# API Calls 100] loss: 0.8359. Current perf: 0.6522. Best perf so far: 0.6818
********* Evaluated on dev set *********
Dev loss: 0.7996. Dev perf: 0.6957. Best dev perf: 0.6957
********* Done *********
[# API Calls 150] loss: 0.802. Current perf: 0.6818. Best perf so far: 0.6977
[# API Calls 200] loss: 0.7693. Current perf: 0.6667. Best perf so far: 0.6977
********* Evaluated on dev set *********
Dev loss: 0.7629. Dev perf: 0.6341. Best dev perf: 0.6957
********* Done *********
[# API Calls 250] loss: 0.7433. Current perf: 0.6842. Best perf so far: 0.7
[# API Calls 300] loss: 0.7263. Current perf: 0.6486. Best perf so far: 0.7
********* Evaluated on dev set *********
Dev loss: 0.7574. Dev perf: 0.5263. Best dev perf: 0.6957
********* Done *********
[# API Calls 350] loss: 0.7138. Current perf: 0.6111. Best perf so far: 0.7
[# API Calls 400] loss: 0.7052. Current perf: 0.6111. Best perf so far: 0.7
********* Evaluated on dev set *********
Dev loss: 0.7454. Dev perf: 0.5556. Best dev perf: 0.6957
********* Done *********
[# API Calls 450] loss: 0.6912. Current perf: 0.6111. Best perf so far: 0.7
[# API Calls 500] loss: 0.6761. Current perf: 0.5806. Best perf so far: 0.7
********* Evaluated on dev set *********
Dev loss: 0.7187. Dev perf: 0.5625. Best dev perf: 0.6957
********* Done *********
[# API Calls 550] loss: 0.671. Current perf: 0.6471. Best perf so far: 0.7
[# API Calls 600] loss: 0.6693. Current perf: 0.6471. Best perf so far: 0.7
********* Evaluated on dev set *********
Dev loss: 0.7252. Dev perf: 0.6061. Best dev perf: 0.6957
********* Done *********
[# API Calls 650] loss: 0.674. Current perf: 0.6667. Best perf so far: 0.7
[# API Calls 700] loss: 0.6684. Current perf: 0.6667. Best perf so far: 0.7
********* Evaluated on dev set *********
Dev loss: 0.7363. Dev perf: 0.5263. Best dev perf: 0.6957
********* Done *********
[# API Calls 750] loss: 0.6494. Current perf: 0.6667. Best perf so far: 0.7222
[# API Calls 800] loss: 0.6396. Current perf: 0.7222. Best perf so far: 0.7222
********* Evaluated on dev set *********
Dev loss: 0.7131. Dev perf: 0.5882. Best dev perf: 0.6957
********* Done *********
[# API Calls 850] loss: 0.6231. Current perf: 0.7059. Best perf so far: 0.7222
[# API Calls 900] loss: 0.6244. Current perf: 0.7222. Best perf so far: 0.7568
********* Evaluated on dev set *********
Dev loss: 0.7055. Dev perf: 0.6471. Best dev perf: 0.6957
********* Done *********
[# API Calls 950] loss: 0.6117. Current perf: 0.6667. Best perf so far: 0.7568
[# API Calls 1000] loss: 0.6074. Current perf: 0.7059. Best perf so far: 0.7568
********* Evaluated on dev set *********
Dev loss: 0.6918. Dev perf: 0.6061. Best dev perf: 0.6957
********* Done *********
[# API Calls 1050] loss: 0.6084. Current perf: 0.7059. Best perf so far: 0.7568
[# API Calls 1100] loss: 0.6158. Current perf: 0.6857. Best perf so far: 0.7568
********* Evaluated on dev set *********
Dev loss: 0.7184. Dev perf: 0.6286. Best dev perf: 0.6957
********* Done *********
[# API Calls 1150] loss: 0.5906. Current perf: 0.7059. Best perf so far: 0.7568
[# API Calls 1200] loss: 0.5855. Current perf: 0.6875. Best perf so far: 0.7647
********* Evaluated on dev set *********
Dev loss: 0.6933. Dev perf: 0.5455. Best dev perf: 0.6957
********* Done *********
[# API Calls 1250] loss: 0.5808. Current perf: 0.6429. Best perf so far: 0.7647
[# API Calls 1300] loss: 0.5739. Current perf: 0.7879. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.6969. Dev perf: 0.6111. Best dev perf: 0.6957
********* Done *********
[# API Calls 1350] loss: 0.5509. Current perf: 0.8333. Best perf so far: 0.8485
[# API Calls 1400] loss: 0.5476. Current perf: 0.7778. Best perf so far: 0.8571
********* Evaluated on dev set *********
Dev loss: 0.7145. Dev perf: 0.65. Best dev perf: 0.6957
********* Done *********
[# API Calls 1450] loss: 0.5419. Current perf: 0.7742. Best perf so far: 0.8571
[# API Calls 1500] loss: 0.5436. Current perf: 0.8125. Best perf so far: 0.8571
********* Evaluated on dev set *********
Dev loss: 0.7134. Dev perf: 0.4516. Best dev perf: 0.6957
********* Done *********
[# API Calls 1550] loss: 0.5537. Current perf: 0.7333. Best perf so far: 0.875
[# API Calls 1600] loss: 0.5438. Current perf: 0.7879. Best perf so far: 0.875
********* Evaluated on dev set *********
Dev loss: 0.6987. Dev perf: 0.4516. Best dev perf: 0.6957
********* Done *********
[# API Calls 1650] loss: 0.5198. Current perf: 0.7879. Best perf so far: 0.875
[# API Calls 1700] loss: 0.5218. Current perf: 0.7647. Best perf so far: 0.875
********* Evaluated on dev set *********
Dev loss: 0.703. Dev perf: 0.6486. Best dev perf: 0.6957
********* Done *********
[# API Calls 1750] loss: 0.5196. Current perf: 0.8889. Best perf so far: 0.8889
[# API Calls 1800] loss: 0.5034. Current perf: 0.8387. Best perf so far: 0.8889
********* Evaluated on dev set *********
Dev loss: 0.7002. Dev perf: 0.5455. Best dev perf: 0.6957
********* Done *********
[# API Calls 1850] loss: 0.4925. Current perf: 0.7586. Best perf so far: 0.8889
[# API Calls 1900] loss: 0.4679. Current perf: 0.7742. Best perf so far: 0.8889
********* Evaluated on dev set *********
Dev loss: 0.6856. Dev perf: 0.6111. Best dev perf: 0.6957
********* Done *********
[# API Calls 1950] loss: 0.4607. Current perf: 0.8. Best perf so far: 0.9143
[# API Calls 2000] loss: 0.4628. Current perf: 0.7692. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.729. Dev perf: 0.4667. Best dev perf: 0.6957
********* Done *********
[# API Calls 2050] loss: 0.4425. Current perf: 0.9091. Best perf so far: 1.0
[# API Calls 2100] loss: 0.4622. Current perf: 0.8205. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8276. Dev perf: 0.6154. Best dev perf: 0.6957
********* Done *********
[# API Calls 2150] loss: 0.4731. Current perf: 0.8125. Best perf so far: 1.0
[# API Calls 2200] loss: 0.4748. Current perf: 0.8571. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7367. Dev perf: 0.4444. Best dev perf: 0.6957
********* Done *********
[# API Calls 2250] loss: 0.4456. Current perf: 0.8571. Best perf so far: 1.0
[# API Calls 2300] loss: 0.4303. Current perf: 0.9143. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7096. Dev perf: 0.6111. Best dev perf: 0.6957
********* Done *********
[# API Calls 2350] loss: 0.4106. Current perf: 0.9143. Best perf so far: 1.0
[# API Calls 2400] loss: 0.4162. Current perf: 0.8889. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7211. Dev perf: 0.7. Best dev perf: 0.7
********* Done *********
[# API Calls 2450] loss: 0.4197. Current perf: 0.9091. Best perf so far: 1.0
[# API Calls 2500] loss: 0.3934. Current perf: 0.9333. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6733. Dev perf: 0.6667. Best dev perf: 0.7
********* Done *********
[# API Calls 2550] loss: 0.4014. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 2600] loss: 0.3808. Current perf: 0.8824. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7267. Dev perf: 0.7027. Best dev perf: 0.7027
********* Done *********
[# API Calls 2650] loss: 0.424. Current perf: 0.8649. Best perf so far: 1.0
[# API Calls 2700] loss: 0.352. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7099. Dev perf: 0.4516. Best dev perf: 0.7027
********* Done *********
[# API Calls 2750] loss: 0.3269. Current perf: 0.9412. Best perf so far: 1.0
[# API Calls 2800] loss: 0.3293. Current perf: 0.9375. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7597. Dev perf: 0.5455. Best dev perf: 0.7027
********* Done *********
[# API Calls 2850] loss: 0.3022. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 2900] loss: 0.2746. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8123. Dev perf: 0.5143. Best dev perf: 0.7027
********* Done *********
[# API Calls 2950] loss: 0.2921. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 3000] loss: 0.2829. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6913. Dev perf: 0.6316. Best dev perf: 0.7027
********* Done *********
[# API Calls 3050] loss: 0.2881. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3100] loss: 0.2731. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7325. Dev perf: 0.6286. Best dev perf: 0.7027
********* Done *********
[# API Calls 3150] loss: 0.2932. Current perf: 0.9333. Best perf so far: 1.0
[# API Calls 3200] loss: 0.2836. Current perf: 0.9412. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8122. Dev perf: 0.6486. Best dev perf: 0.7027
********* Done *********
[# API Calls 3250] loss: 0.2422. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 3300] loss: 0.2451. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7982. Dev perf: 0.6111. Best dev perf: 0.7027
********* Done *********
[# API Calls 3350] loss: 0.2471. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 3400] loss: 0.2155. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8689. Dev perf: 0.5294. Best dev perf: 0.7027
********* Done *********
[# API Calls 3450] loss: 0.2325. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 3500] loss: 0.2423. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.769. Dev perf: 0.5946. Best dev perf: 0.7027
********* Done *********
[# API Calls 3550] loss: 0.2579. Current perf: 0.9143. Best perf so far: 1.0
[# API Calls 3600] loss: 0.2132. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7611. Dev perf: 0.625. Best dev perf: 0.7027
********* Done *********
[# API Calls 3650] loss: 0.229. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 3700] loss: 0.2591. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7138. Dev perf: 0.5806. Best dev perf: 0.7027
********* Done *********
[# API Calls 3750] loss: 0.1974. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.1852. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7411. Dev perf: 0.6857. Best dev perf: 0.7027
********* Done *********
[# API Calls 3850] loss: 0.1773. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 3900] loss: 0.1786. Current perf: 0.9333. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7315. Dev perf: 0.6. Best dev perf: 0.7027
********* Done *********
[# API Calls 3950] loss: 0.2013. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 4000] loss: 0.1773. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9611. Dev perf: 0.6316. Best dev perf: 0.7027
********* Done *********
[# API Calls 4050] loss: 0.1918. Current perf: 0.9412. Best perf so far: 1.0
[# API Calls 4100] loss: 0.1806. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8205. Dev perf: 0.7059. Best dev perf: 0.7059
********* Done *********
[# API Calls 4150] loss: 0.1396. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 4200] loss: 0.1384. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9176. Dev perf: 0.6471. Best dev perf: 0.7059
********* Done *********
[# API Calls 4250] loss: 0.122. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 4300] loss: 0.1179. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9599. Dev perf: 0.6111. Best dev perf: 0.7059
********* Done *********
[# API Calls 4350] loss: 0.1315. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 4400] loss: 0.1274. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0668. Dev perf: 0.5789. Best dev perf: 0.7059
********* Done *********
[# API Calls 4450] loss: 0.1074. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4500] loss: 0.1555. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0803. Dev perf: 0.5789. Best dev perf: 0.7059
********* Done *********
[# API Calls 4550] loss: 0.232. Current perf: 0.9143. Best perf so far: 1.0
[# API Calls 4600] loss: 0.1601. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9992. Dev perf: 0.4848. Best dev perf: 0.7059
********* Done *********
[# API Calls 4650] loss: 0.1191. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.1333. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1959. Dev perf: 0.5. Best dev perf: 0.7059
********* Done *********
[# API Calls 4750] loss: 0.1363. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.1218. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1058. Dev perf: 0.5. Best dev perf: 0.7059
********* Done *********
[# API Calls 4850] loss: 0.0787. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.0804. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9731. Dev perf: 0.6286. Best dev perf: 0.7059
********* Done *********
[# API Calls 4950] loss: 0.099. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.1013. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.891. Dev perf: 0.6471. Best dev perf: 0.7059
********* Done *********
[# API Calls 5050] loss: 0.107. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.15. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8838. Dev perf: 0.5714. Best dev perf: 0.7059
********* Done *********
[# API Calls 5150] loss: 0.0827. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0914. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9727. Dev perf: 0.6667. Best dev perf: 0.7059
********* Done *********
[# API Calls 5250] loss: 0.0613. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0779. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0117. Dev perf: 0.6875. Best dev perf: 0.7059
********* Done *********
[# API Calls 5350] loss: 0.0814. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 5400] loss: 0.0911. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1683. Dev perf: 0.7059. Best dev perf: 0.7059
********* Done *********
[# API Calls 5450] loss: 0.0924. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0778. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1363. Dev perf: 0.6316. Best dev perf: 0.7059
********* Done *********
[# API Calls 5550] loss: 0.1436. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0882. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0694. Dev perf: 0.6875. Best dev perf: 0.7059
********* Done *********
[# API Calls 5650] loss: 0.1527. Current perf: 0.9412. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0656. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.18. Dev perf: 0.6857. Best dev perf: 0.7059
********* Done *********
[# API Calls 5750] loss: 0.0535. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0468. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2694. Dev perf: 0.7179. Best dev perf: 0.7179
********* Done *********
[# API Calls 5850] loss: 0.0518. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0984. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.4886. Dev perf: 0.6316. Best dev perf: 0.7179
********* Done *********
[# API Calls 5950] loss: 0.1707. Current perf: 0.9333. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0269. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2196. Dev perf: 0.5806. Best dev perf: 0.7179
********* Done *********
[# API Calls 6050] loss: 0.0265. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0271. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6188. Dev perf: 0.5455. Best dev perf: 0.7179
********* Done *********
[# API Calls 6150] loss: 0.0337. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0185. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6721. Dev perf: 0.5625. Best dev perf: 0.7179
********* Done *********
[# API Calls 6250] loss: 0.0174. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0167. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.9138. Dev perf: 0.5625. Best dev perf: 0.7179
********* Done *********
[# API Calls 6350] loss: 0.0315. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.03. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5578. Dev perf: 0.6452. Best dev perf: 0.7179
********* Done *********
[# API Calls 6450] loss: 0.0353. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0595. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.7056. Dev perf: 0.5882. Best dev perf: 0.7179
********* Done *********
[# API Calls 6550] loss: 0.0367. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0384. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.403. Dev perf: 0.6207. Best dev perf: 0.7179
********* Done *********
[# API Calls 6650] loss: 0.0727. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0303. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.4058. Dev perf: 0.6. Best dev perf: 0.7179
********* Done *********
[# API Calls 6750] loss: 0.0279. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0561. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.4043. Dev perf: 0.5185. Best dev perf: 0.7179
********* Done *********
[# API Calls 6850] loss: 0.0355. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0306. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3545. Dev perf: 0.6667. Best dev perf: 0.7179
********* Done *********
[# API Calls 6950] loss: 0.053. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0504. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6987. Dev perf: 0.5714. Best dev perf: 0.7179
********* Done *********
[# API Calls 7050] loss: 0.0585. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0319. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3883. Dev perf: 0.6. Best dev perf: 0.7179
********* Done *********
[# API Calls 7150] loss: 0.0415. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0223. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5326. Dev perf: 0.5517. Best dev perf: 0.7179
********* Done *********
[# API Calls 7250] loss: 0.1089. Current perf: 0.9333. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0401. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.7846. Dev perf: 0.5946. Best dev perf: 0.7179
********* Done *********
[# API Calls 7350] loss: 0.0642. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0202. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.4903. Dev perf: 0.5294. Best dev perf: 0.7179
********* Done *********
[# API Calls 7450] loss: 0.0197. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.023. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.4454. Dev perf: 0.6111. Best dev perf: 0.7179
********* Done *********
[# API Calls 7550] loss: 0.0328. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0253. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2767. Dev perf: 0.5806. Best dev perf: 0.7179
********* Done *********
[# API Calls 7650] loss: 0.0219. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 35.94669595559438 (mins)
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset mrpc (/home/qingyang/.cache/huggingface/datasets/mrpc/default/0.0.0/8e9daa09bd61aa81cad8b8a10f40891bae9e05ef809a511222348af3d59a32d0)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 4925.24ex/s]
{'text1': 'Tibco has used the Rendezvous name since 1994 for several of its technology products , according to the Palo Alto , California company .', 'text2': 'Tibco has used the Rendezvous name since 1994 for several of its technology products , it said .', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . Tibco has used the Rendezvous name since 1994 for several of its technology products , according to the Palo Alto , California company . ? <mask> , Tibco has used the Rendezvous name since 1994 for several of its technology products , it said .", 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 15.44ba/s]
Using custom data configuration default
Reusing dataset mrpc (/home/qingyang/.cache/huggingface/datasets/mrpc/default/0.0.0/8e9daa09bd61aa81cad8b8a10f40891bae9e05ef809a511222348af3d59a32d0)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5369.14ex/s]
{'text1': 'A draft statement , obtained by Reuters on Friday , stopped short of endorsing the U.S. charge but said some aspects of Iran \'s programme raised " serious concern " .', 'text2': 'The EU statement stopped short of endorsing the U.S. charge that Tehran is seeking nuclear weapons but said some aspects of Iran \'s programme raised " serious concern " .', 'labels': 1, 'input_text': 'Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International\'d Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . A draft statement , obtained by Reuters on Friday , stopped short of endorsing the U.S. charge but said some aspects of Iran \'s programme raised " serious concern " . ? <mask> , The EU statement stopped short of endorsing the U.S. charge that Tehran is seeking nuclear weapons but said some aspects of Iran \'s programme raised " serious concern " .', 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 29.53ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 79       | 9904   |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 88       | 9904   |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0084, std=0.8482, min=-16.0904, max=17.5185
 - After clipping (round 1): mu=-0.0068, std=0.7070, min=-2.5529, max=2.5361
 - After clipping (round 2): mu=-0.0061, std=0.6995, min=-2.1277, max=2.1141
 - After clipping (round 3): mu=-0.0060, std=0.6990, min=-2.1045, max=2.0924
 - After clipping (round 4): mu=-0.0060, std=0.6989, min=-2.1030, max=2.0909
 - After clipping (round 5): mu=-0.0060, std=0.6989, min=-2.1029, max=2.0908
 - Random Projection: mu=0.0000, std=0.0313
[Layer 2]
 - Before clipping: mu=-0.0296, std=0.8772, min=-20.4175, max=15.8835
 - After clipping (round 1): mu=-0.0196, std=0.6773, min=-2.6612, max=2.6019
 - After clipping (round 2): mu=-0.0189, std=0.6656, min=-2.0516, max=2.0125
 - After clipping (round 3): mu=-0.0189, std=0.6647, min=-2.0158, max=1.9780
 - After clipping (round 4): mu=-0.0189, std=0.6647, min=-2.0131, max=1.9753
 - After clipping (round 5): mu=-0.0189, std=0.6646, min=-2.0128, max=1.9751
 - Random Projection: mu=0.0000, std=0.0297
[Layer 3]
 - Before clipping: mu=-0.0320, std=0.9135, min=-21.1147, max=14.6858
 - After clipping (round 1): mu=-0.0188, std=0.6697, min=-2.7726, max=2.7086
 - After clipping (round 2): mu=-0.0184, std=0.6555, min=-2.0280, max=1.9903
 - After clipping (round 3): mu=-0.0184, std=0.6543, min=-1.9847, max=1.9480
 - After clipping (round 4): mu=-0.0184, std=0.6542, min=-1.9814, max=1.9446
 - After clipping (round 5): mu=-0.0184, std=0.6542, min=-1.9811, max=1.9444
 - Random Projection: mu=0.0000, std=0.0293
[Layer 4]
 - Before clipping: mu=-0.0354, std=0.9223, min=-25.4108, max=11.1239
 - After clipping (round 1): mu=-0.0201, std=0.6846, min=-2.8022, max=2.7314
 - After clipping (round 2): mu=-0.0196, std=0.6718, min=-2.0741, max=2.0338
 - After clipping (round 3): mu=-0.0196, std=0.6708, min=-2.0349, max=1.9957
 - After clipping (round 4): mu=-0.0196, std=0.6707, min=-2.0320, max=1.9928
 - After clipping (round 5): mu=-0.0196, std=0.6707, min=-2.0318, max=1.9926
 - Random Projection: mu=0.0000, std=0.0300
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9429, min=-26.9535, max=8.5240
 - After clipping (round 1): mu=-0.0212, std=0.6760, min=-2.8678, max=2.7897
 - After clipping (round 2): mu=-0.0204, std=0.6612, min=-2.0492, max=2.0067
 - After clipping (round 3): mu=-0.0203, std=0.6601, min=-2.0040, max=1.9633
 - After clipping (round 4): mu=-0.0203, std=0.6600, min=-2.0006, max=1.9599
 - After clipping (round 5): mu=-0.0203, std=0.6600, min=-2.0003, max=1.9597
 - Random Projection: mu=0.0000, std=0.0295
[Layer 6]
 - Before clipping: mu=-0.0451, std=0.9604, min=-28.5413, max=7.3432
 - After clipping (round 1): mu=-0.0258, std=0.6780, min=-2.9264, max=2.8361
 - After clipping (round 2): mu=-0.0247, std=0.6607, min=-2.0596, max=2.0081
 - After clipping (round 3): mu=-0.0246, std=0.6593, min=-2.0070, max=1.9575
 - After clipping (round 4): mu=-0.0246, std=0.6591, min=-2.0024, max=1.9532
 - After clipping (round 5): mu=-0.0246, std=0.6591, min=-2.0020, max=1.9528
 - Random Projection: mu=0.0000, std=0.0295
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9761, min=-29.9212, max=6.9540
 - After clipping (round 1): mu=-0.0198, std=0.6524, min=-2.9692, max=2.8875
 - After clipping (round 2): mu=-0.0184, std=0.6306, min=-1.9770, max=1.9375
 - After clipping (round 3): mu=-0.0183, std=0.6285, min=-1.9102, max=1.8733
 - After clipping (round 4): mu=-0.0183, std=0.6283, min=-1.9037, max=1.8671
 - After clipping (round 5): mu=-0.0183, std=0.6282, min=-1.9031, max=1.8665
 - Random Projection: mu=0.0000, std=0.0281
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9935, min=-31.2053, max=6.6307
 - After clipping (round 1): mu=-0.0214, std=0.6248, min=-3.0236, max=2.9372
 - After clipping (round 2): mu=-0.0194, std=0.5981, min=-1.8957, max=1.8530
 - After clipping (round 3): mu=-0.0192, std=0.5952, min=-1.8136, max=1.7748
 - After clipping (round 4): mu=-0.0191, std=0.5948, min=-1.8047, max=1.7663
 - After clipping (round 5): mu=-0.0191, std=0.5948, min=-1.8037, max=1.7654
 - Random Projection: mu=0.0000, std=0.0266
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9878, min=-30.8447, max=6.5837
 - After clipping (round 1): mu=-0.0211, std=0.5948, min=-3.0062, max=2.9204
 - After clipping (round 2): mu=-0.0191, std=0.5653, min=-1.8056, max=1.7635
 - After clipping (round 3): mu=-0.0189, std=0.5620, min=-1.7151, max=1.6769
 - After clipping (round 4): mu=-0.0188, std=0.5616, min=-1.7049, max=1.6672
 - After clipping (round 5): mu=-0.0188, std=0.5616, min=-1.7037, max=1.6660
 - Random Projection: mu=0.0000, std=0.0251
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9937, min=-31.0015, max=7.4178
 - After clipping (round 1): mu=-0.0143, std=0.5697, min=-3.0175, max=2.9445
 - After clipping (round 2): mu=-0.0123, std=0.5382, min=-1.7234, max=1.6948
 - After clipping (round 3): mu=-0.0120, std=0.5346, min=-1.6268, max=1.6023
 - After clipping (round 4): mu=-0.0120, std=0.5341, min=-1.6157, max=1.5917
 - After clipping (round 5): mu=-0.0120, std=0.5341, min=-1.6143, max=1.5904
 - Random Projection: mu=0.0000, std=0.0239
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9533, min=-29.3491, max=7.1167
 - After clipping (round 1): mu=-0.0126, std=0.5578, min=-2.8939, max=2.8260
 - After clipping (round 2): mu=-0.0107, std=0.5289, min=-1.6860, max=1.6608
 - After clipping (round 3): mu=-0.0104, std=0.5256, min=-1.5974, max=1.5761
 - After clipping (round 4): mu=-0.0104, std=0.5252, min=-1.5873, max=1.5665
 - After clipping (round 5): mu=-0.0104, std=0.5252, min=-1.5861, max=1.5653
 - Random Projection: mu=0.0000, std=0.0235
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9696, min=-30.0332, max=6.7823
 - After clipping (round 1): mu=-0.0221, std=0.5683, min=-2.9524, max=2.8652
 - After clipping (round 2): mu=-0.0201, std=0.5399, min=-1.7271, max=1.6828
 - After clipping (round 3): mu=-0.0198, std=0.5366, min=-1.6398, max=1.5996
 - After clipping (round 4): mu=-0.0198, std=0.5362, min=-1.6297, max=1.5901
 - After clipping (round 5): mu=-0.0198, std=0.5362, min=-1.6285, max=1.5889
 - Random Projection: mu=0.0000, std=0.0240
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9758, min=-30.3212, max=6.4813
 - After clipping (round 1): mu=-0.0230, std=0.5887, min=-2.9712, max=2.8833
 - After clipping (round 2): mu=-0.0215, std=0.5648, min=-1.7892, max=1.7431
 - After clipping (round 3): mu=-0.0213, std=0.5622, min=-1.7158, max=1.6729
 - After clipping (round 4): mu=-0.0213, std=0.5620, min=-1.7080, max=1.6654
 - After clipping (round 5): mu=-0.0213, std=0.5619, min=-1.7072, max=1.6646
 - Random Projection: mu=0.0000, std=0.0251
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9813, min=-30.6892, max=5.7291
 - After clipping (round 1): mu=-0.0217, std=0.5917, min=-2.9867, max=2.9012
 - After clipping (round 2): mu=-0.0205, std=0.5706, min=-1.7969, max=1.7535
 - After clipping (round 3): mu=-0.0204, std=0.5685, min=-1.7324, max=1.6913
 - After clipping (round 4): mu=-0.0204, std=0.5683, min=-1.7260, max=1.6852
 - After clipping (round 5): mu=-0.0204, std=0.5683, min=-1.7254, max=1.6846
 - Random Projection: mu=0.0000, std=0.0254
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9928, min=-28.0184, max=6.1451
 - After clipping (round 1): mu=-0.0159, std=0.5947, min=-3.0204, max=2.9364
 - After clipping (round 2): mu=-0.0139, std=0.5707, min=-1.8001, max=1.7683
 - After clipping (round 3): mu=-0.0137, std=0.5684, min=-1.7261, max=1.6983
 - After clipping (round 4): mu=-0.0137, std=0.5681, min=-1.7189, max=1.6914
 - After clipping (round 5): mu=-0.0137, std=0.5681, min=-1.7181, max=1.6907
 - Random Projection: mu=0.0000, std=0.0254
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9984, min=-31.5349, max=6.1434
 - After clipping (round 1): mu=-0.0046, std=0.5938, min=-3.0281, max=2.9621
 - After clipping (round 2): mu=-0.0026, std=0.5701, min=-1.7860, max=1.7767
 - After clipping (round 3): mu=-0.0025, std=0.5679, min=-1.7130, max=1.7077
 - After clipping (round 4): mu=-0.0025, std=0.5677, min=-1.7062, max=1.7011
 - After clipping (round 5): mu=-0.0025, std=0.5676, min=-1.7055, max=1.7005
 - Random Projection: mu=0.0000, std=0.0254
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9750, min=-30.3702, max=6.1365
 - After clipping (round 1): mu=-0.0037, std=0.5791, min=-2.9566, max=2.8934
 - After clipping (round 2): mu=-0.0021, std=0.5559, min=-1.7410, max=1.7336
 - After clipping (round 3): mu=-0.0020, std=0.5538, min=-1.6699, max=1.6657
 - After clipping (round 4): mu=-0.0020, std=0.5536, min=-1.6633, max=1.6593
 - After clipping (round 5): mu=-0.0020, std=0.5535, min=-1.6627, max=1.6587
 - Random Projection: mu=0.0000, std=0.0248
[Layer 18]
 - Before clipping: mu=-0.0307, std=0.9736, min=-30.4670, max=5.7305
 - After clipping (round 1): mu=-0.0036, std=0.5852, min=-2.9514, max=2.8900
 - After clipping (round 2): mu=-0.0024, std=0.5615, min=-1.7592, max=1.7520
 - After clipping (round 3): mu=-0.0024, std=0.5593, min=-1.6869, max=1.6821
 - After clipping (round 4): mu=-0.0023, std=0.5591, min=-1.6802, max=1.6755
 - After clipping (round 5): mu=-0.0023, std=0.5590, min=-1.6795, max=1.6748
 - Random Projection: mu=0.0000, std=0.0250
[Layer 19]
 - Before clipping: mu=-0.0297, std=0.9619, min=-29.5146, max=5.5791
 - After clipping (round 1): mu=-0.0034, std=0.5797, min=-2.9154, max=2.8560
 - After clipping (round 2): mu=-0.0024, std=0.5556, min=-1.7426, max=1.7357
 - After clipping (round 3): mu=-0.0024, std=0.5533, min=-1.6691, max=1.6643
 - After clipping (round 4): mu=-0.0023, std=0.5531, min=-1.6622, max=1.6575
 - After clipping (round 5): mu=-0.0023, std=0.5530, min=-1.6615, max=1.6568
 - Random Projection: mu=0.0000, std=0.0247
[Layer 20]
 - Before clipping: mu=-0.0287, std=0.9478, min=-28.9156, max=5.5934
 - After clipping (round 1): mu=-0.0037, std=0.5779, min=-2.8721, max=2.8146
 - After clipping (round 2): mu=-0.0029, std=0.5536, min=-1.7373, max=1.7298
 - After clipping (round 3): mu=-0.0029, std=0.5513, min=-1.6637, max=1.6579
 - After clipping (round 4): mu=-0.0029, std=0.5511, min=-1.6568, max=1.6511
 - After clipping (round 5): mu=-0.0029, std=0.5511, min=-1.6562, max=1.6504
 - Random Projection: mu=0.0000, std=0.0246
[Layer 21]
 - Before clipping: mu=-0.0333, std=0.9898, min=-31.2400, max=5.3379
 - After clipping (round 1): mu=-0.0074, std=0.5814, min=-3.0027, max=2.9362
 - After clipping (round 2): mu=-0.0067, std=0.5543, min=-1.7516, max=1.7367
 - After clipping (round 3): mu=-0.0067, std=0.5518, min=-1.6697, max=1.6563
 - After clipping (round 4): mu=-0.0067, std=0.5515, min=-1.6620, max=1.6486
 - After clipping (round 5): mu=-0.0067, std=0.5515, min=-1.6612, max=1.6478
 - Random Projection: mu=0.0000, std=0.0247
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0061, min=-32.0938, max=5.2659
 - After clipping (round 1): mu=-0.0152, std=0.5591, min=-3.0596, max=2.9767
 - After clipping (round 2): mu=-0.0144, std=0.5306, min=-1.6926, max=1.6622
 - After clipping (round 3): mu=-0.0144, std=0.5279, min=-1.6062, max=1.5773
 - After clipping (round 4): mu=-0.0144, std=0.5276, min=-1.5980, max=1.5691
 - After clipping (round 5): mu=-0.0144, std=0.5275, min=-1.5972, max=1.5683
 - Random Projection: mu=0.0000, std=0.0236
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0086, min=-32.4024, max=5.6544
 - After clipping (round 1): mu=-0.0053, std=0.5547, min=-3.0568, max=2.9947
 - After clipping (round 2): mu=-0.0045, std=0.5263, min=-1.6694, max=1.6588
 - After clipping (round 3): mu=-0.0045, std=0.5234, min=-1.5834, max=1.5744
 - After clipping (round 4): mu=-0.0045, std=0.5231, min=-1.5749, max=1.5658
 - After clipping (round 5): mu=-0.0045, std=0.5231, min=-1.5739, max=1.5648
 - Random Projection: mu=0.0000, std=0.0234
Random projections initialized.
[# API Calls 50] loss: 0.8839. Current perf: 0.6383. Best perf so far: 0.6667
[# API Calls 100] loss: 0.8233. Current perf: 0.5909. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 0.8249. Dev perf: 0.6512. Best dev perf: 0.6512
********* Done *********
[# API Calls 150] loss: 0.822. Current perf: 0.5909. Best perf so far: 0.6667
[# API Calls 200] loss: 0.7791. Current perf: 0.6512. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 0.8001. Dev perf: 0.6512. Best dev perf: 0.6512
********* Done *********
[# API Calls 250] loss: 0.7532. Current perf: 0.619. Best perf so far: 0.6667
[# API Calls 300] loss: 0.7348. Current perf: 0.6316. Best perf so far: 0.6667
********* Evaluated on dev set *********
Dev loss: 0.7654. Dev perf: 0.5. Best dev perf: 0.6512
********* Done *********
[# API Calls 350] loss: 0.7235. Current perf: 0.6486. Best perf so far: 0.6667
[# API Calls 400] loss: 0.7101. Current perf: 0.5. Best perf so far: 0.6842
********* Evaluated on dev set *********
Dev loss: 0.7605. Dev perf: 0.4828. Best dev perf: 0.6512
********* Done *********
[# API Calls 450] loss: 0.7007. Current perf: 0.65. Best perf so far: 0.6842
[# API Calls 500] loss: 0.689. Current perf: 0.6842. Best perf so far: 0.6842
********* Evaluated on dev set *********
Dev loss: 0.7421. Dev perf: 0.4667. Best dev perf: 0.6512
********* Done *********
[# API Calls 550] loss: 0.6876. Current perf: 0.6286. Best perf so far: 0.7059
[# API Calls 600] loss: 0.6696. Current perf: 0.6667. Best perf so far: 0.7647
********* Evaluated on dev set *********
Dev loss: 0.7345. Dev perf: 0.5714. Best dev perf: 0.6512
********* Done *********
[# API Calls 650] loss: 0.6802. Current perf: 0.6857. Best perf so far: 0.7647
[# API Calls 700] loss: 0.6555. Current perf: 0.7429. Best perf so far: 0.7647
********* Evaluated on dev set *********
Dev loss: 0.7349. Dev perf: 0.5625. Best dev perf: 0.6512
********* Done *********
[# API Calls 750] loss: 0.6581. Current perf: 0.6667. Best perf so far: 0.7647
[# API Calls 800] loss: 0.6459. Current perf: 0.7222. Best perf so far: 0.7647
********* Evaluated on dev set *********
Dev loss: 0.7166. Dev perf: 0.5455. Best dev perf: 0.6512
********* Done *********
[# API Calls 850] loss: 0.6274. Current perf: 0.7273. Best perf so far: 0.7879
[# API Calls 900] loss: 0.625. Current perf: 0.7647. Best perf so far: 0.7879
********* Evaluated on dev set *********
Dev loss: 0.7005. Dev perf: 0.5333. Best dev perf: 0.6512
********* Done *********
[# API Calls 950] loss: 0.6194. Current perf: 0.7647. Best perf so far: 0.8
[# API Calls 1000] loss: 0.6255. Current perf: 0.7647. Best perf so far: 0.8
********* Evaluated on dev set *********
Dev loss: 0.7209. Dev perf: 0.5161. Best dev perf: 0.6512
********* Done *********
[# API Calls 1050] loss: 0.6163. Current perf: 0.7429. Best perf so far: 0.8
[# API Calls 1100] loss: 0.6145. Current perf: 0.7742. Best perf so far: 0.8
********* Evaluated on dev set *********
Dev loss: 0.7037. Dev perf: 0.4828. Best dev perf: 0.6512
********* Done *********
[# API Calls 1150] loss: 0.5994. Current perf: 0.7273. Best perf so far: 0.8125
[# API Calls 1200] loss: 0.6033. Current perf: 0.7568. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.6727. Dev perf: 0.5556. Best dev perf: 0.6512
********* Done *********
[# API Calls 1250] loss: 0.5992. Current perf: 0.7317. Best perf so far: 0.8125
[# API Calls 1300] loss: 0.5826. Current perf: 0.7059. Best perf so far: 0.8235
********* Evaluated on dev set *********
Dev loss: 0.6828. Dev perf: 0.6061. Best dev perf: 0.6512
********* Done *********
[# API Calls 1350] loss: 0.5668. Current perf: 0.8125. Best perf so far: 0.8333
[# API Calls 1400] loss: 0.5676. Current perf: 0.8125. Best perf so far: 0.8571
********* Evaluated on dev set *********
Dev loss: 0.6786. Dev perf: 0.4138. Best dev perf: 0.6512
********* Done *********
[# API Calls 1450] loss: 0.5642. Current perf: 0.8. Best perf so far: 0.875
[# API Calls 1500] loss: 0.5542. Current perf: 0.8485. Best perf so far: 0.9091
********* Evaluated on dev set *********
Dev loss: 0.6513. Dev perf: 0.5882. Best dev perf: 0.6512
********* Done *********
[# API Calls 1550] loss: 0.5562. Current perf: 0.8485. Best perf so far: 0.9091
[# API Calls 1600] loss: 0.5598. Current perf: 0.8235. Best perf so far: 0.9091
********* Evaluated on dev set *********
Dev loss: 0.656. Dev perf: 0.6061. Best dev perf: 0.6512
********* Done *********
[# API Calls 1650] loss: 0.555. Current perf: 0.8571. Best perf so far: 0.9091
[# API Calls 1700] loss: 0.5479. Current perf: 0.8667. Best perf so far: 0.9091
********* Evaluated on dev set *********
Dev loss: 0.6263. Dev perf: 0.5333. Best dev perf: 0.6512
********* Done *********
[# API Calls 1750] loss: 0.5274. Current perf: 0.8485. Best perf so far: 0.9091
[# API Calls 1800] loss: 0.5071. Current perf: 0.875. Best perf so far: 0.9143
********* Evaluated on dev set *********
Dev loss: 0.6092. Dev perf: 0.6667. Best dev perf: 0.6667
********* Done *********
[# API Calls 1850] loss: 0.4982. Current perf: 0.875. Best perf so far: 0.9143
[# API Calls 1900] loss: 0.492. Current perf: 0.8. Best perf so far: 0.9143
********* Evaluated on dev set *********
Dev loss: 0.5884. Dev perf: 0.7097. Best dev perf: 0.7097
********* Done *********
[# API Calls 1950] loss: 0.4878. Current perf: 0.8387. Best perf so far: 0.9143
[# API Calls 2000] loss: 0.49. Current perf: 0.8485. Best perf so far: 0.9143
********* Evaluated on dev set *********
Dev loss: 0.6013. Dev perf: 0.7059. Best dev perf: 0.7097
********* Done *********
[# API Calls 2050] loss: 0.4796. Current perf: 0.8485. Best perf so far: 0.9375
[# API Calls 2100] loss: 0.4844. Current perf: 0.8333. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.595. Dev perf: 0.6857. Best dev perf: 0.7097
********* Done *********
[# API Calls 2150] loss: 0.4372. Current perf: 0.8387. Best perf so far: 0.9375
[# API Calls 2200] loss: 0.4529. Current perf: 0.8108. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.6337. Dev perf: 0.6111. Best dev perf: 0.7097
********* Done *********
[# API Calls 2250] loss: 0.4081. Current perf: 0.8485. Best perf so far: 0.9375
[# API Calls 2300] loss: 0.4101. Current perf: 0.8485. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.5947. Dev perf: 0.6452. Best dev perf: 0.7097
********* Done *********
[# API Calls 2350] loss: 0.4049. Current perf: 0.8485. Best perf so far: 0.9375
[# API Calls 2400] loss: 0.3976. Current perf: 0.8485. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.5795. Dev perf: 0.6. Best dev perf: 0.7097
********* Done *********
[# API Calls 2450] loss: 0.3935. Current perf: 0.9143. Best perf so far: 0.9375
[# API Calls 2500] loss: 0.41. Current perf: 0.8649. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.5933. Dev perf: 0.6842. Best dev perf: 0.7097
********* Done *********
[# API Calls 2550] loss: 0.4055. Current perf: 0.8889. Best perf so far: 0.9375
[# API Calls 2600] loss: 0.3899. Current perf: 0.8235. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.5687. Dev perf: 0.6667. Best dev perf: 0.7097
********* Done *********
[# API Calls 2650] loss: 0.4162. Current perf: 0.8485. Best perf so far: 0.9375
[# API Calls 2700] loss: 0.4015. Current perf: 0.8387. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.55. Dev perf: 0.6. Best dev perf: 0.7097
********* Done *********
[# API Calls 2750] loss: 0.3642. Current perf: 0.875. Best perf so far: 0.9412
[# API Calls 2800] loss: 0.3366. Current perf: 0.9091. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.4695. Dev perf: 0.7647. Best dev perf: 0.7647
********* Done *********
[# API Calls 2850] loss: 0.3313. Current perf: 0.875. Best perf so far: 0.9412
[# API Calls 2900] loss: 0.3157. Current perf: 0.8387. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.5131. Dev perf: 0.5185. Best dev perf: 0.7647
********* Done *********
[# API Calls 2950] loss: 0.3097. Current perf: 0.8387. Best perf so far: 0.9412
[# API Calls 3000] loss: 0.3468. Current perf: 0.8889. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.5613. Dev perf: 0.7059. Best dev perf: 0.7647
********* Done *********
[# API Calls 3050] loss: 0.3734. Current perf: 0.8667. Best perf so far: 0.9412
[# API Calls 3100] loss: 0.2905. Current perf: 0.9412. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.6001. Dev perf: 0.6667. Best dev perf: 0.7647
********* Done *********
[# API Calls 3150] loss: 0.2706. Current perf: 0.9375. Best perf so far: 0.9697
[# API Calls 3200] loss: 0.2619. Current perf: 0.9412. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.5589. Dev perf: 0.6875. Best dev perf: 0.7647
********* Done *********
[# API Calls 3250] loss: 0.2821. Current perf: 0.9412. Best perf so far: 0.9697
[# API Calls 3300] loss: 0.256. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.5647. Dev perf: 0.6667. Best dev perf: 0.7647
********* Done *********
[# API Calls 3350] loss: 0.2525. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 3400] loss: 0.3092. Current perf: 0.8571. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6131. Dev perf: 0.5385. Best dev perf: 0.7647
********* Done *********
[# API Calls 3450] loss: 0.2431. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 3500] loss: 0.2233. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4936. Dev perf: 0.7333. Best dev perf: 0.7647
********* Done *********
[# API Calls 3550] loss: 0.2377. Current perf: 0.9333. Best perf so far: 1.0
[# API Calls 3600] loss: 0.2236. Current perf: 0.9333. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5535. Dev perf: 0.6429. Best dev perf: 0.7647
********* Done *********
[# API Calls 3650] loss: 0.1984. Current perf: 0.9333. Best perf so far: 1.0
[# API Calls 3700] loss: 0.1949. Current perf: 0.8966. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7199. Dev perf: 0.56. Best dev perf: 0.7647
********* Done *********
[# API Calls 3750] loss: 0.1383. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.1375. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6027. Dev perf: 0.7143. Best dev perf: 0.7647
********* Done *********
[# API Calls 3850] loss: 0.1213. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 3900] loss: 0.1338. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.676. Dev perf: 0.7333. Best dev perf: 0.7647
********* Done *********
[# API Calls 3950] loss: 0.1737. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 4000] loss: 0.2667. Current perf: 0.8966. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6382. Dev perf: 0.5833. Best dev perf: 0.7647
********* Done *********
[# API Calls 4050] loss: 0.1794. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 4100] loss: 0.201. Current perf: 0.9412. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6199. Dev perf: 0.625. Best dev perf: 0.7647
********* Done *********
[# API Calls 4150] loss: 0.1351. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.1541. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5512. Dev perf: 0.6429. Best dev perf: 0.7647
********* Done *********
[# API Calls 4250] loss: 0.156. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.141. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5856. Dev perf: 0.6429. Best dev perf: 0.7647
********* Done *********
[# API Calls 4350] loss: 0.1493. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.1752. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6962. Dev perf: 0.5926. Best dev perf: 0.7647
********* Done *********
[# API Calls 4450] loss: 0.1487. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 4500] loss: 0.1752. Current perf: 0.9091. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6524. Dev perf: 0.7059. Best dev perf: 0.7647
********* Done *********
[# API Calls 4550] loss: 0.1264. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 4600] loss: 0.1425. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7328. Dev perf: 0.6875. Best dev perf: 0.7647
********* Done *********
[# API Calls 4650] loss: 0.1449. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.1238. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6745. Dev perf: 0.6875. Best dev perf: 0.7647
********* Done *********
[# API Calls 4750] loss: 0.102. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.086. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7829. Dev perf: 0.6875. Best dev perf: 0.7647
********* Done *********
[# API Calls 4850] loss: 0.0967. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.0791. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6473. Dev perf: 0.6452. Best dev perf: 0.7647
********* Done *********
[# API Calls 4950] loss: 0.0931. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.1454. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.525. Dev perf: 0.8108. Best dev perf: 0.8108
********* Done *********
[# API Calls 5050] loss: 0.1105. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 5100] loss: 0.1124. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7173. Dev perf: 0.6452. Best dev perf: 0.8108
********* Done *********
[# API Calls 5150] loss: 0.1392. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0683. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8468. Dev perf: 0.5714. Best dev perf: 0.8108
********* Done *********
[# API Calls 5250] loss: 0.0517. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0601. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7407. Dev perf: 0.6207. Best dev perf: 0.8108
********* Done *********
[# API Calls 5350] loss: 0.0641. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.126. Current perf: 0.9412. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6935. Dev perf: 0.7059. Best dev perf: 0.8108
********* Done *********
[# API Calls 5450] loss: 0.047. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0441. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0085. Dev perf: 0.5185. Best dev perf: 0.8108
********* Done *********
[# API Calls 5550] loss: 0.0374. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0434. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9324. Dev perf: 0.4444. Best dev perf: 0.8108
********* Done *********
[# API Calls 5650] loss: 0.0466. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0455. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7741. Dev perf: 0.5714. Best dev perf: 0.8108
********* Done *********
[# API Calls 5750] loss: 0.0309. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0448. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.775. Dev perf: 0.6452. Best dev perf: 0.8108
********* Done *********
[# API Calls 5850] loss: 0.0724. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0799. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1988. Dev perf: 0.5217. Best dev perf: 0.8108
********* Done *********
[# API Calls 5950] loss: 0.0828. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 6000] loss: 0.066. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2658. Dev perf: 0.6. Best dev perf: 0.8108
********* Done *********
[# API Calls 6050] loss: 0.061. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0436. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1088. Dev perf: 0.7097. Best dev perf: 0.8108
********* Done *********
[# API Calls 6150] loss: 0.0361. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0346. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1063. Dev perf: 0.6452. Best dev perf: 0.8108
********* Done *********
[# API Calls 6250] loss: 0.0398. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0539. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3421. Dev perf: 0.5517. Best dev perf: 0.8108
********* Done *********
[# API Calls 6350] loss: 0.0435. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.0424. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5577. Dev perf: 0.7778. Best dev perf: 0.8108
********* Done *********
[# API Calls 6450] loss: 0.0306. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0332. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.614. Dev perf: 0.7778. Best dev perf: 0.8108
********* Done *********
[# API Calls 6550] loss: 0.0495. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0158. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6373. Dev perf: 0.7429. Best dev perf: 0.8108
********* Done *********
[# API Calls 6650] loss: 0.008. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0099. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7584. Dev perf: 0.6875. Best dev perf: 0.8108
********* Done *********
[# API Calls 6750] loss: 0.0554. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0107. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0909. Dev perf: 0.625. Best dev perf: 0.8108
********* Done *********
[# API Calls 6850] loss: 0.0559. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0282. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9655. Dev perf: 0.6207. Best dev perf: 0.8108
********* Done *********
[# API Calls 6950] loss: 0.0141. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0233. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9562. Dev perf: 0.6875. Best dev perf: 0.8108
********* Done *********
[# API Calls 7050] loss: 0.0149. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0086. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0076. Dev perf: 0.6875. Best dev perf: 0.8108
********* Done *********
[# API Calls 7150] loss: 0.0092. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0085. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0093. Dev perf: 0.6875. Best dev perf: 0.8108
********* Done *********
[# API Calls 7250] loss: 0.018. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0138. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9974. Dev perf: 0.7429. Best dev perf: 0.8108
********* Done *********
[# API Calls 7350] loss: 0.0103. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0168. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0065. Dev perf: 0.7059. Best dev perf: 0.8108
********* Done *********
[# API Calls 7450] loss: 0.0189. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0219. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2941. Dev perf: 0.7097. Best dev perf: 0.8108
********* Done *********
[# API Calls 7550] loss: 0.0142. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0051. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.4534. Dev perf: 0.6667. Best dev perf: 0.8108
********* Done *********
[# API Calls 7650] loss: 0.0055. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 35.61563017765681 (mins)
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset mrpc (/home/qingyang/.cache/huggingface/datasets/mrpc/default/0.0.0/8e9daa09bd61aa81cad8b8a10f40891bae9e05ef809a511222348af3d59a32d0)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 3998.03ex/s]
{'text1': 'The chipset will operate in the 2.4-GHz band , and features radio signal interference prevention and low power consumption .', 'text2': 'The 2.4 GHz radio frequency chipset features radio interference protection and low power consumption .', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . The chipset will operate in the 2.4-GHz band , and features radio signal interference prevention and low power consumption . ? <mask> , The 2.4 GHz radio frequency chipset features radio interference protection and low power consumption .", 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 24.10ba/s]
Using custom data configuration default
Reusing dataset mrpc (/home/qingyang/.cache/huggingface/datasets/mrpc/default/0.0.0/8e9daa09bd61aa81cad8b8a10f40891bae9e05ef809a511222348af3d59a32d0)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5007.19ex/s]
{'text1': 'The findings are being published today in the Annals of Internal Medicine .', 'text2': 'The findings are published in the July 1st issue of the Annals of Internal Medicine .', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . The findings are being published today in the Annals of Internal Medicine . ? <mask> , The findings are published in the July 1st issue of the Annals of Internal Medicine .", 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 29.21ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 77       | 9904   |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 67       | 9904   |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0084, std=0.8488, min=-16.1617, max=17.5089
 - After clipping (round 1): mu=-0.0068, std=0.7095, min=-2.5548, max=2.5380
 - After clipping (round 2): mu=-0.0061, std=0.7023, min=-2.1353, max=2.1217
 - After clipping (round 3): mu=-0.0061, std=0.7018, min=-2.1131, max=2.1008
 - After clipping (round 4): mu=-0.0061, std=0.7018, min=-2.1116, max=2.0994
 - After clipping (round 5): mu=-0.0061, std=0.7018, min=-2.1115, max=2.0993
 - Random Projection: mu=0.0000, std=0.0314
[Layer 2]
 - Before clipping: mu=-0.0296, std=0.8771, min=-20.3290, max=15.9792
 - After clipping (round 1): mu=-0.0196, std=0.6782, min=-2.6610, max=2.6017
 - After clipping (round 2): mu=-0.0189, std=0.6667, min=-2.0543, max=2.0151
 - After clipping (round 3): mu=-0.0189, std=0.6658, min=-2.0190, max=1.9812
 - After clipping (round 4): mu=-0.0189, std=0.6658, min=-2.0164, max=1.9786
 - After clipping (round 5): mu=-0.0189, std=0.6658, min=-2.0162, max=1.9784
 - Random Projection: mu=0.0000, std=0.0298
[Layer 3]
 - Before clipping: mu=-0.0320, std=0.9140, min=-21.0915, max=14.5442
 - After clipping (round 1): mu=-0.0189, std=0.6723, min=-2.7740, max=2.7100
 - After clipping (round 2): mu=-0.0184, std=0.6584, min=-2.0357, max=1.9980
 - After clipping (round 3): mu=-0.0184, std=0.6573, min=-1.9936, max=1.9567
 - After clipping (round 4): mu=-0.0184, std=0.6572, min=-1.9903, max=1.9535
 - After clipping (round 5): mu=-0.0184, std=0.6572, min=-1.9901, max=1.9532
 - Random Projection: mu=0.0000, std=0.0294
[Layer 4]
 - Before clipping: mu=-0.0354, std=0.9230, min=-25.3839, max=11.1306
 - After clipping (round 1): mu=-0.0202, std=0.6885, min=-2.8045, max=2.7336
 - After clipping (round 2): mu=-0.0196, std=0.6758, min=-2.0857, max=2.0454
 - After clipping (round 3): mu=-0.0196, std=0.6749, min=-2.0472, max=2.0079
 - After clipping (round 4): mu=-0.0196, std=0.6748, min=-2.0443, max=2.0052
 - After clipping (round 5): mu=-0.0196, std=0.6748, min=-2.0441, max=2.0050
 - Random Projection: mu=0.0000, std=0.0302
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9433, min=-26.9396, max=8.5177
 - After clipping (round 1): mu=-0.0213, std=0.6792, min=-2.8691, max=2.7909
 - After clipping (round 2): mu=-0.0204, std=0.6647, min=-2.0588, max=2.0163
 - After clipping (round 3): mu=-0.0203, std=0.6635, min=-2.0144, max=1.9736
 - After clipping (round 4): mu=-0.0203, std=0.6635, min=-2.0110, max=1.9703
 - After clipping (round 5): mu=-0.0203, std=0.6635, min=-2.0107, max=1.9700
 - Random Projection: mu=0.0000, std=0.0297
[Layer 6]
 - Before clipping: mu=-0.0451, std=0.9607, min=-28.5430, max=7.2789
 - After clipping (round 1): mu=-0.0259, std=0.6819, min=-2.9274, max=2.8371
 - After clipping (round 2): mu=-0.0248, std=0.6650, min=-2.0716, max=2.0199
 - After clipping (round 3): mu=-0.0247, std=0.6635, min=-2.0197, max=1.9701
 - After clipping (round 4): mu=-0.0247, std=0.6634, min=-2.0153, max=1.9658
 - After clipping (round 5): mu=-0.0247, std=0.6634, min=-2.0149, max=1.9654
 - Random Projection: mu=0.0000, std=0.0297
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9762, min=-29.8173, max=6.8436
 - After clipping (round 1): mu=-0.0198, std=0.6553, min=-2.9695, max=2.8878
 - After clipping (round 2): mu=-0.0186, std=0.6336, min=-1.9856, max=1.9460
 - After clipping (round 3): mu=-0.0184, std=0.6315, min=-1.9194, max=1.8823
 - After clipping (round 4): mu=-0.0184, std=0.6313, min=-1.9130, max=1.8761
 - After clipping (round 5): mu=-0.0184, std=0.6313, min=-1.9123, max=1.8755
 - Random Projection: mu=0.0000, std=0.0282
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9935, min=-31.1923, max=6.6572
 - After clipping (round 1): mu=-0.0214, std=0.6265, min=-3.0236, max=2.9372
 - After clipping (round 2): mu=-0.0195, std=0.6000, min=-1.9010, max=1.8581
 - After clipping (round 3): mu=-0.0193, std=0.5971, min=-1.8193, max=1.7804
 - After clipping (round 4): mu=-0.0192, std=0.5968, min=-1.8106, max=1.7720
 - After clipping (round 5): mu=-0.0192, std=0.5967, min=-1.8096, max=1.7711
 - Random Projection: mu=0.0000, std=0.0267
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9878, min=-30.8288, max=6.7198
 - After clipping (round 1): mu=-0.0212, std=0.5962, min=-3.0062, max=2.9204
 - After clipping (round 2): mu=-0.0192, std=0.5669, min=-1.8099, max=1.7675
 - After clipping (round 3): mu=-0.0189, std=0.5636, min=-1.7197, max=1.6814
 - After clipping (round 4): mu=-0.0189, std=0.5632, min=-1.7096, max=1.6718
 - After clipping (round 5): mu=-0.0189, std=0.5631, min=-1.7084, max=1.6706
 - Random Projection: mu=0.0000, std=0.0252
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9937, min=-31.0173, max=7.5286
 - After clipping (round 1): mu=-0.0144, std=0.5710, min=-3.0175, max=2.9445
 - After clipping (round 2): mu=-0.0123, std=0.5394, min=-1.7275, max=1.6987
 - After clipping (round 3): mu=-0.0121, std=0.5358, min=-1.6305, max=1.6058
 - After clipping (round 4): mu=-0.0120, std=0.5353, min=-1.6194, max=1.5952
 - After clipping (round 5): mu=-0.0120, std=0.5353, min=-1.6180, max=1.5939
 - Random Projection: mu=0.0000, std=0.0239
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9533, min=-29.3382, max=6.9270
 - After clipping (round 1): mu=-0.0127, std=0.5592, min=-2.8939, max=2.8260
 - After clipping (round 2): mu=-0.0107, std=0.5302, min=-1.6905, max=1.6650
 - After clipping (round 3): mu=-0.0105, std=0.5269, min=-1.6014, max=1.5799
 - After clipping (round 4): mu=-0.0105, std=0.5265, min=-1.5913, max=1.5703
 - After clipping (round 5): mu=-0.0105, std=0.5265, min=-1.5901, max=1.5691
 - Random Projection: mu=0.0000, std=0.0235
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9696, min=-29.9891, max=6.8656
 - After clipping (round 1): mu=-0.0223, std=0.5682, min=-2.9524, max=2.8651
 - After clipping (round 2): mu=-0.0201, std=0.5397, min=-1.7270, max=1.6825
 - After clipping (round 3): mu=-0.0199, std=0.5364, min=-1.6392, max=1.5989
 - After clipping (round 4): mu=-0.0199, std=0.5360, min=-1.6290, max=1.5892
 - After clipping (round 5): mu=-0.0199, std=0.5359, min=-1.6278, max=1.5880
 - Random Projection: mu=0.0000, std=0.0240
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9758, min=-30.2314, max=6.4971
 - After clipping (round 1): mu=-0.0231, std=0.5875, min=-2.9713, max=2.8835
 - After clipping (round 2): mu=-0.0216, std=0.5637, min=-1.7856, max=1.7394
 - After clipping (round 3): mu=-0.0214, std=0.5611, min=-1.7126, max=1.6694
 - After clipping (round 4): mu=-0.0214, std=0.5608, min=-1.7048, max=1.6619
 - After clipping (round 5): mu=-0.0214, std=0.5608, min=-1.7039, max=1.6611
 - Random Projection: mu=0.0000, std=0.0251
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9814, min=-30.6296, max=5.5538
 - After clipping (round 1): mu=-0.0218, std=0.5889, min=-2.9869, max=2.9015
 - After clipping (round 2): mu=-0.0206, std=0.5678, min=-1.7884, max=1.7448
 - After clipping (round 3): mu=-0.0205, std=0.5657, min=-1.7241, max=1.6828
 - After clipping (round 4): mu=-0.0205, std=0.5655, min=-1.7178, max=1.6767
 - After clipping (round 5): mu=-0.0205, std=0.5655, min=-1.7171, max=1.6761
 - Random Projection: mu=0.0000, std=0.0253
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9932, min=-28.0205, max=6.0010
 - After clipping (round 1): mu=-0.0160, std=0.5927, min=-3.0215, max=2.9376
 - After clipping (round 2): mu=-0.0140, std=0.5688, min=-1.7942, max=1.7622
 - After clipping (round 3): mu=-0.0139, std=0.5665, min=-1.7205, max=1.6924
 - After clipping (round 4): mu=-0.0139, std=0.5662, min=-1.7132, max=1.6855
 - After clipping (round 5): mu=-0.0139, std=0.5662, min=-1.7125, max=1.6847
 - Random Projection: mu=0.0000, std=0.0253
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9985, min=-31.5356, max=6.1465
 - After clipping (round 1): mu=-0.0046, std=0.5906, min=-3.0286, max=2.9626
 - After clipping (round 2): mu=-0.0027, std=0.5666, min=-1.7765, max=1.7674
 - After clipping (round 3): mu=-0.0026, std=0.5643, min=-1.7026, max=1.6972
 - After clipping (round 4): mu=-0.0026, std=0.5641, min=-1.6956, max=1.6904
 - After clipping (round 5): mu=-0.0026, std=0.5641, min=-1.6949, max=1.6897
 - Random Projection: mu=0.0000, std=0.0252
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9750, min=-30.3699, max=6.1226
 - After clipping (round 1): mu=-0.0036, std=0.5763, min=-2.9566, max=2.8934
 - After clipping (round 2): mu=-0.0022, std=0.5527, min=-1.7327, max=1.7254
 - After clipping (round 3): mu=-0.0021, std=0.5505, min=-1.6604, max=1.6560
 - After clipping (round 4): mu=-0.0021, std=0.5503, min=-1.6537, max=1.6495
 - After clipping (round 5): mu=-0.0021, std=0.5503, min=-1.6530, max=1.6488
 - Random Projection: mu=0.0000, std=0.0246
[Layer 18]
 - Before clipping: mu=-0.0307, std=0.9735, min=-30.4646, max=5.7885
 - After clipping (round 1): mu=-0.0035, std=0.5827, min=-2.9511, max=2.8897
 - After clipping (round 2): mu=-0.0025, std=0.5586, min=-1.7515, max=1.7444
 - After clipping (round 3): mu=-0.0025, std=0.5563, min=-1.6784, max=1.6733
 - After clipping (round 4): mu=-0.0025, std=0.5561, min=-1.6715, max=1.6665
 - After clipping (round 5): mu=-0.0025, std=0.5561, min=-1.6708, max=1.6658
 - Random Projection: mu=0.0000, std=0.0249
[Layer 19]
 - Before clipping: mu=-0.0297, std=0.9615, min=-29.4956, max=5.4402
 - After clipping (round 1): mu=-0.0034, std=0.5759, min=-2.9142, max=2.8548
 - After clipping (round 2): mu=-0.0025, std=0.5513, min=-1.7310, max=1.7242
 - After clipping (round 3): mu=-0.0025, std=0.5490, min=-1.6565, max=1.6514
 - After clipping (round 4): mu=-0.0025, std=0.5487, min=-1.6494, max=1.6444
 - After clipping (round 5): mu=-0.0025, std=0.5487, min=-1.6487, max=1.6437
 - Random Projection: mu=0.0000, std=0.0245
[Layer 20]
 - Before clipping: mu=-0.0287, std=0.9474, min=-28.9164, max=5.2851
 - After clipping (round 1): mu=-0.0038, std=0.5752, min=-2.8708, max=2.8134
 - After clipping (round 2): mu=-0.0031, std=0.5505, min=-1.7292, max=1.7217
 - After clipping (round 3): mu=-0.0031, std=0.5481, min=-1.6546, max=1.6484
 - After clipping (round 4): mu=-0.0031, std=0.5479, min=-1.6474, max=1.6413
 - After clipping (round 5): mu=-0.0031, std=0.5479, min=-1.6467, max=1.6406
 - Random Projection: mu=0.0000, std=0.0245
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9897, min=-31.2398, max=5.2620
 - After clipping (round 1): mu=-0.0074, std=0.5791, min=-3.0024, max=2.9359
 - After clipping (round 2): mu=-0.0069, std=0.5517, min=-1.7449, max=1.7300
 - After clipping (round 3): mu=-0.0068, std=0.5491, min=-1.6620, max=1.6483
 - After clipping (round 4): mu=-0.0068, std=0.5488, min=-1.6540, max=1.6404
 - After clipping (round 5): mu=-0.0068, std=0.5488, min=-1.6532, max=1.6395
 - Random Projection: mu=0.0000, std=0.0245
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0061, min=-32.0938, max=5.2315
 - After clipping (round 1): mu=-0.0152, std=0.5567, min=-3.0597, max=2.9768
 - After clipping (round 2): mu=-0.0146, std=0.5279, min=-1.6853, max=1.6548
 - After clipping (round 3): mu=-0.0146, std=0.5251, min=-1.5982, max=1.5690
 - After clipping (round 4): mu=-0.0146, std=0.5248, min=-1.5898, max=1.5606
 - After clipping (round 5): mu=-0.0146, std=0.5247, min=-1.5889, max=1.5597
 - Random Projection: mu=0.0000, std=0.0235
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0087, min=-32.4013, max=5.2715
 - After clipping (round 1): mu=-0.0053, std=0.5500, min=-3.0573, max=2.9951
 - After clipping (round 2): mu=-0.0046, std=0.5212, min=-1.6552, max=1.6446
 - After clipping (round 3): mu=-0.0047, std=0.5183, min=-1.5682, max=1.5590
 - After clipping (round 4): mu=-0.0047, std=0.5180, min=-1.5596, max=1.5502
 - After clipping (round 5): mu=-0.0047, std=0.5180, min=-1.5586, max=1.5493
 - Random Projection: mu=0.0000, std=0.0232
Random projections initialized.
[# API Calls 50] loss: 1.0598. Current perf: 0.6087. Best perf so far: 0.6087
[# API Calls 100] loss: 1.0185. Current perf: 0.6087. Best perf so far: 0.6087
********* Evaluated on dev set *********
Dev loss: 0.85. Dev perf: 0.6364. Best dev perf: 0.6364
********* Done *********
[# API Calls 150] loss: 1.0026. Current perf: 0.5778. Best perf so far: 0.6087
[# API Calls 200] loss: 0.9747. Current perf: 0.6087. Best perf so far: 0.6087
********* Evaluated on dev set *********
Dev loss: 0.8257. Dev perf: 0.6667. Best dev perf: 0.6667
********* Done *********
[# API Calls 250] loss: 0.9538. Current perf: 0.6087. Best perf so far: 0.6087
[# API Calls 300] loss: 0.9517. Current perf: 0.6087. Best perf so far: 0.6087
********* Evaluated on dev set *********
Dev loss: 0.8105. Dev perf: 0.6364. Best dev perf: 0.6667
********* Done *********
[# API Calls 350] loss: 0.9171. Current perf: 0.5778. Best perf so far: 0.6087
[# API Calls 400] loss: 0.9158. Current perf: 0.6087. Best perf so far: 0.6087
********* Evaluated on dev set *********
Dev loss: 0.7761. Dev perf: 0.6512. Best dev perf: 0.6667
********* Done *********
[# API Calls 450] loss: 0.8926. Current perf: 0.6087. Best perf so far: 0.6087
[# API Calls 500] loss: 0.8766. Current perf: 0.5. Best perf so far: 0.6087
********* Evaluated on dev set *********
Dev loss: 0.7689. Dev perf: 0.5714. Best dev perf: 0.6667
********* Done *********
[# API Calls 550] loss: 0.863. Current perf: 0.5366. Best perf so far: 0.6087
[# API Calls 600] loss: 0.8579. Current perf: 0.5405. Best perf so far: 0.6087
********* Evaluated on dev set *********
Dev loss: 0.7546. Dev perf: 0.5143. Best dev perf: 0.6667
********* Done *********
[# API Calls 650] loss: 0.8259. Current perf: 0.5909. Best perf so far: 0.6154
[# API Calls 700] loss: 0.8077. Current perf: 0.5854. Best perf so far: 0.6364
********* Evaluated on dev set *********
Dev loss: 0.7197. Dev perf: 0.5946. Best dev perf: 0.6667
********* Done *********
[# API Calls 750] loss: 0.7737. Current perf: 0.5882. Best perf so far: 0.6667
[# API Calls 800] loss: 0.7587. Current perf: 0.5714. Best perf so far: 0.7
********* Evaluated on dev set *********
Dev loss: 0.7191. Dev perf: 0.5294. Best dev perf: 0.6667
********* Done *********
[# API Calls 850] loss: 0.7199. Current perf: 0.5. Best perf so far: 0.7
[# API Calls 900] loss: 0.7084. Current perf: 0.5. Best perf so far: 0.7222
********* Evaluated on dev set *********
Dev loss: 0.7274. Dev perf: 0.4444. Best dev perf: 0.6667
********* Done *********
[# API Calls 950] loss: 0.6767. Current perf: 0.5. Best perf so far: 0.7429
[# API Calls 1000] loss: 0.673. Current perf: 0.7273. Best perf so far: 0.7429
********* Evaluated on dev set *********
Dev loss: 0.7234. Dev perf: 0.5143. Best dev perf: 0.6667
********* Done *********
[# API Calls 1050] loss: 0.6665. Current perf: 0.7222. Best perf so far: 0.7429
[# API Calls 1100] loss: 0.6572. Current perf: 0.6667. Best perf so far: 0.7879
********* Evaluated on dev set *********
Dev loss: 0.7347. Dev perf: 0.4516. Best dev perf: 0.6667
********* Done *********
[# API Calls 1150] loss: 0.6628. Current perf: 0.6667. Best perf so far: 0.7895
[# API Calls 1200] loss: 0.6362. Current perf: 0.7778. Best perf so far: 0.7895
********* Evaluated on dev set *********
Dev loss: 0.7027. Dev perf: 0.5882. Best dev perf: 0.6667
********* Done *********
[# API Calls 1250] loss: 0.6471. Current perf: 0.7368. Best perf so far: 0.7895
[# API Calls 1300] loss: 0.6463. Current perf: 0.7568. Best perf so far: 0.7895
********* Evaluated on dev set *********
Dev loss: 0.6895. Dev perf: 0.6286. Best dev perf: 0.6667
********* Done *********
[# API Calls 1350] loss: 0.6265. Current perf: 0.6471. Best perf so far: 0.7895
[# API Calls 1400] loss: 0.6557. Current perf: 0.6829. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.6825. Dev perf: 0.5641. Best dev perf: 0.6667
********* Done *********
[# API Calls 1450] loss: 0.5992. Current perf: 0.7333. Best perf so far: 0.8125
[# API Calls 1500] loss: 0.619. Current perf: 0.7059. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.6567. Dev perf: 0.5714. Best dev perf: 0.6667
********* Done *********
[# API Calls 1550] loss: 0.6152. Current perf: 0.7143. Best perf so far: 0.8125
[# API Calls 1600] loss: 0.6119. Current perf: 0.7273. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.7145. Dev perf: 0.5882. Best dev perf: 0.6667
********* Done *********
[# API Calls 1650] loss: 0.5798. Current perf: 0.7895. Best perf so far: 0.8333
[# API Calls 1700] loss: 0.5696. Current perf: 0.8333. Best perf so far: 0.8571
********* Evaluated on dev set *********
Dev loss: 0.6728. Dev perf: 0.6486. Best dev perf: 0.6667
********* Done *********
[# API Calls 1750] loss: 0.5305. Current perf: 0.7879. Best perf so far: 0.8571
[# API Calls 1800] loss: 0.5233. Current perf: 0.8235. Best perf so far: 0.8571
********* Evaluated on dev set *********
Dev loss: 0.6805. Dev perf: 0.6667. Best dev perf: 0.6667
********* Done *********
[# API Calls 1850] loss: 0.5147. Current perf: 0.7586. Best perf so far: 0.8824
[# API Calls 1900] loss: 0.5097. Current perf: 0.8333. Best perf so far: 0.8824
********* Evaluated on dev set *********
Dev loss: 0.7135. Dev perf: 0.6667. Best dev perf: 0.6667
********* Done *********
[# API Calls 1950] loss: 0.4779. Current perf: 0.875. Best perf so far: 0.8824
[# API Calls 2000] loss: 0.4381. Current perf: 0.875. Best perf so far: 0.9091
********* Evaluated on dev set *********
Dev loss: 0.7533. Dev perf: 0.5625. Best dev perf: 0.6667
********* Done *********
[# API Calls 2050] loss: 0.4114. Current perf: 0.8387. Best perf so far: 0.9091
[# API Calls 2100] loss: 0.4443. Current perf: 0.7879. Best perf so far: 0.9091
********* Evaluated on dev set *********
Dev loss: 0.6921. Dev perf: 0.625. Best dev perf: 0.6667
********* Done *********
[# API Calls 2150] loss: 0.3773. Current perf: 0.8125. Best perf so far: 0.9091
[# API Calls 2200] loss: 0.374. Current perf: 0.8824. Best perf so far: 0.9091
********* Evaluated on dev set *********
Dev loss: 0.8557. Dev perf: 0.4667. Best dev perf: 0.6667
********* Done *********
[# API Calls 2250] loss: 0.3769. Current perf: 0.9412. Best perf so far: 0.9412
[# API Calls 2300] loss: 0.3933. Current perf: 0.9091. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.7841. Dev perf: 0.4848. Best dev perf: 0.6667
********* Done *********
[# API Calls 2350] loss: 0.3523. Current perf: 0.8889. Best perf so far: 0.9412
[# API Calls 2400] loss: 0.3127. Current perf: 0.9091. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.8254. Dev perf: 0.4516. Best dev perf: 0.6667
********* Done *********
[# API Calls 2450] loss: 0.3448. Current perf: 0.8667. Best perf so far: 0.9697
[# API Calls 2500] loss: 0.3387. Current perf: 0.8824. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8502. Dev perf: 0.6286. Best dev perf: 0.6667
********* Done *********
[# API Calls 2550] loss: 0.4058. Current perf: 0.7407. Best perf so far: 0.9697
[# API Calls 2600] loss: 0.3264. Current perf: 0.8966. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8422. Dev perf: 0.5185. Best dev perf: 0.6667
********* Done *********
[# API Calls 2650] loss: 0.3727. Current perf: 0.8889. Best perf so far: 0.9697
[# API Calls 2700] loss: 0.3089. Current perf: 0.9091. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8082. Dev perf: 0.5333. Best dev perf: 0.6667
********* Done *********
[# API Calls 2750] loss: 0.3369. Current perf: 0.9333. Best perf so far: 0.9697
[# API Calls 2800] loss: 0.2976. Current perf: 0.9091. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8516. Dev perf: 0.4444. Best dev perf: 0.6667
********* Done *********
[# API Calls 2850] loss: 0.2799. Current perf: 0.9032. Best perf so far: 0.9697
[# API Calls 2900] loss: 0.2437. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8617. Dev perf: 0.4615. Best dev perf: 0.6667
********* Done *********
[# API Calls 2950] loss: 0.3191. Current perf: 0.9333. Best perf so far: 1.0
[# API Calls 3000] loss: 0.3817. Current perf: 0.8421. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0018. Dev perf: 0.6111. Best dev perf: 0.6667
********* Done *********
[# API Calls 3050] loss: 0.3452. Current perf: 0.8148. Best perf so far: 1.0
[# API Calls 3100] loss: 0.2733. Current perf: 0.9333. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9315. Dev perf: 0.3846. Best dev perf: 0.6667
********* Done *********
[# API Calls 3150] loss: 0.256. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 3200] loss: 0.2819. Current perf: 0.9375. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8374. Dev perf: 0.5. Best dev perf: 0.6667
********* Done *********
[# API Calls 3250] loss: 0.2742. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 3300] loss: 0.3058. Current perf: 0.8148. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8976. Dev perf: 0.4444. Best dev perf: 0.6667
********* Done *********
[# API Calls 3350] loss: 0.2058. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3400] loss: 0.2251. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9165. Dev perf: 0.3704. Best dev perf: 0.6667
********* Done *********
[# API Calls 3450] loss: 0.2114. Current perf: 0.9143. Best perf so far: 1.0
[# API Calls 3500] loss: 0.1799. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9236. Dev perf: 0.4667. Best dev perf: 0.6667
********* Done *********
[# API Calls 3550] loss: 0.2212. Current perf: 0.9412. Best perf so far: 1.0
[# API Calls 3600] loss: 0.1704. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9604. Dev perf: 0.4828. Best dev perf: 0.6667
********* Done *********
[# API Calls 3650] loss: 0.158. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3700] loss: 0.1536. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0273. Dev perf: 0.4516. Best dev perf: 0.6667
********* Done *********
[# API Calls 3750] loss: 0.1537. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.1316. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1763. Dev perf: 0.5. Best dev perf: 0.6667
********* Done *********
[# API Calls 3850] loss: 0.1248. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 3900] loss: 0.1862. Current perf: 0.9333. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2963. Dev perf: 0.4667. Best dev perf: 0.6667
********* Done *********
[# API Calls 3950] loss: 0.1585. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 4000] loss: 0.1311. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3196. Dev perf: 0.3704. Best dev perf: 0.6667
********* Done *********
[# API Calls 4050] loss: 0.1262. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4100] loss: 0.1208. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2513. Dev perf: 0.4444. Best dev perf: 0.6667
********* Done *********
[# API Calls 4150] loss: 0.1211. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.1304. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2119. Dev perf: 0.5. Best dev perf: 0.6667
********* Done *********
[# API Calls 4250] loss: 0.0794. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0708. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3824. Dev perf: 0.4667. Best dev perf: 0.6667
********* Done *********
[# API Calls 4350] loss: 0.0985. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 4400] loss: 0.1255. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2996. Dev perf: 0.4. Best dev perf: 0.6667
********* Done *********
[# API Calls 4450] loss: 0.1724. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 4500] loss: 0.1476. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1837. Dev perf: 0.3846. Best dev perf: 0.6667
********* Done *********
[# API Calls 4550] loss: 0.1051. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.0945. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3484. Dev perf: 0.5333. Best dev perf: 0.6667
********* Done *********
[# API Calls 4650] loss: 0.0963. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.1095. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1623. Dev perf: 0.5806. Best dev perf: 0.6667
********* Done *********
[# API Calls 4750] loss: 0.132. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.0927. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2767. Dev perf: 0.5333. Best dev perf: 0.6667
********* Done *********
[# API Calls 4850] loss: 0.1087. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.1807. Current perf: 0.9333. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1999. Dev perf: 0.5714. Best dev perf: 0.6667
********* Done *********
[# API Calls 4950] loss: 0.0857. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.0797. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5299. Dev perf: 0.5. Best dev perf: 0.6667
********* Done *********
[# API Calls 5050] loss: 0.072. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.164. Current perf: 0.9333. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3334. Dev perf: 0.4. Best dev perf: 0.6667
********* Done *********
[# API Calls 5150] loss: 0.0967. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0811. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5466. Dev perf: 0.5294. Best dev perf: 0.6667
********* Done *********
[# API Calls 5250] loss: 0.0518. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0471. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.7367. Dev perf: 0.4667. Best dev perf: 0.6667
********* Done *********
[# API Calls 5350] loss: 0.1231. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 5400] loss: 0.1301. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.8102. Dev perf: 0.5882. Best dev perf: 0.6667
********* Done *********
[# API Calls 5450] loss: 0.0856. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0709. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.9288. Dev perf: 0.4. Best dev perf: 0.6667
********* Done *********
[# API Calls 5550] loss: 0.0495. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0501. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6573. Dev perf: 0.4444. Best dev perf: 0.6667
********* Done *********
[# API Calls 5650] loss: 0.0391. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0549. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5642. Dev perf: 0.4444. Best dev perf: 0.6667
********* Done *********
[# API Calls 5750] loss: 0.0325. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0426. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.4549. Dev perf: 0.6452. Best dev perf: 0.6667
********* Done *********
[# API Calls 5850] loss: 0.2159. Current perf: 0.9143. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0572. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5859. Dev perf: 0.4444. Best dev perf: 0.6667
********* Done *********
[# API Calls 5950] loss: 0.0412. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0598. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6098. Dev perf: 0.5185. Best dev perf: 0.6667
********* Done *********
[# API Calls 6050] loss: 0.0573. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0765. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.9997. Dev perf: 0.48. Best dev perf: 0.6667
********* Done *********
[# API Calls 6150] loss: 0.0397. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0316. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.8974. Dev perf: 0.5. Best dev perf: 0.6667
********* Done *********
[# API Calls 6250] loss: 0.0316. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.2815. Current perf: 0.8966. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.7007. Dev perf: 0.4167. Best dev perf: 0.6667
********* Done *********
[# API Calls 6350] loss: 0.14. Current perf: 0.9412. Best perf so far: 1.0
[# API Calls 6400] loss: 0.3057. Current perf: 0.9091. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6413. Dev perf: 0.6667. Best dev perf: 0.6667
********* Done *********
[# API Calls 6450] loss: 0.0472. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0663. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.4889. Dev perf: 0.4828. Best dev perf: 0.6667
********* Done *********
[# API Calls 6550] loss: 0.0455. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.048. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.507. Dev perf: 0.5625. Best dev perf: 0.6667
********* Done *********
[# API Calls 6650] loss: 0.0408. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0415. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.4024. Dev perf: 0.5333. Best dev perf: 0.6667
********* Done *********
[# API Calls 6750] loss: 0.0519. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0539. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5903. Dev perf: 0.3704. Best dev perf: 0.6667
********* Done *********
[# API Calls 6850] loss: 0.0413. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0784. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3674. Dev perf: 0.5. Best dev perf: 0.6667
********* Done *********
[# API Calls 6950] loss: 0.075. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0415. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.433. Dev perf: 0.4286. Best dev perf: 0.6667
********* Done *********
[# API Calls 7050] loss: 0.0281. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0327. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6688. Dev perf: 0.4444. Best dev perf: 0.6667
********* Done *********
[# API Calls 7150] loss: 0.0296. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0264. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.5543. Dev perf: 0.5. Best dev perf: 0.6667
********* Done *********
[# API Calls 7250] loss: 0.0376. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0275. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3862. Dev perf: 0.5. Best dev perf: 0.6667
********* Done *********
[# API Calls 7350] loss: 0.0275. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.2385. Current perf: 0.8649. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.8644. Dev perf: 0.6667. Best dev perf: 0.6667
********* Done *********
[# API Calls 7450] loss: 0.0369. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.046. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3664. Dev perf: 0.6207. Best dev perf: 0.6667
********* Done *********
[# API Calls 7550] loss: 0.031. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.025. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.4178. Dev perf: 0.6897. Best dev perf: 0.6897
********* Done *********
[# API Calls 7650] loss: 0.0177. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 35.451422961552936 (mins)
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset mrpc (/home/qingyang/.cache/huggingface/datasets/mrpc/default/0.0.0/8e9daa09bd61aa81cad8b8a10f40891bae9e05ef809a511222348af3d59a32d0)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 4855.75ex/s]
{'text1': "The review outlines the tariffs ' impact on domestic steel industry and steel consumers halfway through the three-year program .", 'text2': 'The ITC midpoint review of the tariffs outlines their impact so far on the domestic steel industry and steel consumers .', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . The review outlines the tariffs ' impact on domestic steel industry and steel consumers halfway through the three-year program . ? <mask> , The ITC midpoint review of the tariffs outlines their impact so far on the domestic steel industry and steel consumers .", 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 25.36ba/s]
Using custom data configuration default
Reusing dataset mrpc (/home/qingyang/.cache/huggingface/datasets/mrpc/default/0.0.0/8e9daa09bd61aa81cad8b8a10f40891bae9e05ef809a511222348af3d59a32d0)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5203.04ex/s]
{'text1': 'He had also said an interest rate cut by the European Central Bank , which meets Thursday , would be welcome .', 'text2': "He had also said on the eve of Monday 's talks that an interest rate cut by the European Central Bank , which meets on Thursday , would be welcome .", 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . He had also said an interest rate cut by the European Central Bank , which meets Thursday , would be welcome . ? <mask> , He had also said on the eve of Monday 's talks that an interest rate cut by the European Central Bank , which meets on Thursday , would be welcome .", 'target_text': 'Yes'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 30.91ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 75       | 9904   |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 75       | 9904   |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0083, std=0.8465, min=-16.1506, max=17.5599
 - After clipping (round 1): mu=-0.0067, std=0.7026, min=-2.5479, max=2.5313
 - After clipping (round 2): mu=-0.0060, std=0.6950, min=-2.1146, max=2.1012
 - After clipping (round 3): mu=-0.0060, std=0.6944, min=-2.0909, max=2.0789
 - After clipping (round 4): mu=-0.0060, std=0.6944, min=-2.0893, max=2.0774
 - After clipping (round 5): mu=-0.0060, std=0.6944, min=-2.0892, max=2.0773
 - Random Projection: mu=0.0000, std=0.0311
[Layer 2]
 - Before clipping: mu=-0.0295, std=0.8759, min=-20.4233, max=15.9144
 - After clipping (round 1): mu=-0.0195, std=0.6744, min=-2.6571, max=2.5980
 - After clipping (round 2): mu=-0.0189, std=0.6623, min=-2.0428, max=2.0037
 - After clipping (round 3): mu=-0.0188, std=0.6614, min=-2.0058, max=1.9681
 - After clipping (round 4): mu=-0.0188, std=0.6613, min=-2.0029, max=1.9653
 - After clipping (round 5): mu=-0.0188, std=0.6613, min=-2.0027, max=1.9651
 - Random Projection: mu=0.0000, std=0.0296
[Layer 3]
 - Before clipping: mu=-0.0319, std=0.9132, min=-21.0877, max=14.4692
 - After clipping (round 1): mu=-0.0189, std=0.6697, min=-2.7716, max=2.7077
 - After clipping (round 2): mu=-0.0184, std=0.6554, min=-2.0280, max=1.9903
 - After clipping (round 3): mu=-0.0184, std=0.6542, min=-1.9845, max=1.9477
 - After clipping (round 4): mu=-0.0184, std=0.6542, min=-1.9811, max=1.9444
 - After clipping (round 5): mu=-0.0184, std=0.6541, min=-1.9809, max=1.9441
 - Random Projection: mu=0.0000, std=0.0293
[Layer 4]
 - Before clipping: mu=-0.0354, std=0.9222, min=-25.3888, max=11.4327
 - After clipping (round 1): mu=-0.0203, std=0.6872, min=-2.8020, max=2.7312
 - After clipping (round 2): mu=-0.0198, std=0.6744, min=-2.0820, max=2.0413
 - After clipping (round 3): mu=-0.0198, std=0.6734, min=-2.0430, max=2.0033
 - After clipping (round 4): mu=-0.0198, std=0.6733, min=-2.0400, max=2.0005
 - After clipping (round 5): mu=-0.0198, std=0.6733, min=-2.0398, max=2.0002
 - Random Projection: mu=0.0000, std=0.0301
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9429, min=-26.9119, max=8.6757
 - After clipping (round 1): mu=-0.0214, std=0.6788, min=-2.8678, max=2.7896
 - After clipping (round 2): mu=-0.0206, std=0.6643, min=-2.0579, max=2.0150
 - After clipping (round 3): mu=-0.0205, std=0.6631, min=-2.0133, max=1.9722
 - After clipping (round 4): mu=-0.0205, std=0.6630, min=-2.0099, max=1.9688
 - After clipping (round 5): mu=-0.0205, std=0.6630, min=-2.0096, max=1.9686
 - Random Projection: mu=0.0000, std=0.0297
[Layer 6]
 - Before clipping: mu=-0.0452, std=0.9604, min=-28.5296, max=7.3533
 - After clipping (round 1): mu=-0.0260, std=0.6816, min=-2.9263, max=2.8359
 - After clipping (round 2): mu=-0.0250, std=0.6647, min=-2.0708, max=2.0188
 - After clipping (round 3): mu=-0.0249, std=0.6633, min=-2.0191, max=1.9692
 - After clipping (round 4): mu=-0.0249, std=0.6631, min=-2.0147, max=1.9649
 - After clipping (round 5): mu=-0.0249, std=0.6631, min=-2.0143, max=1.9645
 - Random Projection: mu=0.0000, std=0.0297
[Layer 7]
 - Before clipping: mu=-0.0409, std=0.9759, min=-29.8289, max=6.9620
 - After clipping (round 1): mu=-0.0199, std=0.6537, min=-2.9686, max=2.8869
 - After clipping (round 2): mu=-0.0187, std=0.6322, min=-1.9811, max=1.9413
 - After clipping (round 3): mu=-0.0185, std=0.6301, min=-1.9153, max=1.8780
 - After clipping (round 4): mu=-0.0185, std=0.6299, min=-1.9089, max=1.8718
 - After clipping (round 5): mu=-0.0185, std=0.6299, min=-1.9083, max=1.8712
 - Random Projection: mu=0.0000, std=0.0282
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9933, min=-31.1999, max=6.8180
 - After clipping (round 1): mu=-0.0216, std=0.6260, min=-3.0232, max=2.9368
 - After clipping (round 2): mu=-0.0197, std=0.5997, min=-1.8994, max=1.8563
 - After clipping (round 3): mu=-0.0195, std=0.5969, min=-1.8188, max=1.7794
 - After clipping (round 4): mu=-0.0194, std=0.5966, min=-1.8101, max=1.7712
 - After clipping (round 5): mu=-0.0194, std=0.5965, min=-1.8091, max=1.7702
 - Random Projection: mu=0.0000, std=0.0267
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9876, min=-30.8971, max=6.7226
 - After clipping (round 1): mu=-0.0213, std=0.5966, min=-3.0057, max=2.9198
 - After clipping (round 2): mu=-0.0193, std=0.5677, min=-1.8111, max=1.7685
 - After clipping (round 3): mu=-0.0191, std=0.5644, min=-1.7223, max=1.6837
 - After clipping (round 4): mu=-0.0190, std=0.5640, min=-1.7122, max=1.6741
 - After clipping (round 5): mu=-0.0190, std=0.5639, min=-1.7110, max=1.6729
 - Random Projection: mu=0.0000, std=0.0252
[Layer 10]
 - Before clipping: mu=-0.0366, std=0.9934, min=-31.0418, max=7.3187
 - After clipping (round 1): mu=-0.0145, std=0.5744, min=-3.0169, max=2.9438
 - After clipping (round 2): mu=-0.0125, std=0.5437, min=-1.7375, max=1.7086
 - After clipping (round 3): mu=-0.0122, std=0.5402, min=-1.6437, max=1.6187
 - After clipping (round 4): mu=-0.0122, std=0.5398, min=-1.6329, max=1.6085
 - After clipping (round 5): mu=-0.0122, std=0.5398, min=-1.6316, max=1.6072
 - Random Projection: mu=0.0000, std=0.0241
[Layer 11]
 - Before clipping: mu=-0.0340, std=0.9535, min=-29.3087, max=7.1214
 - After clipping (round 1): mu=-0.0128, std=0.5629, min=-2.8944, max=2.8265
 - After clipping (round 2): mu=-0.0109, std=0.5349, min=-1.7015, max=1.6759
 - After clipping (round 3): mu=-0.0107, std=0.5317, min=-1.6156, max=1.5938
 - After clipping (round 4): mu=-0.0106, std=0.5314, min=-1.6059, max=1.5846
 - After clipping (round 5): mu=-0.0106, std=0.5313, min=-1.6047, max=1.5834
 - Random Projection: mu=0.0000, std=0.0238
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9696, min=-29.9721, max=6.9152
 - After clipping (round 1): mu=-0.0223, std=0.5728, min=-2.9525, max=2.8652
 - After clipping (round 2): mu=-0.0203, std=0.5453, min=-1.7407, max=1.6961
 - After clipping (round 3): mu=-0.0200, std=0.5422, min=-1.6562, max=1.6157
 - After clipping (round 4): mu=-0.0200, std=0.5418, min=-1.6467, max=1.6066
 - After clipping (round 5): mu=-0.0200, std=0.5418, min=-1.6455, max=1.6055
 - Random Projection: mu=0.0000, std=0.0242
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9757, min=-30.3044, max=6.7800
 - After clipping (round 1): mu=-0.0232, std=0.5934, min=-2.9712, max=2.8833
 - After clipping (round 2): mu=-0.0217, std=0.5702, min=-1.8032, max=1.7569
 - After clipping (round 3): mu=-0.0215, std=0.5678, min=-1.7322, max=1.6888
 - After clipping (round 4): mu=-0.0215, std=0.5675, min=-1.7248, max=1.6817
 - After clipping (round 5): mu=-0.0215, std=0.5675, min=-1.7240, max=1.6809
 - Random Projection: mu=0.0000, std=0.0254
[Layer 14]
 - Before clipping: mu=-0.0428, std=0.9813, min=-30.6961, max=5.7334
 - After clipping (round 1): mu=-0.0218, std=0.5959, min=-2.9867, max=2.9012
 - After clipping (round 2): mu=-0.0207, std=0.5754, min=-1.8096, max=1.7659
 - After clipping (round 3): mu=-0.0206, std=0.5734, min=-1.7470, max=1.7055
 - After clipping (round 4): mu=-0.0206, std=0.5732, min=-1.7409, max=1.6997
 - After clipping (round 5): mu=-0.0206, std=0.5732, min=-1.7403, max=1.6991
 - Random Projection: mu=0.0000, std=0.0256
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9928, min=-28.0145, max=6.1559
 - After clipping (round 1): mu=-0.0161, std=0.6008, min=-3.0203, max=2.9363
 - After clipping (round 2): mu=-0.0141, std=0.5774, min=-1.8187, max=1.7864
 - After clipping (round 3): mu=-0.0140, std=0.5752, min=-1.7465, max=1.7182
 - After clipping (round 4): mu=-0.0140, std=0.5749, min=-1.7395, max=1.7116
 - After clipping (round 5): mu=-0.0140, std=0.5749, min=-1.7388, max=1.7109
 - Random Projection: mu=0.0000, std=0.0257
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9982, min=-31.5326, max=6.2308
 - After clipping (round 1): mu=-0.0048, std=0.5990, min=-3.0277, max=2.9617
 - After clipping (round 2): mu=-0.0028, std=0.5757, min=-1.8019, max=1.7923
 - After clipping (round 3): mu=-0.0027, std=0.5735, min=-1.7299, max=1.7243
 - After clipping (round 4): mu=-0.0027, std=0.5733, min=-1.7233, max=1.7179
 - After clipping (round 5): mu=-0.0027, std=0.5733, min=-1.7226, max=1.7173
 - Random Projection: mu=0.0000, std=0.0256
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9752, min=-30.3702, max=6.1746
 - After clipping (round 1): mu=-0.0038, std=0.5843, min=-2.9570, max=2.8939
 - After clipping (round 2): mu=-0.0022, std=0.5614, min=-1.7568, max=1.7491
 - After clipping (round 3): mu=-0.0021, std=0.5593, min=-1.6864, max=1.6820
 - After clipping (round 4): mu=-0.0021, std=0.5591, min=-1.6799, max=1.6758
 - After clipping (round 5): mu=-0.0021, std=0.5591, min=-1.6793, max=1.6751
 - Random Projection: mu=0.0000, std=0.0250
[Layer 18]
 - Before clipping: mu=-0.0307, std=0.9737, min=-30.4648, max=5.8044
 - After clipping (round 1): mu=-0.0037, std=0.5916, min=-2.9520, max=2.8905
 - After clipping (round 2): mu=-0.0025, std=0.5683, min=-1.7786, max=1.7711
 - After clipping (round 3): mu=-0.0024, std=0.5661, min=-1.7073, max=1.7023
 - After clipping (round 4): mu=-0.0024, std=0.5659, min=-1.7007, max=1.6958
 - After clipping (round 5): mu=-0.0024, std=0.5659, min=-1.7001, max=1.6952
 - Random Projection: mu=0.0000, std=0.0253
[Layer 19]
 - Before clipping: mu=-0.0297, std=0.9624, min=-29.4937, max=5.6059
 - After clipping (round 1): mu=-0.0036, std=0.5866, min=-2.9169, max=2.8575
 - After clipping (round 2): mu=-0.0025, std=0.5628, min=-1.7635, max=1.7562
 - After clipping (round 3): mu=-0.0024, std=0.5606, min=-1.6909, max=1.6859
 - After clipping (round 4): mu=-0.0024, std=0.5603, min=-1.6841, max=1.6792
 - After clipping (round 5): mu=-0.0024, std=0.5603, min=-1.6834, max=1.6786
 - Random Projection: mu=0.0000, std=0.0251
[Layer 20]
 - Before clipping: mu=-0.0288, std=0.9485, min=-28.9156, max=5.3138
 - After clipping (round 1): mu=-0.0040, std=0.5858, min=-2.8742, max=2.8167
 - After clipping (round 2): mu=-0.0030, std=0.5618, min=-1.7613, max=1.7534
 - After clipping (round 3): mu=-0.0030, std=0.5596, min=-1.6885, max=1.6825
 - After clipping (round 4): mu=-0.0030, std=0.5593, min=-1.6816, max=1.6757
 - After clipping (round 5): mu=-0.0030, std=0.5593, min=-1.6809, max=1.6750
 - Random Projection: mu=0.0000, std=0.0250
[Layer 21]
 - Before clipping: mu=-0.0333, std=0.9899, min=-31.2398, max=5.2979
 - After clipping (round 1): mu=-0.0076, std=0.5895, min=-3.0030, max=2.9365
 - After clipping (round 2): mu=-0.0068, std=0.5630, min=-1.7760, max=1.7607
 - After clipping (round 3): mu=-0.0067, std=0.5604, min=-1.6957, max=1.6822
 - After clipping (round 4): mu=-0.0067, std=0.5602, min=-1.6881, max=1.6746
 - After clipping (round 5): mu=-0.0067, std=0.5602, min=-1.6873, max=1.6738
 - Random Projection: mu=0.0000, std=0.0251
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0059, min=-32.0947, max=5.2966
 - After clipping (round 1): mu=-0.0155, std=0.5683, min=-3.0592, max=2.9763
 - After clipping (round 2): mu=-0.0146, std=0.5406, min=-1.7204, max=1.6895
 - After clipping (round 3): mu=-0.0145, std=0.5380, min=-1.6364, max=1.6073
 - After clipping (round 4): mu=-0.0145, std=0.5377, min=-1.6285, max=1.5994
 - After clipping (round 5): mu=-0.0145, std=0.5377, min=-1.6277, max=1.5986
 - Random Projection: mu=0.0000, std=0.0240
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0083, min=-32.3991, max=5.5382
 - After clipping (round 1): mu=-0.0056, std=0.5667, min=-3.0560, max=2.9938
 - After clipping (round 2): mu=-0.0047, std=0.5394, min=-1.7058, max=1.6946
 - After clipping (round 3): mu=-0.0047, std=0.5367, min=-1.6229, max=1.6135
 - After clipping (round 4): mu=-0.0047, std=0.5364, min=-1.6148, max=1.6054
 - After clipping (round 5): mu=-0.0047, std=0.5364, min=-1.6139, max=1.6045
 - Random Projection: mu=0.0000, std=0.0240
Random projections initialized.
[# API Calls 50] loss: 0.8282. Current perf: 0.6809. Best perf so far: 0.6957
[# API Calls 100] loss: 0.8069. Current perf: 0.6809. Best perf so far: 0.6957
********* Evaluated on dev set *********
Dev loss: 0.759. Dev perf: 0.6977. Best dev perf: 0.6977
********* Done *********
[# API Calls 150] loss: 0.7954. Current perf: 0.6809. Best perf so far: 0.6957
[# API Calls 200] loss: 0.7889. Current perf: 0.6809. Best perf so far: 0.7111
********* Evaluated on dev set *********
Dev loss: 0.7509. Dev perf: 0.6829. Best dev perf: 0.6977
********* Done *********
[# API Calls 250] loss: 0.773. Current perf: 0.7111. Best perf so far: 0.7273
[# API Calls 300] loss: 0.7652. Current perf: 0.6818. Best perf so far: 0.7273
********* Evaluated on dev set *********
Dev loss: 0.7322. Dev perf: 0.7317. Best dev perf: 0.7317
********* Done *********
[# API Calls 350] loss: 0.7471. Current perf: 0.6829. Best perf so far: 0.7273
[# API Calls 400] loss: 0.7388. Current perf: 0.6829. Best perf so far: 0.7273
********* Evaluated on dev set *********
Dev loss: 0.7198. Dev perf: 0.6842. Best dev perf: 0.7317
********* Done *********
[# API Calls 450] loss: 0.7272. Current perf: 0.6829. Best perf so far: 0.7273
[# API Calls 500] loss: 0.7308. Current perf: 0.6829. Best perf so far: 0.7273
********* Evaluated on dev set *********
Dev loss: 0.7146. Dev perf: 0.7027. Best dev perf: 0.7317
********* Done *********
[# API Calls 550] loss: 0.7279. Current perf: 0.6829. Best perf so far: 0.7273
[# API Calls 600] loss: 0.7006. Current perf: 0.6829. Best perf so far: 0.7273
********* Evaluated on dev set *********
Dev loss: 0.7262. Dev perf: 0.5882. Best dev perf: 0.7317
********* Done *********
[# API Calls 650] loss: 0.7002. Current perf: 0.6829. Best perf so far: 0.7368
[# API Calls 700] loss: 0.6895. Current perf: 0.7179. Best perf so far: 0.7368
********* Evaluated on dev set *********
Dev loss: 0.7248. Dev perf: 0.5625. Best dev perf: 0.7317
********* Done *********
[# API Calls 750] loss: 0.6857. Current perf: 0.7143. Best perf so far: 0.7619
[# API Calls 800] loss: 0.6831. Current perf: 0.7442. Best perf so far: 0.7805
********* Evaluated on dev set *********
Dev loss: 0.7269. Dev perf: 0.5455. Best dev perf: 0.7317
********* Done *********
[# API Calls 850] loss: 0.6646. Current perf: 0.7368. Best perf so far: 0.8
[# API Calls 900] loss: 0.6547. Current perf: 0.7568. Best perf so far: 0.8
********* Evaluated on dev set *********
Dev loss: 0.7248. Dev perf: 0.4828. Best dev perf: 0.7317
********* Done *********
[# API Calls 950] loss: 0.6442. Current perf: 0.7429. Best perf so far: 0.8
[# API Calls 1000] loss: 0.6516. Current perf: 0.7222. Best perf so far: 0.8
********* Evaluated on dev set *********
Dev loss: 0.721. Dev perf: 0.4667. Best dev perf: 0.7317
********* Done *********
[# API Calls 1050] loss: 0.6414. Current perf: 0.8205. Best perf so far: 0.8205
[# API Calls 1100] loss: 0.6508. Current perf: 0.7805. Best perf so far: 0.8205
********* Evaluated on dev set *********
Dev loss: 0.7264. Dev perf: 0.5455. Best dev perf: 0.7317
********* Done *********
[# API Calls 1150] loss: 0.6343. Current perf: 0.6857. Best perf so far: 0.8205
[# API Calls 1200] loss: 0.6306. Current perf: 0.8. Best perf so far: 0.8205
********* Evaluated on dev set *********
Dev loss: 0.7108. Dev perf: 0.5. Best dev perf: 0.7317
********* Done *********
[# API Calls 1250] loss: 0.6223. Current perf: 0.7568. Best perf so far: 0.8205
[# API Calls 1300] loss: 0.6245. Current perf: 0.8. Best perf so far: 0.8205
********* Evaluated on dev set *********
Dev loss: 0.7231. Dev perf: 0.5455. Best dev perf: 0.7317
********* Done *********
[# API Calls 1350] loss: 0.6094. Current perf: 0.7895. Best perf so far: 0.8421
[# API Calls 1400] loss: 0.6033. Current perf: 0.7778. Best perf so far: 0.8649
********* Evaluated on dev set *********
Dev loss: 0.7312. Dev perf: 0.4667. Best dev perf: 0.7317
********* Done *********
[# API Calls 1450] loss: 0.5975. Current perf: 0.6207. Best perf so far: 0.8649
[# API Calls 1500] loss: 0.5925. Current perf: 0.75. Best perf so far: 0.8649
********* Evaluated on dev set *********
Dev loss: 0.7266. Dev perf: 0.4444. Best dev perf: 0.7317
********* Done *********
[# API Calls 1550] loss: 0.5896. Current perf: 0.7879. Best perf so far: 0.8649
[# API Calls 1600] loss: 0.5705. Current perf: 0.75. Best perf so far: 0.8649
********* Evaluated on dev set *********
Dev loss: 0.7388. Dev perf: 0.3846. Best dev perf: 0.7317
********* Done *********
[# API Calls 1650] loss: 0.571. Current perf: 0.6875. Best perf so far: 0.8649
[# API Calls 1700] loss: 0.5649. Current perf: 0.8205. Best perf so far: 0.8649
********* Evaluated on dev set *********
Dev loss: 0.7173. Dev perf: 0.5333. Best dev perf: 0.7317
********* Done *********
[# API Calls 1750] loss: 0.5574. Current perf: 0.8. Best perf so far: 0.8649
[# API Calls 1800] loss: 0.5662. Current perf: 0.7778. Best perf so far: 0.8649
********* Evaluated on dev set *********
Dev loss: 0.6809. Dev perf: 0.5806. Best dev perf: 0.7317
********* Done *********
[# API Calls 1850] loss: 0.5509. Current perf: 0.8235. Best perf so far: 0.8649
[# API Calls 1900] loss: 0.5417. Current perf: 0.8333. Best perf so far: 0.8649
********* Evaluated on dev set *********
Dev loss: 0.6883. Dev perf: 0.5333. Best dev perf: 0.7317
********* Done *********
[# API Calls 1950] loss: 0.5344. Current perf: 0.8235. Best perf so far: 0.8649
[# API Calls 2000] loss: 0.5291. Current perf: 0.7879. Best perf so far: 0.8649
********* Evaluated on dev set *********
Dev loss: 0.6898. Dev perf: 0.3846. Best dev perf: 0.7317
********* Done *********
[# API Calls 2050] loss: 0.5321. Current perf: 0.8235. Best perf so far: 0.8649
[# API Calls 2100] loss: 0.5466. Current perf: 0.8889. Best perf so far: 0.8889
********* Evaluated on dev set *********
Dev loss: 0.6963. Dev perf: 0.5161. Best dev perf: 0.7317
********* Done *********
[# API Calls 2150] loss: 0.5232. Current perf: 0.8235. Best perf so far: 0.8889
[# API Calls 2200] loss: 0.5. Current perf: 0.8571. Best perf so far: 0.8889
********* Evaluated on dev set *********
Dev loss: 0.734. Dev perf: 0.3704. Best dev perf: 0.7317
********* Done *********
[# API Calls 2250] loss: 0.5098. Current perf: 0.8485. Best perf so far: 0.9143
[# API Calls 2300] loss: 0.4846. Current perf: 0.8. Best perf so far: 0.9143
********* Evaluated on dev set *********
Dev loss: 0.7051. Dev perf: 0.4444. Best dev perf: 0.7317
********* Done *********
[# API Calls 2350] loss: 0.4862. Current perf: 0.8. Best perf so far: 0.9143
[# API Calls 2400] loss: 0.4693. Current perf: 0.8. Best perf so far: 0.9143
********* Evaluated on dev set *********
Dev loss: 0.7289. Dev perf: 0.3846. Best dev perf: 0.7317
********* Done *********
[# API Calls 2450] loss: 0.4691. Current perf: 0.8235. Best perf so far: 0.9143
[# API Calls 2500] loss: 0.4751. Current perf: 0.8235. Best perf so far: 0.9143
********* Evaluated on dev set *********
Dev loss: 0.6817. Dev perf: 0.6. Best dev perf: 0.7317
********* Done *********
[# API Calls 2550] loss: 0.4733. Current perf: 0.8485. Best perf so far: 0.9143
[# API Calls 2600] loss: 0.4537. Current perf: 0.8824. Best perf so far: 0.9143
********* Evaluated on dev set *********
Dev loss: 0.7287. Dev perf: 0.4667. Best dev perf: 0.7317
********* Done *********
[# API Calls 2650] loss: 0.4588. Current perf: 0.875. Best perf so far: 0.9412
[# API Calls 2700] loss: 0.4495. Current perf: 0.9091. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.7374. Dev perf: 0.4444. Best dev perf: 0.7317
********* Done *********
[# API Calls 2750] loss: 0.4383. Current perf: 0.8824. Best perf so far: 0.9412
[# API Calls 2800] loss: 0.428. Current perf: 0.875. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.7582. Dev perf: 0.3077. Best dev perf: 0.7317
********* Done *********
[# API Calls 2850] loss: 0.4197. Current perf: 0.8. Best perf so far: 0.9412
[# API Calls 2900] loss: 0.4216. Current perf: 0.8. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.8115. Dev perf: 0.2727. Best dev perf: 0.7317
********* Done *********
[# API Calls 2950] loss: 0.4197. Current perf: 0.8387. Best perf so far: 0.9412
[# API Calls 3000] loss: 0.4186. Current perf: 0.8485. Best perf so far: 0.9412
********* Evaluated on dev set *********
Dev loss: 0.7972. Dev perf: 0.24. Best dev perf: 0.7317
********* Done *********
[# API Calls 3050] loss: 0.4109. Current perf: 0.8824. Best perf so far: 0.9412
[# API Calls 3100] loss: 0.3943. Current perf: 0.9091. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7716. Dev perf: 0.2727. Best dev perf: 0.7317
********* Done *********
[# API Calls 3150] loss: 0.3997. Current perf: 0.9375. Best perf so far: 0.9697
[# API Calls 3200] loss: 0.3897. Current perf: 0.9412. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7384. Dev perf: 0.3571. Best dev perf: 0.7317
********* Done *********
[# API Calls 3250] loss: 0.3817. Current perf: 0.9375. Best perf so far: 0.9697
[# API Calls 3300] loss: 0.3613. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7845. Dev perf: 0.2857. Best dev perf: 0.7317
********* Done *********
[# API Calls 3350] loss: 0.364. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 3400] loss: 0.3666. Current perf: 0.9412. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7476. Dev perf: 0.4. Best dev perf: 0.7317
********* Done *********
[# API Calls 3450] loss: 0.3536. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 3500] loss: 0.3637. Current perf: 0.9697. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7342. Dev perf: 0.3846. Best dev perf: 0.7317
********* Done *********
[# API Calls 3550] loss: 0.3551. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 3600] loss: 0.3508. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7675. Dev perf: 0.4167. Best dev perf: 0.7317
********* Done *********
[# API Calls 3650] loss: 0.373. Current perf: 0.8276. Best perf so far: 0.9697
[# API Calls 3700] loss: 0.3477. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7789. Dev perf: 0.2727. Best dev perf: 0.7317
********* Done *********
[# API Calls 3750] loss: 0.3376. Current perf: 0.9375. Best perf so far: 0.9697
[# API Calls 3800] loss: 0.3231. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8575. Dev perf: 0.0952. Best dev perf: 0.7317
********* Done *********
[# API Calls 3850] loss: 0.3209. Current perf: 0.9375. Best perf so far: 0.9697
[# API Calls 3900] loss: 0.2967. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8367. Dev perf: 0.2727. Best dev perf: 0.7317
********* Done *********
[# API Calls 3950] loss: 0.2975. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 4000] loss: 0.2995. Current perf: 0.9697. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8627. Dev perf: 0.32. Best dev perf: 0.7317
********* Done *********
[# API Calls 4050] loss: 0.2891. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 4100] loss: 0.3199. Current perf: 0.9697. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7632. Dev perf: 0.4. Best dev perf: 0.7317
********* Done *********
[# API Calls 4150] loss: 0.2753. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 4200] loss: 0.2772. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8257. Dev perf: 0.1818. Best dev perf: 0.7317
********* Done *********
[# API Calls 4250] loss: 0.2572. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 4300] loss: 0.2486. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8106. Dev perf: 0.2609. Best dev perf: 0.7317
********* Done *********
[# API Calls 4350] loss: 0.2401. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 4400] loss: 0.2372. Current perf: 0.9697. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.7826. Dev perf: 0.2609. Best dev perf: 0.7317
********* Done *********
[# API Calls 4450] loss: 0.2522. Current perf: 0.9375. Best perf so far: 0.9697
[# API Calls 4500] loss: 0.2515. Current perf: 0.9697. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.8522. Dev perf: 0.0952. Best dev perf: 0.7317
********* Done *********
[# API Calls 4550] loss: 0.2675. Current perf: 0.9375. Best perf so far: 0.9697
[# API Calls 4600] loss: 0.2381. Current perf: 0.9375. Best perf so far: 0.9697
********* Evaluated on dev set *********
Dev loss: 0.773. Dev perf: 0.2609. Best dev perf: 0.7317
********* Done *********
[# API Calls 4650] loss: 0.2288. Current perf: 0.9697. Best perf so far: 0.9697
[# API Calls 4700] loss: 0.2166. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7899. Dev perf: 0.4. Best dev perf: 0.7317
********* Done *********
[# API Calls 4750] loss: 0.2061. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 4800] loss: 0.1976. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8594. Dev perf: 0.2609. Best dev perf: 0.7317
********* Done *********
[# API Calls 4850] loss: 0.2122. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 4900] loss: 0.195. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.832. Dev perf: 0.3478. Best dev perf: 0.7317
********* Done *********
[# API Calls 4950] loss: 0.2003. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 5000] loss: 0.2055. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7848. Dev perf: 0.48. Best dev perf: 0.7317
********* Done *********
[# API Calls 5050] loss: 0.202. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 5100] loss: 0.2636. Current perf: 0.9412. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7476. Dev perf: 0.5806. Best dev perf: 0.7317
********* Done *********
[# API Calls 5150] loss: 0.2157. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 5200] loss: 0.2093. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7751. Dev perf: 0.4828. Best dev perf: 0.7317
********* Done *********
[# API Calls 5250] loss: 0.1857. Current perf: 0.9697. Best perf so far: 1.0
[# API Calls 5300] loss: 0.2006. Current perf: 0.9697. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8798. Dev perf: 0.4615. Best dev perf: 0.7317
********* Done *********
[# API Calls 5350] loss: 0.1951. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.177. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8146. Dev perf: 0.5385. Best dev perf: 0.7317
********* Done *********
[# API Calls 5450] loss: 0.1678. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.2219. Current perf: 0.9333. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9582. Dev perf: 0.4286. Best dev perf: 0.7317
********* Done *********
[# API Calls 5550] loss: 0.1607. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.1476. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9938. Dev perf: 0.4348. Best dev perf: 0.7317
********* Done *********
[# API Calls 5650] loss: 0.1392. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.1309. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9781. Dev perf: 0.4828. Best dev perf: 0.7317
********* Done *********
[# API Calls 5750] loss: 0.1264. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.1283. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1989. Dev perf: 0.3846. Best dev perf: 0.7317
********* Done *********
[# API Calls 5850] loss: 0.1394. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.1446. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1401. Dev perf: 0.4. Best dev perf: 0.7317
********* Done *********
[# API Calls 5950] loss: 0.1411. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.1469. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8019. Dev perf: 0.56. Best dev perf: 0.7317
********* Done *********
[# API Calls 6050] loss: 0.1472. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.1378. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0266. Dev perf: 0.3704. Best dev perf: 0.7317
********* Done *********
[# API Calls 6150] loss: 0.1219. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.1196. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9404. Dev perf: 0.5806. Best dev perf: 0.7317
********* Done *********
[# API Calls 6250] loss: 0.1314. Current perf: 0.9677. Best perf so far: 1.0
[# API Calls 6300] loss: 0.1121. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9765. Dev perf: 0.5333. Best dev perf: 0.7317
********* Done *********
[# API Calls 6350] loss: 0.133. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.114. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0921. Dev perf: 0.4667. Best dev perf: 0.7317
********* Done *********
[# API Calls 6450] loss: 0.1417. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.1411. Current perf: 0.9677. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8753. Dev perf: 0.4828. Best dev perf: 0.7317
********* Done *********
[# API Calls 6550] loss: 0.1255. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.1121. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0908. Dev perf: 0.4828. Best dev perf: 0.7317
********* Done *********
[# API Calls 6650] loss: 0.1061. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0987. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9971. Dev perf: 0.4615. Best dev perf: 0.7317
********* Done *********
[# API Calls 6750] loss: 0.0935. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0919. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1384. Dev perf: 0.4444. Best dev perf: 0.7317
********* Done *********
[# API Calls 6850] loss: 0.0884. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.1045. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7875. Dev perf: 0.6452. Best dev perf: 0.7317
********* Done *********
[# API Calls 6950] loss: 0.0935. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0976. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9339. Dev perf: 0.5714. Best dev perf: 0.7317
********* Done *********
[# API Calls 7050] loss: 0.0973. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0913. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9247. Dev perf: 0.5517. Best dev perf: 0.7317
********* Done *********
[# API Calls 7150] loss: 0.0852. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0829. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.0077. Dev perf: 0.48. Best dev perf: 0.7317
********* Done *********
[# API Calls 7250] loss: 0.0705. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0673. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1331. Dev perf: 0.3. Best dev perf: 0.7317
********* Done *********
[# API Calls 7350] loss: 0.0687. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0758. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1476. Dev perf: 0.3636. Best dev perf: 0.7317
********* Done *********
[# API Calls 7450] loss: 0.0948. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0902. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.2825. Dev perf: 0.4286. Best dev perf: 0.7317
********* Done *********
[# API Calls 7550] loss: 0.0674. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0622. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.3047. Dev perf: 0.4138. Best dev perf: 0.7317
********* Done *********
[# API Calls 7650] loss: 0.0578. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 35.38383278052012 (mins)
