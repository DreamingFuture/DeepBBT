nohup: ignoring input
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset sst-2 (/home/qingyang/.cache/huggingface/datasets/sst-2/default/0.0.0/26b70199511695eac9d65590972c9d0d4ee7de5956b8325211c3b38e8a26dd34)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 4923.98ex/s]
Example in train set:
{'text': 'the love ', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . the love  . It was <mask> .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 34.67ba/s]
Using custom data configuration default
Reusing dataset sst-2 (/home/qingyang/.cache/huggingface/datasets/sst-2/default/0.0.0/26b70199511695eac9d65590972c9d0d4ee7de5956b8325211c3b38e8a26dd34)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5309.46ex/s]
Example in dev set:
{'text': 'calculating fiend ', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . calculating fiend  . It was <mask> .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 49.06ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 58       | 12338  |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 59       | 12338  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0085, std=0.8530, min=-16.0012, max=17.4921
 - After clipping (round 1): mu=-0.0070, std=0.7224, min=-2.5675, max=2.5505
 - After clipping (round 2): mu=-0.0064, std=0.7161, min=-2.1740, max=2.1601
 - After clipping (round 3): mu=-0.0063, std=0.7157, min=-2.1547, max=2.1419
 - After clipping (round 4): mu=-0.0063, std=0.7157, min=-2.1535, max=2.1409
 - After clipping (round 5): mu=-0.0063, std=0.7157, min=-2.1535, max=2.1408
 - Random Projection: mu=0.0000, std=0.0320
[Layer 2]
 - Before clipping: mu=-0.0297, std=0.8793, min=-20.1518, max=15.5722
 - After clipping (round 1): mu=-0.0192, std=0.6953, min=-2.6675, max=2.6080
 - After clipping (round 2): mu=-0.0187, std=0.6849, min=-2.1051, max=2.0667
 - After clipping (round 3): mu=-0.0187, std=0.6842, min=-2.0734, max=2.0360
 - After clipping (round 4): mu=-0.0187, std=0.6841, min=-2.0712, max=2.0338
 - After clipping (round 5): mu=-0.0187, std=0.6841, min=-2.0710, max=2.0336
 - Random Projection: mu=0.0000, std=0.0306
[Layer 3]
 - Before clipping: mu=-0.0322, std=0.9168, min=-20.9868, max=13.8931
 - After clipping (round 1): mu=-0.0189, std=0.6951, min=-2.7826, max=2.7183
 - After clipping (round 2): mu=-0.0186, std=0.6825, min=-2.1043, max=2.0665
 - After clipping (round 3): mu=-0.0186, std=0.6816, min=-2.0660, max=2.0288
 - After clipping (round 4): mu=-0.0186, std=0.6815, min=-2.0633, max=2.0260
 - After clipping (round 5): mu=-0.0186, std=0.6815, min=-2.0631, max=2.0258
 - Random Projection: mu=0.0000, std=0.0305
[Layer 4]
 - Before clipping: mu=-0.0355, std=0.9257, min=-25.2613, max=10.3980
 - After clipping (round 1): mu=-0.0202, std=0.7096, min=-2.8127, max=2.7417
 - After clipping (round 2): mu=-0.0198, std=0.6984, min=-2.1489, max=2.1085
 - After clipping (round 3): mu=-0.0198, std=0.6976, min=-2.1149, max=2.0753
 - After clipping (round 4): mu=-0.0198, std=0.6975, min=-2.1125, max=2.0730
 - After clipping (round 5): mu=-0.0198, std=0.6975, min=-2.1124, max=2.0729
 - Random Projection: mu=0.0000, std=0.0312
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9446, min=-26.4073, max=8.0049
 - After clipping (round 1): mu=-0.0212, std=0.6953, min=-2.8729, max=2.7947
 - After clipping (round 2): mu=-0.0205, std=0.6822, min=-2.1070, max=2.0645
 - After clipping (round 3): mu=-0.0204, std=0.6813, min=-2.0672, max=2.0262
 - After clipping (round 4): mu=-0.0204, std=0.6813, min=-2.0644, max=2.0236
 - After clipping (round 5): mu=-0.0204, std=0.6813, min=-2.0642, max=2.0234
 - Random Projection: mu=0.0000, std=0.0305
[Layer 6]
 - Before clipping: mu=-0.0451, std=0.9619, min=-28.1229, max=5.9943
 - After clipping (round 1): mu=-0.0262, std=0.7026, min=-2.9307, max=2.8404
 - After clipping (round 2): mu=-0.0253, std=0.6877, min=-2.1340, max=2.0817
 - After clipping (round 3): mu=-0.0252, std=0.6865, min=-2.0884, max=2.0378
 - After clipping (round 4): mu=-0.0252, std=0.6864, min=-2.0848, max=2.0344
 - After clipping (round 5): mu=-0.0252, std=0.6864, min=-2.0845, max=2.0341
 - Random Projection: mu=0.0000, std=0.0307
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9768, min=-29.6917, max=5.8890
 - After clipping (round 1): mu=-0.0200, std=0.6663, min=-2.9712, max=2.8896
 - After clipping (round 2): mu=-0.0189, std=0.6464, min=-2.0188, max=1.9788
 - After clipping (round 3): mu=-0.0188, std=0.6445, min=-1.9581, max=1.9203
 - After clipping (round 4): mu=-0.0188, std=0.6443, min=-1.9524, max=1.9148
 - After clipping (round 5): mu=-0.0188, std=0.6443, min=-1.9518, max=1.9142
 - Random Projection: mu=0.0000, std=0.0288
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9938, min=-31.0606, max=7.2786
 - After clipping (round 1): mu=-0.0217, std=0.6366, min=-3.0245, max=2.9381
 - After clipping (round 2): mu=-0.0199, std=0.6122, min=-1.9315, max=1.8881
 - After clipping (round 3): mu=-0.0196, std=0.6096, min=-1.8564, max=1.8167
 - After clipping (round 4): mu=-0.0196, std=0.6093, min=-1.8484, max=1.8091
 - After clipping (round 5): mu=-0.0196, std=0.6093, min=-1.8475, max=1.8083
 - Random Projection: mu=0.0000, std=0.0272
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9883, min=-30.7643, max=6.2838
 - After clipping (round 1): mu=-0.0214, std=0.6047, min=-3.0078, max=2.9220
 - After clipping (round 2): mu=-0.0194, std=0.5775, min=-1.8356, max=1.7929
 - After clipping (round 3): mu=-0.0192, std=0.5744, min=-1.7519, max=1.7131
 - After clipping (round 4): mu=-0.0192, std=0.5741, min=-1.7425, max=1.7041
 - After clipping (round 5): mu=-0.0192, std=0.5740, min=-1.7414, max=1.7031
 - Random Projection: mu=0.0000, std=0.0257
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9944, min=-30.9285, max=6.5287
 - After clipping (round 1): mu=-0.0146, std=0.5755, min=-3.0196, max=2.9467
 - After clipping (round 2): mu=-0.0128, std=0.5452, min=-1.7409, max=1.7118
 - After clipping (round 3): mu=-0.0125, std=0.5418, min=-1.6485, max=1.6229
 - After clipping (round 4): mu=-0.0125, std=0.5414, min=-1.6379, max=1.6128
 - After clipping (round 5): mu=-0.0125, std=0.5413, min=-1.6366, max=1.6116
 - Random Projection: mu=0.0000, std=0.0242
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9536, min=-29.2432, max=6.1348
 - After clipping (round 1): mu=-0.0130, std=0.5621, min=-2.8947, max=2.8270
 - After clipping (round 2): mu=-0.0114, std=0.5336, min=-1.6993, max=1.6733
 - After clipping (round 3): mu=-0.0112, std=0.5303, min=-1.6123, max=1.5895
 - After clipping (round 4): mu=-0.0112, std=0.5299, min=-1.6022, max=1.5799
 - After clipping (round 5): mu=-0.0112, std=0.5299, min=-1.6010, max=1.5787
 - Random Projection: mu=0.0000, std=0.0237
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9700, min=-29.8971, max=6.4216
 - After clipping (round 1): mu=-0.0225, std=0.5704, min=-2.9535, max=2.8664
 - After clipping (round 2): mu=-0.0209, std=0.5418, min=-1.7338, max=1.6888
 - After clipping (round 3): mu=-0.0207, std=0.5384, min=-1.6462, max=1.6044
 - After clipping (round 4): mu=-0.0206, std=0.5380, min=-1.6359, max=1.5945
 - After clipping (round 5): mu=-0.0206, std=0.5379, min=-1.6346, max=1.5933
 - Random Projection: mu=0.0000, std=0.0241
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9762, min=-30.1185, max=6.1815
 - After clipping (round 1): mu=-0.0232, std=0.5872, min=-2.9724, max=2.8847
 - After clipping (round 2): mu=-0.0224, std=0.5641, min=-1.7848, max=1.7384
 - After clipping (round 3): mu=-0.0222, std=0.5617, min=-1.7146, max=1.6699
 - After clipping (round 4): mu=-0.0222, std=0.5614, min=-1.7072, max=1.6627
 - After clipping (round 5): mu=-0.0222, std=0.5613, min=-1.7063, max=1.6619
 - Random Projection: mu=0.0000, std=0.0251
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9819, min=-30.5076, max=5.3528
 - After clipping (round 1): mu=-0.0220, std=0.5870, min=-2.9885, max=2.9031
 - After clipping (round 2): mu=-0.0216, std=0.5673, min=-1.7831, max=1.7392
 - After clipping (round 3): mu=-0.0216, std=0.5655, min=-1.7236, max=1.6803
 - After clipping (round 4): mu=-0.0216, std=0.5653, min=-1.7180, max=1.6749
 - After clipping (round 5): mu=-0.0215, std=0.5653, min=-1.7174, max=1.6743
 - Random Projection: mu=0.0000, std=0.0253
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9943, min=-28.0744, max=5.8321
 - After clipping (round 1): mu=-0.0162, std=0.5925, min=-3.0248, max=2.9409
 - After clipping (round 2): mu=-0.0148, std=0.5700, min=-1.7937, max=1.7614
 - After clipping (round 3): mu=-0.0147, std=0.5680, min=-1.7249, max=1.6953
 - After clipping (round 4): mu=-0.0147, std=0.5678, min=-1.7187, max=1.6892
 - After clipping (round 5): mu=-0.0147, std=0.5678, min=-1.7181, max=1.6887
 - Random Projection: mu=0.0000, std=0.0254
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9992, min=-31.5311, max=5.9374
 - After clipping (round 1): mu=-0.0045, std=0.5860, min=-3.0306, max=2.9647
 - After clipping (round 2): mu=-0.0032, std=0.5638, min=-1.7625, max=1.7534
 - After clipping (round 3): mu=-0.0031, std=0.5618, min=-1.6944, max=1.6881
 - After clipping (round 4): mu=-0.0031, std=0.5616, min=-1.6883, max=1.6822
 - After clipping (round 5): mu=-0.0031, std=0.5616, min=-1.6878, max=1.6817
 - Random Projection: mu=0.0000, std=0.0251
[Layer 17]
 - Before clipping: mu=-0.0315, std=0.9753, min=-30.3690, max=6.0226
 - After clipping (round 1): mu=-0.0037, std=0.5734, min=-2.9576, max=2.8945
 - After clipping (round 2): mu=-0.0027, std=0.5518, min=-1.7239, max=1.7165
 - After clipping (round 3): mu=-0.0027, std=0.5498, min=-1.6580, max=1.6526
 - After clipping (round 4): mu=-0.0027, std=0.5496, min=-1.6521, max=1.6468
 - After clipping (round 5): mu=-0.0027, std=0.5496, min=-1.6516, max=1.6463
 - Random Projection: mu=0.0000, std=0.0246
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9734, min=-30.4493, max=5.6327
 - After clipping (round 1): mu=-0.0036, std=0.5784, min=-2.9507, max=2.8895
 - After clipping (round 2): mu=-0.0032, std=0.5566, min=-1.7389, max=1.7317
 - After clipping (round 3): mu=-0.0032, std=0.5546, min=-1.6730, max=1.6667
 - After clipping (round 4): mu=-0.0032, std=0.5544, min=-1.6670, max=1.6607
 - After clipping (round 5): mu=-0.0032, std=0.5544, min=-1.6665, max=1.6601
 - Random Projection: mu=0.0000, std=0.0248
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9603, min=-29.5199, max=5.3861
 - After clipping (round 1): mu=-0.0035, std=0.5667, min=-2.9104, max=2.8512
 - After clipping (round 2): mu=-0.0032, std=0.5442, min=-1.7035, max=1.6965
 - After clipping (round 3): mu=-0.0032, std=0.5422, min=-1.6360, max=1.6295
 - After clipping (round 4): mu=-0.0032, std=0.5420, min=-1.6298, max=1.6233
 - After clipping (round 5): mu=-0.0032, std=0.5420, min=-1.6292, max=1.6227
 - Random Projection: mu=0.0000, std=0.0242
[Layer 20]
 - Before clipping: mu=-0.0286, std=0.9453, min=-28.9122, max=5.4544
 - After clipping (round 1): mu=-0.0039, std=0.5621, min=-2.8646, max=2.8073
 - After clipping (round 2): mu=-0.0038, std=0.5391, min=-1.6903, max=1.6826
 - After clipping (round 3): mu=-0.0039, std=0.5370, min=-1.6210, max=1.6134
 - After clipping (round 4): mu=-0.0039, std=0.5368, min=-1.6149, max=1.6071
 - After clipping (round 5): mu=-0.0039, std=0.5368, min=-1.6143, max=1.6066
 - Random Projection: mu=0.0000, std=0.0240
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9890, min=-31.2384, max=5.2991
 - After clipping (round 1): mu=-0.0075, std=0.5618, min=-3.0003, max=2.9339
 - After clipping (round 2): mu=-0.0075, std=0.5357, min=-1.6929, max=1.6779
 - After clipping (round 3): mu=-0.0075, std=0.5334, min=-1.6147, max=1.5997
 - After clipping (round 4): mu=-0.0075, std=0.5332, min=-1.6077, max=1.5926
 - After clipping (round 5): mu=-0.0075, std=0.5331, min=-1.6070, max=1.5920
 - Random Projection: mu=0.0000, std=0.0238
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0062, min=-32.0853, max=5.1609
 - After clipping (round 1): mu=-0.0152, std=0.5353, min=-3.0599, max=2.9771
 - After clipping (round 2): mu=-0.0151, std=0.5075, min=-1.6212, max=1.5907
 - After clipping (round 3): mu=-0.0152, std=0.5050, min=-1.5375, max=1.5072
 - After clipping (round 4): mu=-0.0152, std=0.5047, min=-1.5301, max=1.4997
 - After clipping (round 5): mu=-0.0152, std=0.5047, min=-1.5294, max=1.4990
 - Random Projection: mu=0.0000, std=0.0226
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0094, min=-32.3840, max=5.3624
 - After clipping (round 1): mu=-0.0051, std=0.5224, min=-3.0592, max=2.9970
 - After clipping (round 2): mu=-0.0050, std=0.4939, min=-1.5725, max=1.5622
 - After clipping (round 3): mu=-0.0051, std=0.4912, min=-1.4865, max=1.4766
 - After clipping (round 4): mu=-0.0051, std=0.4910, min=-1.4787, max=1.4686
 - After clipping (round 5): mu=-0.0051, std=0.4909, min=-1.4779, max=1.4678
 - Random Projection: mu=0.0000, std=0.0220
Random projections initialized.
[# API Calls 50] loss: 0.5239. Current perf: 0.625. Best perf so far: 0.7188
[# API Calls 100] loss: 0.5048. Current perf: 0.6562. Best perf so far: 0.75
********* Evaluated on dev set *********
Dev loss: 0.4876. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 150] loss: 0.4798. Current perf: 0.7812. Best perf so far: 0.8125
[# API Calls 200] loss: 0.4653. Current perf: 0.7812. Best perf so far: 0.8438
********* Evaluated on dev set *********
Dev loss: 0.4645. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 250] loss: 0.4511. Current perf: 0.8438. Best perf so far: 0.8438
[# API Calls 300] loss: 0.437. Current perf: 0.8125. Best perf so far: 0.8438
********* Evaluated on dev set *********
Dev loss: 0.4534. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 350] loss: 0.4194. Current perf: 0.8438. Best perf so far: 0.8438
[# API Calls 400] loss: 0.4164. Current perf: 0.8438. Best perf so far: 0.8438
********* Evaluated on dev set *********
Dev loss: 0.4505. Dev perf: 0.7812. Best dev perf: 0.8125
********* Done *********
[# API Calls 450] loss: 0.4129. Current perf: 0.8438. Best perf so far: 0.8438
[# API Calls 500] loss: 0.4132. Current perf: 0.8438. Best perf so far: 0.8438
********* Evaluated on dev set *********
Dev loss: 0.4472. Dev perf: 0.7812. Best dev perf: 0.8125
********* Done *********
[# API Calls 550] loss: 0.4046. Current perf: 0.875. Best perf so far: 0.875
[# API Calls 600] loss: 0.3923. Current perf: 0.8125. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.426. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 650] loss: 0.3882. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 700] loss: 0.3787. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4675. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 750] loss: 0.3558. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 800] loss: 0.3561. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4426. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 850] loss: 0.3448. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 900] loss: 0.3401. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4314. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 950] loss: 0.3395. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 1000] loss: 0.3871. Current perf: 0.7812. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4085. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 1050] loss: 0.3931. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 1100] loss: 0.4287. Current perf: 0.75. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4235. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 1150] loss: 0.3668. Current perf: 0.8438. Best perf so far: 0.9062
[# API Calls 1200] loss: 0.3408. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4558. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 1250] loss: 0.3351. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 1300] loss: 0.3284. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4444. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 1350] loss: 0.3235. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 1400] loss: 0.3237. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.448. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 1450] loss: 0.4518. Current perf: 0.7188. Best perf so far: 0.9062
[# API Calls 1500] loss: 0.3834. Current perf: 0.8438. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4708. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 1550] loss: 0.3582. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 1600] loss: 0.353. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4039. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 1650] loss: 0.3397. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 1700] loss: 0.3294. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4392. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 1750] loss: 0.3235. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 1800] loss: 0.3178. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4312. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 1850] loss: 0.3144. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 1900] loss: 0.3121. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4335. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 1950] loss: 0.3735. Current perf: 0.8438. Best perf so far: 0.9062
[# API Calls 2000] loss: 0.4774. Current perf: 0.75. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.3673. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 2050] loss: 0.3462. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 2100] loss: 0.3215. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4512. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 2150] loss: 0.3047. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 2200] loss: 0.2985. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4472. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 2250] loss: 0.288. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 2300] loss: 0.288. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4125. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 2350] loss: 0.2817. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 2400] loss: 0.2825. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.424. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 2450] loss: 0.3399. Current perf: 0.8438. Best perf so far: 0.9062
[# API Calls 2500] loss: 0.3084. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4242. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 2550] loss: 0.3193. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 2600] loss: 0.284. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4759. Dev perf: 0.6875. Best dev perf: 0.875
********* Done *********
[# API Calls 2650] loss: 0.284. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 2700] loss: 0.2763. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.5016. Dev perf: 0.6875. Best dev perf: 0.875
********* Done *********
[# API Calls 2750] loss: 0.2564. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 2800] loss: 0.2553. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4826. Dev perf: 0.6875. Best dev perf: 0.875
********* Done *********
[# API Calls 2850] loss: 0.2535. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 2900] loss: 0.3271. Current perf: 0.8438. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4087. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 2950] loss: 0.4971. Current perf: 0.75. Best perf so far: 0.9062
[# API Calls 3000] loss: 0.3078. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4988. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 3050] loss: 0.285. Current perf: 0.8438. Best perf so far: 0.9062
[# API Calls 3100] loss: 0.2537. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4541. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 3150] loss: 0.2469. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 3200] loss: 0.2386. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4497. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 3250] loss: 0.2337. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 3300] loss: 0.2314. Current perf: 0.9062. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4481. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 3350] loss: 0.228. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 3400] loss: 0.2644. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4687. Dev perf: 0.6875. Best dev perf: 0.875
********* Done *********
[# API Calls 3450] loss: 0.2645. Current perf: 0.875. Best perf so far: 0.9375
[# API Calls 3500] loss: 0.2453. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3714. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 3550] loss: 0.2385. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 3600] loss: 0.232. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4336. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 3650] loss: 0.2186. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 3700] loss: 0.2146. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4265. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 3750] loss: 0.2118. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 3800] loss: 0.209. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4585. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 3850] loss: 0.2247. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 3900] loss: 0.2646. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4574. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 3950] loss: 0.2867. Current perf: 0.8438. Best perf so far: 0.9375
[# API Calls 4000] loss: 0.2821. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3643. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 4050] loss: 0.2049. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 4100] loss: 0.1976. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4241. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 4150] loss: 0.1985. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 4200] loss: 0.1902. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4369. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 4250] loss: 0.1849. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 4300] loss: 0.1807. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4418. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 4350] loss: 0.2196. Current perf: 0.875. Best perf so far: 0.9375
[# API Calls 4400] loss: 0.2286. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3739. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 4450] loss: 0.2293. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 4500] loss: 0.2079. Current perf: 0.9062. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.4281. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 4550] loss: 0.2003. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 4600] loss: 0.2007. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.372. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 4650] loss: 0.2021. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 4700] loss: 0.1981. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3789. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 4750] loss: 0.1985. Current perf: 0.9062. Best perf so far: 0.9688
[# API Calls 4800] loss: 0.1968. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3866. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 4850] loss: 0.2016. Current perf: 0.9062. Best perf so far: 0.9688
[# API Calls 4900] loss: 0.1971. Current perf: 0.9062. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3738. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 4950] loss: 0.1902. Current perf: 0.9062. Best perf so far: 0.9688
[# API Calls 5000] loss: 0.1955. Current perf: 0.9062. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.466. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 5050] loss: 0.173. Current perf: 0.9062. Best perf so far: 0.9688
[# API Calls 5100] loss: 0.1631. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.4417. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5150] loss: 0.1547. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 5200] loss: 0.1487. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.4783. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 5250] loss: 0.1399. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 5300] loss: 0.1417. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.5205. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 5350] loss: 0.1522. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 5400] loss: 0.1371. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.5221. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 5450] loss: 0.1335. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 5500] loss: 0.1383. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.4732. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5550] loss: 0.1308. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 5600] loss: 0.1306. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.4769. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 5650] loss: 0.1236. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 5700] loss: 0.1209. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.4844. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 5750] loss: 0.1141. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 5800] loss: 0.112. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5191. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 5850] loss: 0.1325. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 5900] loss: 0.1274. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4716. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 5950] loss: 0.1147. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0986. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5408. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 6050] loss: 0.0995. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0954. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5913. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 6150] loss: 0.0876. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0863. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5822. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 6250] loss: 0.1385. Current perf: 0.9062. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0908. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5435. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 6350] loss: 0.0934. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.0925. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4613. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 6450] loss: 0.0704. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0629. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5158. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 6550] loss: 0.0692. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0511. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5632. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 6650] loss: 0.0495. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0437. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5612. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 6750] loss: 0.0407. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0473. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6348. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 6850] loss: 0.0493. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0613. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7325. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 6950] loss: 0.0446. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0442. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6759. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 7050] loss: 0.0396. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0419. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7376. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 7150] loss: 0.0355. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.035. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7065. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 7250] loss: 0.0391. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.055. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.642. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 7350] loss: 0.0443. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0372. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7438. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 7450] loss: 0.0358. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0302. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6244. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 7550] loss: 0.0422. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0313. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6183. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 7650] loss: 0.0277. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 26.147719585895537 (mins)
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset sst-2 (/home/qingyang/.cache/huggingface/datasets/sst-2/default/0.0.0/26b70199511695eac9d65590972c9d0d4ee7de5956b8325211c3b38e8a26dd34)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5305.47ex/s]
Example in train set:
{'text': 'well worth revisiting as many times ', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . well worth revisiting as many times  . It was <mask> .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 34.24ba/s]
Using custom data configuration default
Reusing dataset sst-2 (/home/qingyang/.cache/huggingface/datasets/sst-2/default/0.0.0/26b70199511695eac9d65590972c9d0d4ee7de5956b8325211c3b38e8a26dd34)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5120.27ex/s]
Example in dev set:
{'text': 'to liven things up ', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . to liven things up  . It was <mask> .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 45.62ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 63       | 12338  |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 61       | 12338  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0087, std=0.8563, min=-16.1038, max=17.5038
 - After clipping (round 1): mu=-0.0072, std=0.7336, min=-2.5776, max=2.5603
 - After clipping (round 2): mu=-0.0067, std=0.7279, min=-2.2079, max=2.1935
 - After clipping (round 3): mu=-0.0066, std=0.7276, min=-2.1904, max=2.1771
 - After clipping (round 4): mu=-0.0066, std=0.7276, min=-2.1894, max=2.1761
 - After clipping (round 5): mu=-0.0066, std=0.7276, min=-2.1893, max=2.1761
 - Random Projection: mu=0.0000, std=0.0325
[Layer 2]
 - Before clipping: mu=-0.0299, std=0.8796, min=-20.1623, max=15.3428
 - After clipping (round 1): mu=-0.0193, std=0.7016, min=-2.6688, max=2.6091
 - After clipping (round 2): mu=-0.0189, std=0.6919, min=-2.1242, max=2.0856
 - After clipping (round 3): mu=-0.0188, std=0.6913, min=-2.0946, max=2.0569
 - After clipping (round 4): mu=-0.0188, std=0.6912, min=-2.0926, max=2.0550
 - After clipping (round 5): mu=-0.0188, std=0.6912, min=-2.0925, max=2.0548
 - Random Projection: mu=0.0000, std=0.0309
[Layer 3]
 - Before clipping: mu=-0.0323, std=0.9176, min=-20.9555, max=13.6761
 - After clipping (round 1): mu=-0.0191, std=0.7004, min=-2.7852, max=2.7206
 - After clipping (round 2): mu=-0.0188, std=0.6881, min=-2.1203, max=2.0822
 - After clipping (round 3): mu=-0.0188, std=0.6873, min=-2.0833, max=2.0456
 - After clipping (round 4): mu=-0.0188, std=0.6872, min=-2.0807, max=2.0430
 - After clipping (round 5): mu=-0.0188, std=0.6872, min=-2.0805, max=2.0428
 - Random Projection: mu=0.0000, std=0.0307
[Layer 4]
 - Before clipping: mu=-0.0356, std=0.9279, min=-25.2571, max=10.1509
 - After clipping (round 1): mu=-0.0204, std=0.7185, min=-2.8193, max=2.7482
 - After clipping (round 2): mu=-0.0199, std=0.7077, min=-2.1758, max=2.1351
 - After clipping (round 3): mu=-0.0198, std=0.7069, min=-2.1428, max=2.1031
 - After clipping (round 4): mu=-0.0198, std=0.7069, min=-2.1407, max=2.1010
 - After clipping (round 5): mu=-0.0198, std=0.7069, min=-2.1405, max=2.1009
 - Random Projection: mu=0.0000, std=0.0316
[Layer 5]
 - Before clipping: mu=-0.0392, std=0.9458, min=-26.3674, max=8.1651
 - After clipping (round 1): mu=-0.0215, std=0.7054, min=-2.8767, max=2.7983
 - After clipping (round 2): mu=-0.0206, std=0.6926, min=-2.1377, max=2.0947
 - After clipping (round 3): mu=-0.0205, std=0.6917, min=-2.0982, max=2.0571
 - After clipping (round 4): mu=-0.0205, std=0.6916, min=-2.0956, max=2.0546
 - After clipping (round 5): mu=-0.0205, std=0.6916, min=-2.0954, max=2.0544
 - Random Projection: mu=0.0000, std=0.0309
[Layer 6]
 - Before clipping: mu=-0.0452, std=0.9624, min=-28.1229, max=5.9551
 - After clipping (round 1): mu=-0.0263, std=0.7119, min=-2.9325, max=2.8422
 - After clipping (round 2): mu=-0.0253, std=0.6971, min=-2.1621, max=2.1094
 - After clipping (round 3): mu=-0.0252, std=0.6959, min=-2.1165, max=2.0660
 - After clipping (round 4): mu=-0.0252, std=0.6958, min=-2.1128, max=2.0625
 - After clipping (round 5): mu=-0.0251, std=0.6958, min=-2.1125, max=2.0622
 - Random Projection: mu=0.0000, std=0.0311
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9770, min=-29.6852, max=6.0192
 - After clipping (round 1): mu=-0.0200, std=0.6721, min=-2.9718, max=2.8903
 - After clipping (round 2): mu=-0.0188, std=0.6521, min=-2.0362, max=1.9963
 - After clipping (round 3): mu=-0.0186, std=0.6501, min=-1.9750, max=1.9375
 - After clipping (round 4): mu=-0.0186, std=0.6499, min=-1.9691, max=1.9318
 - After clipping (round 5): mu=-0.0186, std=0.6499, min=-1.9685, max=1.9312
 - Random Projection: mu=0.0000, std=0.0291
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9938, min=-30.7272, max=6.9239
 - After clipping (round 1): mu=-0.0216, std=0.6391, min=-3.0245, max=2.9381
 - After clipping (round 2): mu=-0.0197, std=0.6137, min=-1.9389, max=1.8957
 - After clipping (round 3): mu=-0.0194, std=0.6110, min=-1.8609, max=1.8216
 - After clipping (round 4): mu=-0.0194, std=0.6107, min=-1.8523, max=1.8135
 - After clipping (round 5): mu=-0.0194, std=0.6106, min=-1.8514, max=1.8126
 - Random Projection: mu=0.0000, std=0.0273
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9885, min=-30.6454, max=6.8584
 - After clipping (round 1): mu=-0.0211, std=0.5999, min=-3.0084, max=2.9226
 - After clipping (round 2): mu=-0.0191, std=0.5711, min=-1.8209, max=1.7787
 - After clipping (round 3): mu=-0.0188, std=0.5678, min=-1.7324, max=1.6943
 - After clipping (round 4): mu=-0.0188, std=0.5674, min=-1.7222, max=1.6845
 - After clipping (round 5): mu=-0.0188, std=0.5673, min=-1.7209, max=1.6834
 - Random Projection: mu=0.0000, std=0.0254
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9946, min=-30.8734, max=7.3795
 - After clipping (round 1): mu=-0.0143, std=0.5670, min=-3.0204, max=2.9475
 - After clipping (round 2): mu=-0.0124, std=0.5347, min=-1.7153, max=1.6867
 - After clipping (round 3): mu=-0.0122, std=0.5309, min=-1.6164, max=1.5915
 - After clipping (round 4): mu=-0.0121, std=0.5304, min=-1.6048, max=1.5805
 - After clipping (round 5): mu=-0.0121, std=0.5304, min=-1.6034, max=1.5792
 - Random Projection: mu=0.0000, std=0.0237
[Layer 11]
 - Before clipping: mu=-0.0338, std=0.9531, min=-29.1909, max=7.1664
 - After clipping (round 1): mu=-0.0127, std=0.5528, min=-2.8932, max=2.8255
 - After clipping (round 2): mu=-0.0110, std=0.5228, min=-1.6710, max=1.6456
 - After clipping (round 3): mu=-0.0108, std=0.5192, min=-1.5794, max=1.5573
 - After clipping (round 4): mu=-0.0108, std=0.5187, min=-1.5684, max=1.5468
 - After clipping (round 5): mu=-0.0108, std=0.5187, min=-1.5670, max=1.5454
 - Random Projection: mu=0.0000, std=0.0232
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9697, min=-29.9246, max=6.8844
 - After clipping (round 1): mu=-0.0223, std=0.5605, min=-2.9528, max=2.8657
 - After clipping (round 2): mu=-0.0206, std=0.5303, min=-1.7037, max=1.6591
 - After clipping (round 3): mu=-0.0204, std=0.5267, min=-1.6116, max=1.5704
 - After clipping (round 4): mu=-0.0203, std=0.5262, min=-1.6004, max=1.5596
 - After clipping (round 5): mu=-0.0203, std=0.5261, min=-1.5989, max=1.5582
 - Random Projection: mu=0.0000, std=0.0235
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9761, min=-30.0991, max=6.1776
 - After clipping (round 1): mu=-0.0230, std=0.5761, min=-2.9721, max=2.8843
 - After clipping (round 2): mu=-0.0220, std=0.5518, min=-1.7512, max=1.7052
 - After clipping (round 3): mu=-0.0218, std=0.5491, min=-1.6773, max=1.6333
 - After clipping (round 4): mu=-0.0218, std=0.5488, min=-1.6692, max=1.6255
 - After clipping (round 5): mu=-0.0218, std=0.5488, min=-1.6682, max=1.6246
 - Random Projection: mu=0.0000, std=0.0245
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9819, min=-30.5290, max=5.3788
 - After clipping (round 1): mu=-0.0218, std=0.5778, min=-2.9885, max=2.9031
 - After clipping (round 2): mu=-0.0213, std=0.5573, min=-1.7551, max=1.7115
 - After clipping (round 3): mu=-0.0212, std=0.5553, min=-1.6933, max=1.6506
 - After clipping (round 4): mu=-0.0212, std=0.5551, min=-1.6872, max=1.6448
 - After clipping (round 5): mu=-0.0212, std=0.5551, min=-1.6866, max=1.6442
 - Random Projection: mu=0.0000, std=0.0248
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9944, min=-28.1007, max=5.8988
 - After clipping (round 1): mu=-0.0158, std=0.5829, min=-3.0250, max=2.9411
 - After clipping (round 2): mu=-0.0144, std=0.5596, min=-1.7644, max=1.7328
 - After clipping (round 3): mu=-0.0143, std=0.5574, min=-1.6932, max=1.6644
 - After clipping (round 4): mu=-0.0143, std=0.5572, min=-1.6864, max=1.6579
 - After clipping (round 5): mu=-0.0143, std=0.5571, min=-1.6857, max=1.6572
 - Random Projection: mu=0.0000, std=0.0249
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9993, min=-31.5312, max=5.9380
 - After clipping (round 1): mu=-0.0043, std=0.5783, min=-3.0310, max=2.9650
 - After clipping (round 2): mu=-0.0028, std=0.5553, min=-1.7391, max=1.7306
 - After clipping (round 3): mu=-0.0027, std=0.5532, min=-1.6687, max=1.6631
 - After clipping (round 4): mu=-0.0027, std=0.5530, min=-1.6622, max=1.6568
 - After clipping (round 5): mu=-0.0027, std=0.5529, min=-1.6616, max=1.6562
 - Random Projection: mu=0.0000, std=0.0247
[Layer 17]
 - Before clipping: mu=-0.0315, std=0.9749, min=-30.3677, max=5.9047
 - After clipping (round 1): mu=-0.0034, std=0.5648, min=-2.9562, max=2.8931
 - After clipping (round 2): mu=-0.0024, std=0.5424, min=-1.6979, max=1.6910
 - After clipping (round 3): mu=-0.0024, std=0.5403, min=-1.6295, max=1.6247
 - After clipping (round 4): mu=-0.0024, std=0.5401, min=-1.6232, max=1.6184
 - After clipping (round 5): mu=-0.0024, std=0.5400, min=-1.6225, max=1.6178
 - Random Projection: mu=0.0000, std=0.0242
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9728, min=-30.4443, max=5.5502
 - After clipping (round 1): mu=-0.0033, std=0.5686, min=-2.9491, max=2.8879
 - After clipping (round 2): mu=-0.0029, std=0.5458, min=-1.7092, max=1.7025
 - After clipping (round 3): mu=-0.0029, std=0.5436, min=-1.6404, max=1.6346
 - After clipping (round 4): mu=-0.0029, std=0.5434, min=-1.6339, max=1.6280
 - After clipping (round 5): mu=-0.0029, std=0.5434, min=-1.6332, max=1.6273
 - Random Projection: mu=0.0000, std=0.0243
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9594, min=-29.4895, max=5.3948
 - After clipping (round 1): mu=-0.0033, std=0.5584, min=-2.9079, max=2.8487
 - After clipping (round 2): mu=-0.0031, std=0.5351, min=-1.6784, max=1.6718
 - After clipping (round 3): mu=-0.0031, std=0.5329, min=-1.6084, max=1.6023
 - After clipping (round 4): mu=-0.0031, std=0.5327, min=-1.6019, max=1.5957
 - After clipping (round 5): mu=-0.0031, std=0.5327, min=-1.6013, max=1.5951
 - Random Projection: mu=0.0000, std=0.0238
[Layer 20]
 - Before clipping: mu=-0.0286, std=0.9444, min=-28.9148, max=5.2008
 - After clipping (round 1): mu=-0.0037, std=0.5554, min=-2.8618, max=2.8046
 - After clipping (round 2): mu=-0.0038, std=0.5313, min=-1.6698, max=1.6624
 - After clipping (round 3): mu=-0.0038, std=0.5291, min=-1.5977, max=1.5902
 - After clipping (round 4): mu=-0.0038, std=0.5288, min=-1.5910, max=1.5834
 - After clipping (round 5): mu=-0.0038, std=0.5288, min=-1.5904, max=1.5827
 - Random Projection: mu=0.0000, std=0.0236
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9888, min=-31.2374, max=5.3835
 - After clipping (round 1): mu=-0.0073, std=0.5543, min=-2.9996, max=2.9333
 - After clipping (round 2): mu=-0.0074, std=0.5270, min=-1.6700, max=1.6555
 - After clipping (round 3): mu=-0.0075, std=0.5245, min=-1.5884, max=1.5736
 - After clipping (round 4): mu=-0.0075, std=0.5242, min=-1.5809, max=1.5660
 - After clipping (round 5): mu=-0.0075, std=0.5242, min=-1.5802, max=1.5652
 - Random Projection: mu=0.0000, std=0.0234
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0063, min=-32.0879, max=5.0671
 - After clipping (round 1): mu=-0.0150, std=0.5259, min=-3.0604, max=2.9776
 - After clipping (round 2): mu=-0.0150, std=0.4968, min=-1.5928, max=1.5627
 - After clipping (round 3): mu=-0.0151, std=0.4942, min=-1.5055, max=1.4755
 - After clipping (round 4): mu=-0.0151, std=0.4939, min=-1.4976, max=1.4674
 - After clipping (round 5): mu=-0.0151, std=0.4939, min=-1.4968, max=1.4666
 - Random Projection: mu=0.0000, std=0.0221
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0097, min=-32.3799, max=5.1443
 - After clipping (round 1): mu=-0.0049, std=0.5100, min=-3.0602, max=2.9980
 - After clipping (round 2): mu=-0.0048, std=0.4800, min=-1.5349, max=1.5251
 - After clipping (round 3): mu=-0.0049, std=0.4772, min=-1.4449, max=1.4353
 - After clipping (round 4): mu=-0.0049, std=0.4769, min=-1.4364, max=1.4266
 - After clipping (round 5): mu=-0.0049, std=0.4768, min=-1.4355, max=1.4257
 - Random Projection: mu=0.0000, std=0.0213
Random projections initialized.
[# API Calls 50] loss: 0.4531. Current perf: 0.8125. Best perf so far: 0.8438
[# API Calls 100] loss: 0.4411. Current perf: 0.8125. Best perf so far: 0.8438
********* Evaluated on dev set *********
Dev loss: 0.4307. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 150] loss: 0.4128. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 200] loss: 0.4061. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4016. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 250] loss: 0.3927. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 300] loss: 0.3936. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3946. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 350] loss: 0.3641. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 400] loss: 0.3525. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3797. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 450] loss: 0.3409. Current perf: 0.875. Best perf so far: 0.9375
[# API Calls 500] loss: 0.3463. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3876. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 550] loss: 0.3358. Current perf: 0.875. Best perf so far: 0.9375
[# API Calls 600] loss: 0.3986. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3935. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 650] loss: 0.3264. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 700] loss: 0.3207. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3642. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 750] loss: 0.3037. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 800] loss: 0.3038. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3349. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 850] loss: 0.2887. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 900] loss: 0.2833. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3118. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 950] loss: 0.2804. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1000] loss: 0.2869. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3422. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 1050] loss: 0.284. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1100] loss: 0.2698. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.298. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 1150] loss: 0.2692. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1200] loss: 0.2631. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3043. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 1250] loss: 0.2559. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1300] loss: 0.2511. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2851. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 1350] loss: 0.2319. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1400] loss: 0.2253. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2861. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 1450] loss: 0.2255. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1500] loss: 0.2252. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2564. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 1550] loss: 0.2372. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1600] loss: 0.2346. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2552. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 1650] loss: 0.2079. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1700] loss: 0.2127. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.254. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 1750] loss: 0.1967. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1800] loss: 0.1996. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2516. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 1850] loss: 0.1931. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 1900] loss: 0.1922. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2433. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 1950] loss: 0.2182. Current perf: 0.9375. Best perf so far: 0.9375
[# API Calls 2000] loss: 0.1922. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.2674. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 2050] loss: 0.1803. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 2100] loss: 0.1724. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2314. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 2150] loss: 0.1545. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2200] loss: 0.1541. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2342. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 2250] loss: 0.1448. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2300] loss: 0.1419. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.2234. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 2350] loss: 0.1315. Current perf: 0.9688. Best perf so far: 0.9688
[# API Calls 2400] loss: 0.1284. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2446. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 2450] loss: 0.1276. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2500] loss: 0.129. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1867. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 2550] loss: 0.1187. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2600] loss: 0.1103. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1481. Dev perf: 0.9688. Best dev perf: 0.9688
********* Done *********
[# API Calls 2650] loss: 0.1025. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2700] loss: 0.1004. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1801. Dev perf: 0.9062. Best dev perf: 0.9688
********* Done *********
[# API Calls 2750] loss: 0.0901. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2800] loss: 0.094. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1994. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 2850] loss: 0.0836. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2900] loss: 0.0777. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1703. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 2950] loss: 0.0853. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3000] loss: 0.0779. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1265. Dev perf: 0.9688. Best dev perf: 0.9688
********* Done *********
[# API Calls 3050] loss: 0.074. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3100] loss: 0.0758. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1655. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 3150] loss: 0.068. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3200] loss: 0.0625. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.156. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 3250] loss: 0.0568. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3300] loss: 0.057. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1583. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 3350] loss: 0.0521. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3400] loss: 0.0497. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1514. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 3450] loss: 0.0511. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3500] loss: 0.0473. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1974. Dev perf: 0.9062. Best dev perf: 0.9688
********* Done *********
[# API Calls 3550] loss: 0.0416. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3600] loss: 0.0374. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1259. Dev perf: 0.9688. Best dev perf: 0.9688
********* Done *********
[# API Calls 3650] loss: 0.0388. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3700] loss: 0.0338. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1497. Dev perf: 0.9688. Best dev perf: 0.9688
********* Done *********
[# API Calls 3750] loss: 0.0282. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.0298. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1151. Dev perf: 0.9688. Best dev perf: 0.9688
********* Done *********
[# API Calls 3850] loss: 0.0273. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3900] loss: 0.0299. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.15. Dev perf: 0.9688. Best dev perf: 0.9688
********* Done *********
[# API Calls 3950] loss: 0.0213. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4000] loss: 0.0218. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1859. Dev perf: 0.9062. Best dev perf: 0.9688
********* Done *********
[# API Calls 4050] loss: 0.015. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4100] loss: 0.0152. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1054. Dev perf: 0.9062. Best dev perf: 0.9688
********* Done *********
[# API Calls 4150] loss: 0.0138. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.0111. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2183. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 4250] loss: 0.0098. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0092. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1951. Dev perf: 0.9062. Best dev perf: 0.9688
********* Done *********
[# API Calls 4350] loss: 0.0086. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.0081. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1165. Dev perf: 0.9062. Best dev perf: 0.9688
********* Done *********
[# API Calls 4450] loss: 0.0082. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4500] loss: 0.0078. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0755. Dev perf: 0.9688. Best dev perf: 0.9688
********* Done *********
[# API Calls 4550] loss: 0.0077. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.0068. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0512. Dev perf: 1.0. Best dev perf: 1.0
********* Done *********
[# API Calls 4650] loss: 0.0057. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.0051. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0383. Dev perf: 1.0. Best dev perf: 1.0
********* Done *********
[# API Calls 4750] loss: 0.004. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.003. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0433. Dev perf: 1.0. Best dev perf: 1.0
********* Done *********
[# API Calls 4850] loss: 0.003. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.0036. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1386. Dev perf: 0.9688. Best dev perf: 1.0
********* Done *********
[# API Calls 4950] loss: 0.003. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.0032. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0644. Dev perf: 0.9375. Best dev perf: 1.0
********* Done *********
[# API Calls 5050] loss: 0.0035. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.0034. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1296. Dev perf: 0.9375. Best dev perf: 1.0
********* Done *********
[# API Calls 5150] loss: 0.0032. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0029. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.191. Dev perf: 0.9375. Best dev perf: 1.0
********* Done *********
[# API Calls 5250] loss: 0.0027. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0021. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1841. Dev perf: 0.9375. Best dev perf: 1.0
********* Done *********
[# API Calls 5350] loss: 0.0022. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.0024. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1092. Dev perf: 0.9688. Best dev perf: 1.0
********* Done *********
[# API Calls 5450] loss: 0.0015. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0012. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0539. Dev perf: 0.9688. Best dev perf: 1.0
********* Done *********
[# API Calls 5550] loss: 0.0014. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0015. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0833. Dev perf: 0.9688. Best dev perf: 1.0
********* Done *********
[# API Calls 5650] loss: 0.0009. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0006. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0408. Dev perf: 1.0. Best dev perf: 1.0
********* Done *********
[# API Calls 5750] loss: 0.0005. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0004. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0326. Dev perf: 0.9688. Best dev perf: 1.0
********* Done *********
[# API Calls 5850] loss: 0.0004. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0004. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1181. Dev perf: 0.9375. Best dev perf: 1.0
********* Done *********
[# API Calls 5950] loss: 0.0002. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0003. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0159. Dev perf: 1.0. Best dev perf: 1.0
********* Done *********
[# API Calls 6050] loss: 0.0002. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0002. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0418. Dev perf: 0.9688. Best dev perf: 1.0
********* Done *********
[# API Calls 6150] loss: 0.0003. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0002. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1224. Dev perf: 0.9375. Best dev perf: 1.0
********* Done *********
[# API Calls 6250] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0154. Dev perf: 1.0. Best dev perf: 1.0
********* Done *********
[# API Calls 6350] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2465. Dev perf: 0.9375. Best dev perf: 1.0
********* Done *********
[# API Calls 6450] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0184. Dev perf: 1.0. Best dev perf: 1.0
********* Done *********
[# API Calls 6550] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1606. Dev perf: 0.9375. Best dev perf: 1.0
********* Done *********
[# API Calls 6650] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.1856. Dev perf: 0.9375. Best dev perf: 1.0
********* Done *********
[# API Calls 6750] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0501. Dev perf: 0.9688. Best dev perf: 1.0
********* Done *********
[# API Calls 6850] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5154. Dev perf: 0.9062. Best dev perf: 1.0
********* Done *********
[# API Calls 6950] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4615. Dev perf: 0.9062. Best dev perf: 1.0
********* Done *********
[# API Calls 7050] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4242. Dev perf: 0.9062. Best dev perf: 1.0
********* Done *********
[# API Calls 7150] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3913. Dev perf: 0.9062. Best dev perf: 1.0
********* Done *********
[# API Calls 7250] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0775. Dev perf: 0.9688. Best dev perf: 1.0
********* Done *********
[# API Calls 7350] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2955. Dev perf: 0.9062. Best dev perf: 1.0
********* Done *********
[# API Calls 7450] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.222. Dev perf: 0.9688. Best dev perf: 1.0
********* Done *********
[# API Calls 7550] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.0193. Dev perf: 1.0. Best dev perf: 1.0
********* Done *********
[# API Calls 7650] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 29.53959590991338 (mins)
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset sst-2 (/home/qingyang/.cache/huggingface/datasets/sst-2/default/0.0.0/26b70199511695eac9d65590972c9d0d4ee7de5956b8325211c3b38e8a26dd34)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5224.92ex/s]
Example in train set:
{'text': "with outtakes in which most of the characters forget their lines and just utter ` uhhh , ' which is better than most of the writing in the movie ", 'labels': 0, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . with outtakes in which most of the characters forget their lines and just utter ` uhhh , ' which is better than most of the writing in the movie  . It was <mask> .", 'target_text': 'bad'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 35.57ba/s]
Using custom data configuration default
Reusing dataset sst-2 (/home/qingyang/.cache/huggingface/datasets/sst-2/default/0.0.0/26b70199511695eac9d65590972c9d0d4ee7de5956b8325211c3b38e8a26dd34)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5489.93ex/s]
Example in dev set:
{'text': 'awe and affection -- and a strange urge to get on a board and , uh , shred , dude ', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . awe and affection -- and a strange urge to get on a board and , uh , shred , dude  . It was <mask> .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 30.97ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 88       | 10999  |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 76       | 12338  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0085, std=0.8539, min=-16.0311, max=17.5306
 - After clipping (round 1): mu=-0.0069, std=0.7258, min=-2.5702, max=2.5531
 - After clipping (round 2): mu=-0.0064, std=0.7197, min=-2.1843, max=2.1705
 - After clipping (round 3): mu=-0.0064, std=0.7193, min=-2.1654, max=2.1527
 - After clipping (round 4): mu=-0.0064, std=0.7193, min=-2.1644, max=2.1516
 - After clipping (round 5): mu=-0.0064, std=0.7193, min=-2.1643, max=2.1516
 - Random Projection: mu=0.0000, std=0.0322
[Layer 2]
 - Before clipping: mu=-0.0298, std=0.8796, min=-20.1497, max=15.5021
 - After clipping (round 1): mu=-0.0192, std=0.6978, min=-2.6686, max=2.6090
 - After clipping (round 2): mu=-0.0188, std=0.6876, min=-2.1127, max=2.0742
 - After clipping (round 3): mu=-0.0188, std=0.6868, min=-2.0815, max=2.0438
 - After clipping (round 4): mu=-0.0188, std=0.6868, min=-2.0793, max=2.0416
 - After clipping (round 5): mu=-0.0188, std=0.6868, min=-2.0791, max=2.0414
 - Random Projection: mu=0.0000, std=0.0307
[Layer 3]
 - Before clipping: mu=-0.0322, std=0.9171, min=-20.9830, max=13.6935
 - After clipping (round 1): mu=-0.0191, std=0.6960, min=-2.7836, max=2.7191
 - After clipping (round 2): mu=-0.0188, std=0.6832, min=-2.1072, max=2.0690
 - After clipping (round 3): mu=-0.0188, std=0.6823, min=-2.0686, max=2.0309
 - After clipping (round 4): mu=-0.0188, std=0.6822, min=-2.0657, max=2.0281
 - After clipping (round 5): mu=-0.0188, std=0.6822, min=-2.0655, max=2.0279
 - Random Projection: mu=0.0000, std=0.0305
[Layer 4]
 - Before clipping: mu=-0.0355, std=0.9263, min=-25.2683, max=10.1836
 - After clipping (round 1): mu=-0.0203, std=0.7103, min=-2.8145, max=2.7435
 - After clipping (round 2): mu=-0.0198, std=0.6990, min=-2.1511, max=2.1105
 - After clipping (round 3): mu=-0.0198, std=0.6983, min=-2.1169, max=2.0772
 - After clipping (round 4): mu=-0.0198, std=0.6982, min=-2.1146, max=2.0750
 - After clipping (round 5): mu=-0.0198, std=0.6982, min=-2.1144, max=2.0748
 - Random Projection: mu=0.0000, std=0.0312
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9448, min=-26.4029, max=7.4401
 - After clipping (round 1): mu=-0.0213, std=0.6952, min=-2.8734, max=2.7952
 - After clipping (round 2): mu=-0.0204, std=0.6821, min=-2.1069, max=2.0643
 - After clipping (round 3): mu=-0.0204, std=0.6811, min=-2.0666, max=2.0257
 - After clipping (round 4): mu=-0.0204, std=0.6811, min=-2.0638, max=2.0231
 - After clipping (round 5): mu=-0.0204, std=0.6811, min=-2.0636, max=2.0229
 - Random Projection: mu=0.0000, std=0.0305
[Layer 6]
 - Before clipping: mu=-0.0451, std=0.9620, min=-28.1231, max=7.5400
 - After clipping (round 1): mu=-0.0262, std=0.7049, min=-2.9312, max=2.8410
 - After clipping (round 2): mu=-0.0252, std=0.6896, min=-2.1409, max=2.0885
 - After clipping (round 3): mu=-0.0251, std=0.6884, min=-2.0941, max=2.0437
 - After clipping (round 4): mu=-0.0251, std=0.6883, min=-2.0903, max=2.0401
 - After clipping (round 5): mu=-0.0251, std=0.6883, min=-2.0899, max=2.0398
 - Random Projection: mu=0.0000, std=0.0308
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9769, min=-29.7051, max=6.6667
 - After clipping (round 1): mu=-0.0201, std=0.6714, min=-2.9716, max=2.8900
 - After clipping (round 2): mu=-0.0189, std=0.6512, min=-2.0343, max=1.9940
 - After clipping (round 3): mu=-0.0188, std=0.6492, min=-1.9725, max=1.9347
 - After clipping (round 4): mu=-0.0188, std=0.6490, min=-1.9665, max=1.9289
 - After clipping (round 5): mu=-0.0188, std=0.6490, min=-1.9659, max=1.9283
 - Random Projection: mu=0.0000, std=0.0290
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9937, min=-31.0372, max=6.6980
 - After clipping (round 1): mu=-0.0217, std=0.6391, min=-3.0243, max=2.9379
 - After clipping (round 2): mu=-0.0198, std=0.6140, min=-1.9390, max=1.8956
 - After clipping (round 3): mu=-0.0196, std=0.6112, min=-1.8617, max=1.8221
 - After clipping (round 4): mu=-0.0196, std=0.6109, min=-1.8533, max=1.8141
 - After clipping (round 5): mu=-0.0195, std=0.6109, min=-1.8523, max=1.8132
 - Random Projection: mu=0.0000, std=0.0273
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9884, min=-30.6983, max=6.1347
 - After clipping (round 1): mu=-0.0212, std=0.6020, min=-3.0082, max=2.9225
 - After clipping (round 2): mu=-0.0192, std=0.5737, min=-1.8273, max=1.7849
 - After clipping (round 3): mu=-0.0190, std=0.5704, min=-1.7403, max=1.7018
 - After clipping (round 4): mu=-0.0190, std=0.5700, min=-1.7302, max=1.6922
 - After clipping (round 5): mu=-0.0190, std=0.5700, min=-1.7290, max=1.6911
 - Random Projection: mu=0.0000, std=0.0255
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9946, min=-30.9444, max=6.3929
 - After clipping (round 1): mu=-0.0144, std=0.5715, min=-3.0202, max=2.9473
 - After clipping (round 2): mu=-0.0126, std=0.5400, min=-1.7288, max=1.7000
 - After clipping (round 3): mu=-0.0123, std=0.5364, min=-1.6327, max=1.6075
 - After clipping (round 4): mu=-0.0123, std=0.5359, min=-1.6215, max=1.5968
 - After clipping (round 5): mu=-0.0123, std=0.5359, min=-1.6201, max=1.5955
 - Random Projection: mu=0.0000, std=0.0240
[Layer 11]
 - Before clipping: mu=-0.0338, std=0.9534, min=-29.3560, max=6.2775
 - After clipping (round 1): mu=-0.0129, std=0.5574, min=-2.8941, max=2.8264
 - After clipping (round 2): mu=-0.0113, std=0.5281, min=-1.6849, max=1.6592
 - After clipping (round 3): mu=-0.0111, std=0.5246, min=-1.5954, max=1.5729
 - After clipping (round 4): mu=-0.0110, std=0.5242, min=-1.5849, max=1.5628
 - After clipping (round 5): mu=-0.0110, std=0.5241, min=-1.5836, max=1.5615
 - Random Projection: mu=0.0000, std=0.0234
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9699, min=-29.9968, max=6.1657
 - After clipping (round 1): mu=-0.0224, std=0.5652, min=-2.9534, max=2.8662
 - After clipping (round 2): mu=-0.0208, std=0.5358, min=-1.7180, max=1.6732
 - After clipping (round 3): mu=-0.0206, std=0.5322, min=-1.6281, max=1.5865
 - After clipping (round 4): mu=-0.0205, std=0.5317, min=-1.6172, max=1.5761
 - After clipping (round 5): mu=-0.0205, std=0.5317, min=-1.6158, max=1.5747
 - Random Projection: mu=0.0000, std=0.0238
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9762, min=-30.2620, max=5.8663
 - After clipping (round 1): mu=-0.0231, std=0.5815, min=-2.9724, max=2.8847
 - After clipping (round 2): mu=-0.0222, std=0.5578, min=-1.7675, max=1.7212
 - After clipping (round 3): mu=-0.0221, std=0.5552, min=-1.6956, max=1.6511
 - After clipping (round 4): mu=-0.0221, std=0.5549, min=-1.6877, max=1.6436
 - After clipping (round 5): mu=-0.0221, std=0.5549, min=-1.6868, max=1.6427
 - Random Projection: mu=0.0000, std=0.0248
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9819, min=-30.5370, max=5.4380
 - After clipping (round 1): mu=-0.0219, std=0.5819, min=-2.9885, max=2.9031
 - After clipping (round 2): mu=-0.0215, std=0.5619, min=-1.7677, max=1.7239
 - After clipping (round 3): mu=-0.0214, std=0.5599, min=-1.7071, max=1.6641
 - After clipping (round 4): mu=-0.0214, std=0.5597, min=-1.7012, max=1.6583
 - After clipping (round 5): mu=-0.0214, std=0.5597, min=-1.7006, max=1.6577
 - Random Projection: mu=0.0000, std=0.0250
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9944, min=-28.1030, max=5.8484
 - After clipping (round 1): mu=-0.0160, std=0.5870, min=-3.0250, max=2.9411
 - After clipping (round 2): mu=-0.0147, std=0.5640, min=-1.7769, max=1.7449
 - After clipping (round 3): mu=-0.0146, std=0.5618, min=-1.7068, max=1.6773
 - After clipping (round 4): mu=-0.0146, std=0.5616, min=-1.7002, max=1.6709
 - After clipping (round 5): mu=-0.0146, std=0.5616, min=-1.6995, max=1.6703
 - Random Projection: mu=0.0000, std=0.0251
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9994, min=-31.5322, max=5.9764
 - After clipping (round 1): mu=-0.0044, std=0.5815, min=-3.0310, max=2.9651
 - After clipping (round 2): mu=-0.0031, std=0.5589, min=-1.7490, max=1.7402
 - After clipping (round 3): mu=-0.0030, std=0.5567, min=-1.6797, max=1.6734
 - After clipping (round 4): mu=-0.0030, std=0.5565, min=-1.6733, max=1.6672
 - After clipping (round 5): mu=-0.0030, std=0.5565, min=-1.6726, max=1.6666
 - Random Projection: mu=0.0000, std=0.0249
[Layer 17]
 - Before clipping: mu=-0.0315, std=0.9752, min=-30.3693, max=6.0622
 - After clipping (round 1): mu=-0.0036, std=0.5688, min=-2.9573, max=2.8942
 - After clipping (round 2): mu=-0.0027, std=0.5467, min=-1.7100, max=1.7028
 - After clipping (round 3): mu=-0.0026, std=0.5446, min=-1.6426, max=1.6373
 - After clipping (round 4): mu=-0.0026, std=0.5444, min=-1.6365, max=1.6312
 - After clipping (round 5): mu=-0.0026, std=0.5444, min=-1.6359, max=1.6306
 - Random Projection: mu=0.0000, std=0.0243
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9731, min=-30.4587, max=5.6553
 - After clipping (round 1): mu=-0.0035, std=0.5723, min=-2.9499, max=2.8887
 - After clipping (round 2): mu=-0.0031, std=0.5497, min=-1.7203, max=1.7134
 - After clipping (round 3): mu=-0.0031, std=0.5476, min=-1.6523, max=1.6461
 - After clipping (round 4): mu=-0.0031, std=0.5474, min=-1.6460, max=1.6397
 - After clipping (round 5): mu=-0.0031, std=0.5474, min=-1.6453, max=1.6391
 - Random Projection: mu=0.0000, std=0.0245
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9600, min=-29.4582, max=5.3573
 - After clipping (round 1): mu=-0.0034, std=0.5625, min=-2.9095, max=2.8503
 - After clipping (round 2): mu=-0.0032, std=0.5394, min=-1.6908, max=1.6839
 - After clipping (round 3): mu=-0.0032, std=0.5372, min=-1.6213, max=1.6149
 - After clipping (round 4): mu=-0.0032, std=0.5370, min=-1.6149, max=1.6085
 - After clipping (round 5): mu=-0.0032, std=0.5370, min=-1.6143, max=1.6078
 - Random Projection: mu=0.0000, std=0.0240
[Layer 20]
 - Before clipping: mu=-0.0286, std=0.9449, min=-28.9237, max=5.2983
 - After clipping (round 1): mu=-0.0038, std=0.5584, min=-2.8632, max=2.8059
 - After clipping (round 2): mu=-0.0039, std=0.5347, min=-1.6789, max=1.6713
 - After clipping (round 3): mu=-0.0039, std=0.5325, min=-1.6079, max=1.6002
 - After clipping (round 4): mu=-0.0039, std=0.5323, min=-1.6015, max=1.5937
 - After clipping (round 5): mu=-0.0039, std=0.5323, min=-1.6009, max=1.5931
 - Random Projection: mu=0.0000, std=0.0238
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9890, min=-31.2386, max=5.2492
 - After clipping (round 1): mu=-0.0074, std=0.5585, min=-3.0002, max=2.9338
 - After clipping (round 2): mu=-0.0075, std=0.5316, min=-1.6829, max=1.6681
 - After clipping (round 3): mu=-0.0076, std=0.5292, min=-1.6025, max=1.5874
 - After clipping (round 4): mu=-0.0076, std=0.5290, min=-1.5952, max=1.5800
 - After clipping (round 5): mu=-0.0076, std=0.5289, min=-1.5945, max=1.5793
 - Random Projection: mu=0.0000, std=0.0237
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0063, min=-32.0908, max=5.1869
 - After clipping (round 1): mu=-0.0151, std=0.5299, min=-3.0602, max=2.9774
 - After clipping (round 2): mu=-0.0151, std=0.5012, min=-1.6047, max=1.5745
 - After clipping (round 3): mu=-0.0152, std=0.4986, min=-1.5186, max=1.4884
 - After clipping (round 4): mu=-0.0152, std=0.4983, min=-1.5109, max=1.4805
 - After clipping (round 5): mu=-0.0152, std=0.4983, min=-1.5101, max=1.4797
 - Random Projection: mu=0.0000, std=0.0223
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0097, min=-32.3982, max=5.1826
 - After clipping (round 1): mu=-0.0049, std=0.5118, min=-3.0601, max=2.9979
 - After clipping (round 2): mu=-0.0048, std=0.4822, min=-1.5405, max=1.5306
 - After clipping (round 3): mu=-0.0049, std=0.4794, min=-1.4514, max=1.4419
 - After clipping (round 4): mu=-0.0049, std=0.4791, min=-1.4430, max=1.4332
 - After clipping (round 5): mu=-0.0049, std=0.4790, min=-1.4421, max=1.4323
 - Random Projection: mu=0.0000, std=0.0214
Random projections initialized.
[# API Calls 50] loss: 0.3734. Current perf: 0.9062. Best perf so far: 0.9062
[# API Calls 100] loss: 0.3629. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4595. Dev perf: 0.7812. Best dev perf: 0.7812
********* Done *********
[# API Calls 150] loss: 0.3254. Current perf: 0.875. Best perf so far: 0.9062
[# API Calls 200] loss: 0.3204. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4433. Dev perf: 0.7188. Best dev perf: 0.7812
********* Done *********
[# API Calls 250] loss: 0.3074. Current perf: 0.875. Best perf so far: 0.9375
[# API Calls 300] loss: 0.2983. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4281. Dev perf: 0.75. Best dev perf: 0.7812
********* Done *********
[# API Calls 350] loss: 0.2929. Current perf: 0.875. Best perf so far: 0.9375
[# API Calls 400] loss: 0.2897. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4227. Dev perf: 0.7812. Best dev perf: 0.7812
********* Done *********
[# API Calls 450] loss: 0.2864. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 500] loss: 0.287. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4172. Dev perf: 0.7812. Best dev perf: 0.7812
********* Done *********
[# API Calls 550] loss: 0.2884. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 600] loss: 0.2729. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4005. Dev perf: 0.7812. Best dev perf: 0.7812
********* Done *********
[# API Calls 650] loss: 0.2685. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 700] loss: 0.2642. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3955. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 750] loss: 0.2548. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 800] loss: 0.2503. Current perf: 0.9375. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3981. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 850] loss: 0.2447. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 900] loss: 0.2393. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3827. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 950] loss: 0.2333. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 1000] loss: 0.245. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3858. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 1050] loss: 0.2289. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1100] loss: 0.2313. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3782. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 1150] loss: 0.2082. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1200] loss: 0.2034. Current perf: 0.9688. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3711. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 1250] loss: 0.2048. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1300] loss: 0.2033. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3656. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 1350] loss: 0.198. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1400] loss: 0.198. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3615. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 1450] loss: 0.1939. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1500] loss: 0.199. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.3523. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 1550] loss: 0.1906. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 1600] loss: 0.1947. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.338. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 1650] loss: 0.1905. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 1700] loss: 0.1936. Current perf: 0.9375. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3244. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 1750] loss: 0.1811. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1800] loss: 0.1836. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3171. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 1850] loss: 0.1786. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1900] loss: 0.1794. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3184. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 1950] loss: 0.1777. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2000] loss: 0.1754. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3255. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 2050] loss: 0.1644. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 2100] loss: 0.168. Current perf: 0.9375. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2959. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 2150] loss: 0.1583. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2200] loss: 0.151. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.298. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 2250] loss: 0.1457. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2300] loss: 0.1437. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3024. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 2350] loss: 0.1431. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2400] loss: 0.1404. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2909. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 2450] loss: 0.1461. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2500] loss: 0.1412. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2911. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 2550] loss: 0.1328. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2600] loss: 0.1361. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2912. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 2650] loss: 0.1253. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2700] loss: 0.1258. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2817. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 2750] loss: 0.1199. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2800] loss: 0.1196. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2825. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 2850] loss: 0.1174. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 2900] loss: 0.1193. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.282. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 2950] loss: 0.1092. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3000] loss: 0.1089. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.271. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 3050] loss: 0.1026. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3100] loss: 0.1039. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.264. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 3150] loss: 0.1016. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3200] loss: 0.097. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2483. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 3250] loss: 0.0914. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3300] loss: 0.09. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2523. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 3350] loss: 0.088. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3400] loss: 0.0893. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2702. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 3450] loss: 0.0875. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3500] loss: 0.0902. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3065. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 3550] loss: 0.0866. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3600] loss: 0.0814. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3255. Dev perf: 0.8438. Best dev perf: 0.9375
********* Done *********
[# API Calls 3650] loss: 0.0769. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3700] loss: 0.0775. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3105. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 3750] loss: 0.076. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.0738. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2972. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 3850] loss: 0.0721. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3900] loss: 0.0741. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2879. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 3950] loss: 0.0734. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4000] loss: 0.0692. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2588. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 4050] loss: 0.0668. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4100] loss: 0.0645. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2358. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 4150] loss: 0.0583. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.052. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2346. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 4250] loss: 0.0489. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0491. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2433. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 4350] loss: 0.0486. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.0465. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.266. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 4450] loss: 0.0561. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4500] loss: 0.0501. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2694. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 4550] loss: 0.0425. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.042. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2605. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 4650] loss: 0.0398. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.0369. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2684. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 4750] loss: 0.0349. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.0361. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2607. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 4850] loss: 0.0327. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.0324. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.271. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 4950] loss: 0.0292. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.0259. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3156. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 5050] loss: 0.0235. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.0211. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3101. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5150] loss: 0.021. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0195. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2921. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5250] loss: 0.0194. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0188. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2894. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5350] loss: 0.0323. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.0207. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3149. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 5450] loss: 0.0213. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.021. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3067. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 5550] loss: 0.02. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0188. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2747. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 5650] loss: 0.0179. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0168. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2706. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 5750] loss: 0.0148. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0146. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2586. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 5850] loss: 0.0145. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0165. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2677. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 5950] loss: 0.0162. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0161. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2731. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 6050] loss: 0.014. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0126. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2866. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 6150] loss: 0.0112. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0111. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2957. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 6250] loss: 0.0107. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0094. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3871. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 6350] loss: 0.0094. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.0098. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3317. Dev perf: 0.875. Best dev perf: 0.9375
********* Done *********
[# API Calls 6450] loss: 0.0093. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0071. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2778. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 6550] loss: 0.0073. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0073. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2776. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 6650] loss: 0.0058. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0045. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2991. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 6750] loss: 0.0052. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0511. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.558. Dev perf: 0.8438. Best dev perf: 0.9375
********* Done *********
[# API Calls 6850] loss: 0.0048. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.004. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4014. Dev perf: 0.8125. Best dev perf: 0.9375
********* Done *********
[# API Calls 6950] loss: 0.0042. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0037. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2948. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 7050] loss: 0.0031. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.003. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2912. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 7150] loss: 0.0029. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0026. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2978. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 7250] loss: 0.0028. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0028. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.234. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 7350] loss: 0.0035. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.003. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3566. Dev perf: 0.8438. Best dev perf: 0.9375
********* Done *********
[# API Calls 7450] loss: 0.003. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0023. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3182. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 7550] loss: 0.0021. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0017. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3371. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 7650] loss: 0.0015. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 26.631853779157 (mins)
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset sst-2 (/home/qingyang/.cache/huggingface/datasets/sst-2/default/0.0.0/26b70199511695eac9d65590972c9d0d4ee7de5956b8325211c3b38e8a26dd34)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5341.36ex/s]
Example in train set:
{'text': 'one never overwhelms the other ', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . one never overwhelms the other  . It was <mask> .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 22.84ba/s]
Using custom data configuration default
Reusing dataset sst-2 (/home/qingyang/.cache/huggingface/datasets/sst-2/default/0.0.0/26b70199511695eac9d65590972c9d0d4ee7de5956b8325211c3b38e8a26dd34)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 5576.14ex/s]
Example in dev set:
{'text': "really is a shame that more wo n't get an opportunity to embrace small , sweet ` evelyn . ' ", 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . really is a shame that more wo n't get an opportunity to embrace small , sweet ` evelyn . '  . It was <mask> .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 50.02ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 62       | 12338  |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 78       | 12338  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0084, std=0.8518, min=-15.9971, max=17.4830
 - After clipping (round 1): mu=-0.0067, std=0.7182, min=-2.5637, max=2.5469
 - After clipping (round 2): mu=-0.0061, std=0.7116, min=-2.1612, max=2.1478
 - After clipping (round 3): mu=-0.0061, std=0.7111, min=-2.1408, max=2.1286
 - After clipping (round 4): mu=-0.0061, std=0.7111, min=-2.1395, max=2.1274
 - After clipping (round 5): mu=-0.0061, std=0.7111, min=-2.1394, max=2.1273
 - Random Projection: mu=0.0000, std=0.0318
[Layer 2]
 - Before clipping: mu=-0.0297, std=0.8786, min=-20.0443, max=15.5641
 - After clipping (round 1): mu=-0.0190, std=0.6907, min=-2.6655, max=2.6062
 - After clipping (round 2): mu=-0.0185, std=0.6796, min=-2.0910, max=2.0530
 - After clipping (round 3): mu=-0.0185, std=0.6788, min=-2.0573, max=2.0203
 - After clipping (round 4): mu=-0.0185, std=0.6787, min=-2.0549, max=2.0178
 - After clipping (round 5): mu=-0.0185, std=0.6787, min=-2.0547, max=2.0177
 - Random Projection: mu=0.0000, std=0.0304
[Layer 3]
 - Before clipping: mu=-0.0321, std=0.9166, min=-20.9880, max=13.7778
 - After clipping (round 1): mu=-0.0189, std=0.6936, min=-2.7821, max=2.7178
 - After clipping (round 2): mu=-0.0185, std=0.6807, min=-2.0998, max=2.0621
 - After clipping (round 3): mu=-0.0185, std=0.6797, min=-2.0607, max=2.0236
 - After clipping (round 4): mu=-0.0185, std=0.6797, min=-2.0578, max=2.0207
 - After clipping (round 5): mu=-0.0185, std=0.6797, min=-2.0576, max=2.0205
 - Random Projection: mu=0.0000, std=0.0304
[Layer 4]
 - Before clipping: mu=-0.0355, std=0.9257, min=-25.2709, max=10.8866
 - After clipping (round 1): mu=-0.0203, std=0.7107, min=-2.8124, max=2.7415
 - After clipping (round 2): mu=-0.0199, std=0.6993, min=-2.1523, max=2.1117
 - After clipping (round 3): mu=-0.0198, std=0.6986, min=-2.1179, max=2.0781
 - After clipping (round 4): mu=-0.0198, std=0.6985, min=-2.1155, max=2.0758
 - After clipping (round 5): mu=-0.0198, std=0.6985, min=-2.1154, max=2.0757
 - Random Projection: mu=0.0000, std=0.0312
[Layer 5]
 - Before clipping: mu=-0.0391, std=0.9445, min=-26.4016, max=7.9834
 - After clipping (round 1): mu=-0.0213, std=0.6953, min=-2.8726, max=2.7944
 - After clipping (round 2): mu=-0.0205, std=0.6823, min=-2.1072, max=2.0647
 - After clipping (round 3): mu=-0.0204, std=0.6814, min=-2.0674, max=2.0265
 - After clipping (round 4): mu=-0.0204, std=0.6814, min=-2.0647, max=2.0238
 - After clipping (round 5): mu=-0.0204, std=0.6814, min=-2.0645, max=2.0237
 - Random Projection: mu=0.0000, std=0.0305
[Layer 6]
 - Before clipping: mu=-0.0451, std=0.9621, min=-28.1281, max=5.5935
 - After clipping (round 1): mu=-0.0263, std=0.7050, min=-2.9313, max=2.8410
 - After clipping (round 2): mu=-0.0255, std=0.6903, min=-2.1412, max=2.0886
 - After clipping (round 3): mu=-0.0254, std=0.6891, min=-2.0963, max=2.0453
 - After clipping (round 4): mu=-0.0254, std=0.6890, min=-2.0927, max=2.0419
 - After clipping (round 5): mu=-0.0254, std=0.6890, min=-2.0924, max=2.0416
 - Random Projection: mu=0.0000, std=0.0308
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9770, min=-29.6799, max=5.0286
 - After clipping (round 1): mu=-0.0201, std=0.6662, min=-2.9717, max=2.8901
 - After clipping (round 2): mu=-0.0191, std=0.6461, min=-2.0189, max=1.9786
 - After clipping (round 3): mu=-0.0190, std=0.6442, min=-1.9575, max=1.9193
 - After clipping (round 4): mu=-0.0190, std=0.6440, min=-1.9516, max=1.9136
 - After clipping (round 5): mu=-0.0190, std=0.6440, min=-1.9510, max=1.9130
 - Random Projection: mu=0.0000, std=0.0288
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9942, min=-30.8998, max=6.4138
 - After clipping (round 1): mu=-0.0218, std=0.6335, min=-3.0259, max=2.9395
 - After clipping (round 2): mu=-0.0200, std=0.6092, min=-1.9225, max=1.8788
 - After clipping (round 3): mu=-0.0198, std=0.6065, min=-1.8475, max=1.8075
 - After clipping (round 4): mu=-0.0198, std=0.6063, min=-1.8394, max=1.7998
 - After clipping (round 5): mu=-0.0198, std=0.6062, min=-1.8386, max=1.7990
 - Random Projection: mu=0.0000, std=0.0271
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9885, min=-30.6660, max=5.6550
 - After clipping (round 1): mu=-0.0216, std=0.6078, min=-3.0085, max=2.9226
 - After clipping (round 2): mu=-0.0196, std=0.5806, min=-1.8449, max=1.8018
 - After clipping (round 3): mu=-0.0194, std=0.5775, min=-1.7613, max=1.7221
 - After clipping (round 4): mu=-0.0194, std=0.5771, min=-1.7519, max=1.7131
 - After clipping (round 5): mu=-0.0194, std=0.5771, min=-1.7508, max=1.7120
 - Random Projection: mu=0.0000, std=0.0258
[Layer 10]
 - Before clipping: mu=-0.0365, std=0.9945, min=-30.8108, max=6.2774
 - After clipping (round 1): mu=-0.0147, std=0.5796, min=-3.0201, max=2.9472
 - After clipping (round 2): mu=-0.0130, std=0.5495, min=-1.7536, max=1.7241
 - After clipping (round 3): mu=-0.0128, std=0.5461, min=-1.6616, max=1.6355
 - After clipping (round 4): mu=-0.0127, std=0.5457, min=-1.6510, max=1.6255
 - After clipping (round 5): mu=-0.0127, std=0.5456, min=-1.6497, max=1.6242
 - Random Projection: mu=0.0000, std=0.0244
[Layer 11]
 - Before clipping: mu=-0.0339, std=0.9541, min=-29.0578, max=6.0695
 - After clipping (round 1): mu=-0.0132, std=0.5669, min=-2.8961, max=2.8283
 - After clipping (round 2): mu=-0.0116, std=0.5387, min=-1.7140, max=1.6876
 - After clipping (round 3): mu=-0.0114, std=0.5354, min=-1.6276, max=1.6043
 - After clipping (round 4): mu=-0.0114, std=0.5350, min=-1.6177, max=1.5948
 - After clipping (round 5): mu=-0.0114, std=0.5350, min=-1.6165, max=1.5937
 - Random Projection: mu=0.0000, std=0.0239
[Layer 12]
 - Before clipping: mu=-0.0436, std=0.9703, min=-29.6851, max=6.0415
 - After clipping (round 1): mu=-0.0227, std=0.5762, min=-2.9546, max=2.8674
 - After clipping (round 2): mu=-0.0211, std=0.5479, min=-1.7514, max=1.7061
 - After clipping (round 3): mu=-0.0209, std=0.5446, min=-1.6649, max=1.6226
 - After clipping (round 4): mu=-0.0209, std=0.5442, min=-1.6548, max=1.6130
 - After clipping (round 5): mu=-0.0209, std=0.5442, min=-1.6536, max=1.6118
 - Random Projection: mu=0.0000, std=0.0243
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9763, min=-29.8963, max=5.8168
 - After clipping (round 1): mu=-0.0234, std=0.5913, min=-2.9729, max=2.8851
 - After clipping (round 2): mu=-0.0226, std=0.5684, min=-1.7971, max=1.7504
 - After clipping (round 3): mu=-0.0224, std=0.5660, min=-1.7277, max=1.6826
 - After clipping (round 4): mu=-0.0224, std=0.5657, min=-1.7204, max=1.6755
 - After clipping (round 5): mu=-0.0224, std=0.5657, min=-1.7196, max=1.6748
 - Random Projection: mu=0.0000, std=0.0253
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9821, min=-30.1929, max=5.4398
 - After clipping (round 1): mu=-0.0221, std=0.5910, min=-2.9889, max=2.9034
 - After clipping (round 2): mu=-0.0218, std=0.5714, min=-1.7950, max=1.7508
 - After clipping (round 3): mu=-0.0217, std=0.5696, min=-1.7361, max=1.6925
 - After clipping (round 4): mu=-0.0217, std=0.5694, min=-1.7305, max=1.6871
 - After clipping (round 5): mu=-0.0217, std=0.5694, min=-1.7300, max=1.6865
 - Random Projection: mu=0.0000, std=0.0255
[Layer 15]
 - Before clipping: mu=-0.0420, std=0.9943, min=-27.9786, max=5.7144
 - After clipping (round 1): mu=-0.0164, std=0.5976, min=-3.0249, max=2.9409
 - After clipping (round 2): mu=-0.0150, std=0.5755, min=-1.8093, max=1.7765
 - After clipping (round 3): mu=-0.0149, std=0.5735, min=-1.7417, max=1.7116
 - After clipping (round 4): mu=-0.0149, std=0.5734, min=-1.7356, max=1.7057
 - After clipping (round 5): mu=-0.0149, std=0.5733, min=-1.7350, max=1.7051
 - Random Projection: mu=0.0000, std=0.0256
[Layer 16]
 - Before clipping: mu=-0.0330, std=0.9992, min=-31.5291, max=5.9672
 - After clipping (round 1): mu=-0.0048, std=0.5919, min=-3.0306, max=2.9647
 - After clipping (round 2): mu=-0.0034, std=0.5703, min=-1.7804, max=1.7708
 - After clipping (round 3): mu=-0.0033, std=0.5684, min=-1.7142, max=1.7075
 - After clipping (round 4): mu=-0.0033, std=0.5682, min=-1.7085, max=1.7019
 - After clipping (round 5): mu=-0.0033, std=0.5682, min=-1.7079, max=1.7014
 - Random Projection: mu=0.0000, std=0.0254
[Layer 17]
 - Before clipping: mu=-0.0316, std=0.9756, min=-30.3679, max=5.8908
 - After clipping (round 1): mu=-0.0039, std=0.5796, min=-2.9585, max=2.8954
 - After clipping (round 2): mu=-0.0029, std=0.5586, min=-1.7427, max=1.7349
 - After clipping (round 3): mu=-0.0028, std=0.5568, min=-1.6788, max=1.6731
 - After clipping (round 4): mu=-0.0028, std=0.5566, min=-1.6732, max=1.6676
 - After clipping (round 5): mu=-0.0028, std=0.5566, min=-1.6727, max=1.6670
 - Random Projection: mu=0.0000, std=0.0249
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9737, min=-30.4483, max=5.5901
 - After clipping (round 1): mu=-0.0038, std=0.5849, min=-2.9517, max=2.8905
 - After clipping (round 2): mu=-0.0033, std=0.5639, min=-1.7585, max=1.7509
 - After clipping (round 3): mu=-0.0033, std=0.5621, min=-1.6951, max=1.6884
 - After clipping (round 4): mu=-0.0033, std=0.5619, min=-1.6895, max=1.6828
 - After clipping (round 5): mu=-0.0033, std=0.5619, min=-1.6890, max=1.6823
 - Random Projection: mu=0.0000, std=0.0251
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9607, min=-29.4914, max=5.4114
 - After clipping (round 1): mu=-0.0037, std=0.5720, min=-2.9119, max=2.8526
 - After clipping (round 2): mu=-0.0033, std=0.5504, min=-1.7198, max=1.7124
 - After clipping (round 3): mu=-0.0033, std=0.5485, min=-1.6545, max=1.6479
 - After clipping (round 4): mu=-0.0033, std=0.5483, min=-1.6487, max=1.6421
 - After clipping (round 5): mu=-0.0033, std=0.5483, min=-1.6482, max=1.6416
 - Random Projection: mu=0.0000, std=0.0245
[Layer 20]
 - Before clipping: mu=-0.0286, std=0.9456, min=-28.9117, max=5.3740
 - After clipping (round 1): mu=-0.0040, std=0.5648, min=-2.8655, max=2.8082
 - After clipping (round 2): mu=-0.0038, std=0.5425, min=-1.6985, max=1.6906
 - After clipping (round 3): mu=-0.0038, std=0.5405, min=-1.6312, max=1.6236
 - After clipping (round 4): mu=-0.0038, std=0.5403, min=-1.6253, max=1.6177
 - After clipping (round 5): mu=-0.0038, std=0.5403, min=-1.6248, max=1.6171
 - Random Projection: mu=0.0000, std=0.0242
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9891, min=-31.2382, max=5.4018
 - After clipping (round 1): mu=-0.0075, std=0.5643, min=-3.0006, max=2.9342
 - After clipping (round 2): mu=-0.0074, std=0.5389, min=-1.7003, max=1.6853
 - After clipping (round 3): mu=-0.0075, std=0.5367, min=-1.6242, max=1.6093
 - After clipping (round 4): mu=-0.0075, std=0.5365, min=-1.6175, max=1.6026
 - After clipping (round 5): mu=-0.0075, std=0.5364, min=-1.6169, max=1.6019
 - Random Projection: mu=0.0000, std=0.0240
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0061, min=-32.0882, max=5.2176
 - After clipping (round 1): mu=-0.0153, std=0.5376, min=-3.0597, max=2.9769
 - After clipping (round 2): mu=-0.0151, std=0.5104, min=-1.6282, max=1.5977
 - After clipping (round 3): mu=-0.0151, std=0.5081, min=-1.5463, max=1.5162
 - After clipping (round 4): mu=-0.0151, std=0.5078, min=-1.5393, max=1.5091
 - After clipping (round 5): mu=-0.0151, std=0.5078, min=-1.5387, max=1.5084
 - Random Projection: mu=0.0000, std=0.0227
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0093, min=-32.3869, max=5.2770
 - After clipping (round 1): mu=-0.0051, std=0.5252, min=-3.0588, max=2.9967
 - After clipping (round 2): mu=-0.0049, std=0.4972, min=-1.5809, max=1.5706
 - After clipping (round 3): mu=-0.0050, std=0.4946, min=-1.4965, max=1.4866
 - After clipping (round 4): mu=-0.0050, std=0.4944, min=-1.4889, max=1.4789
 - After clipping (round 5): mu=-0.0050, std=0.4944, min=-1.4882, max=1.4781
 - Random Projection: mu=0.0000, std=0.0221
Random projections initialized.
[# API Calls 50] loss: 0.3315. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 100] loss: 0.3069. Current perf: 0.9375. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4568. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 150] loss: 0.2758. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 200] loss: 0.2709. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4358. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 250] loss: 0.2521. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 300] loss: 0.2316. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4199. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 350] loss: 0.223. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 400] loss: 0.2152. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4018. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 450] loss: 0.2123. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 500] loss: 0.2145. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4007. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 550] loss: 0.2124. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 600] loss: 0.2019. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4031. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 650] loss: 0.2033. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 700] loss: 0.1811. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4062. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 750] loss: 0.1837. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 800] loss: 0.1681. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4336. Dev perf: 0.7188. Best dev perf: 0.8438
********* Done *********
[# API Calls 850] loss: 0.1617. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 900] loss: 0.1607. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4127. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 950] loss: 0.1548. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1000] loss: 0.1738. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3912. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 1050] loss: 0.1631. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1100] loss: 0.1615. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3895. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 1150] loss: 0.1357. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1200] loss: 0.1436. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3672. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 1250] loss: 0.1303. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1300] loss: 0.1212. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3426. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 1350] loss: 0.1152. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1400] loss: 0.1172. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3417. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 1450] loss: 0.1176. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1500] loss: 0.1164. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3267. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 1550] loss: 0.1174. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1600] loss: 0.1165. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3495. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 1650] loss: 0.1012. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1700] loss: 0.1019. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3467. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 1750] loss: 0.0929. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1800] loss: 0.0957. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3289. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 1850] loss: 0.0855. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 1900] loss: 0.0835. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3363. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 1950] loss: 0.0788. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2000] loss: 0.0935. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3936. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 2050] loss: 0.0823. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2100] loss: 0.0768. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3461. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 2150] loss: 0.0675. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2200] loss: 0.0604. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3222. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2250] loss: 0.0551. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2300] loss: 0.0535. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3129. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 2350] loss: 0.0511. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2400] loss: 0.0491. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3032. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2450] loss: 0.0547. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2500] loss: 0.0538. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3276. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 2550] loss: 0.0556. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2600] loss: 0.0477. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2884. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2650] loss: 0.044. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2700] loss: 0.0398. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3011. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2750] loss: 0.033. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2800] loss: 0.0307. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2777. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2850] loss: 0.0288. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 2900] loss: 0.0276. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2779. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 2950] loss: 0.0419. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3000] loss: 0.0266. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2826. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3050] loss: 0.0287. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3100] loss: 0.0342. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2527. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3150] loss: 0.0329. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3200] loss: 0.0234. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2532. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3250] loss: 0.0202. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3300] loss: 0.0172. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.252. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3350] loss: 0.0166. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3400] loss: 0.0192. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2931. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 3450] loss: 0.0609. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3500] loss: 0.022. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2779. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3550] loss: 0.0143. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3600] loss: 0.0141. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2884. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3650] loss: 0.0117. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3700] loss: 0.0112. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.261. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3750] loss: 0.0099. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.0096. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2752. Dev perf: 0.9062. Best dev perf: 0.9062
********* Done *********
[# API Calls 3850] loss: 0.0105. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3900] loss: 0.0109. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4561. Dev perf: 0.8125. Best dev perf: 0.9062
********* Done *********
[# API Calls 3950] loss: 0.0614. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 4000] loss: 0.0087. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3101. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 4050] loss: 0.0086. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4100] loss: 0.0086. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3491. Dev perf: 0.8438. Best dev perf: 0.9062
********* Done *********
[# API Calls 4150] loss: 0.0074. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.005. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3612. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 4250] loss: 0.0048. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0046. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3723. Dev perf: 0.875. Best dev perf: 0.9062
********* Done *********
[# API Calls 4350] loss: 0.0244. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.004. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.299. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 4450] loss: 0.0038. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4500] loss: 0.0044. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.2573. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 4550] loss: 0.0037. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.0034. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3159. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 4650] loss: 0.0025. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.0026. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3735. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 4750] loss: 0.0021. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.002. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3945. Dev perf: 0.9062. Best dev perf: 0.9375
********* Done *********
[# API Calls 4850] loss: 0.0032. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.0029. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3093. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 4950] loss: 0.0019. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.002. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4914. Dev perf: 0.8438. Best dev perf: 0.9375
********* Done *********
[# API Calls 5050] loss: 0.0024. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.0018. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3107. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 5150] loss: 0.0013. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0014. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3282. Dev perf: 0.9375. Best dev perf: 0.9375
********* Done *********
[# API Calls 5250] loss: 0.001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0013. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.217. Dev perf: 0.9688. Best dev perf: 0.9688
********* Done *********
[# API Calls 5350] loss: 0.2181. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 5400] loss: 0.0009. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4494. Dev perf: 0.8438. Best dev perf: 0.9688
********* Done *********
[# API Calls 5450] loss: 0.0006. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0005. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3037. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 5550] loss: 0.0005. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.0004. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.254. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 5650] loss: 0.0005. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0003. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3019. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 5750] loss: 0.0003. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0006. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5161. Dev perf: 0.875. Best dev perf: 0.9688
********* Done *********
[# API Calls 5850] loss: 0.0003. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0003. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4531. Dev perf: 0.875. Best dev perf: 0.9688
********* Done *********
[# API Calls 5950] loss: 0.0003. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0003. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.61. Dev perf: 0.8438. Best dev perf: 0.9688
********* Done *********
[# API Calls 6050] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4481. Dev perf: 0.9062. Best dev perf: 0.9688
********* Done *********
[# API Calls 6150] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6092. Dev perf: 0.875. Best dev perf: 0.9688
********* Done *********
[# API Calls 6250] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8325. Dev perf: 0.875. Best dev perf: 0.9688
********* Done *********
[# API Calls 6350] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6400] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.582. Dev perf: 0.8438. Best dev perf: 0.9688
********* Done *********
[# API Calls 6450] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6173. Dev perf: 0.8438. Best dev perf: 0.9688
********* Done *********
[# API Calls 6550] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0001. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5539. Dev perf: 0.9062. Best dev perf: 0.9688
********* Done *********
[# API Calls 6650] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6069. Dev perf: 0.9062. Best dev perf: 0.9688
********* Done *********
[# API Calls 6750] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0028. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8317. Dev perf: 0.875. Best dev perf: 0.9688
********* Done *********
[# API Calls 6850] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 6950] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5141. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 7050] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5648. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 7150] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.626. Dev perf: 0.9375. Best dev perf: 0.9688
********* Done *********
[# API Calls 7250] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0043. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.6717. Dev perf: 0.8125. Best dev perf: 0.9688
********* Done *********
[# API Calls 7350] loss: 0.4198. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 1.1363. Dev perf: 0.875. Best dev perf: 0.9688
********* Done *********
[# API Calls 7450] loss: 0.0003. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9454. Dev perf: 0.875. Best dev perf: 0.9688
********* Done *********
[# API Calls 7550] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.9679. Dev perf: 0.9062. Best dev perf: 0.9688
********* Done *********
[# API Calls 7650] loss: 0.0. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 23.08237207333247 (mins)
/data/qingyang/anaconda3/envs/bbt/lib/python3.8/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available
  _warnings.warn('Could not import matplotlib.pyplot, therefore'
Using custom data configuration default
Reusing dataset sst-2 (/home/qingyang/.cache/huggingface/datasets/sst-2/default/0.0.0/26b70199511695eac9d65590972c9d0d4ee7de5956b8325211c3b38e8a26dd34)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 3923.69ex/s]
Example in train set:
{'text': 'is richly detailed , deftly executed and utterly absorbing ', 'labels': 1, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . is richly detailed , deftly executed and utterly absorbing  . It was <mask> .", 'target_text': 'great'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 33.26ba/s]
Using custom data configuration default
Reusing dataset sst-2 (/home/qingyang/.cache/huggingface/datasets/sst-2/default/0.0.0/26b70199511695eac9d65590972c9d0d4ee7de5956b8325211c3b38e8a26dd34)
  0%|          | 0/32 [00:00<?, ?ex/s]100%|██████████| 32/32 [00:00<00:00, 2910.25ex/s]
Example in dev set:
{'text': 'a low-rent retread ', 'labels': 0, 'input_text': "Xro target himself turn Europe worked energy scored * soon ball TV annual 2013 race International'd Market conferenceio o changesig officers inside form published phone co legal executive fightings hope summer officer football property@ book parents costsac manager create age email markets main . a low-rent retread  . It was <mask> .", 'target_text': 'bad'}
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:00<00:00, 47.27ba/s]
Some weights of RobertaForMaskedLM were not initialized from the model checkpoint at roberta-large and are newly initialized: ['lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
# of train data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 67       | 12338  |
+------------------------+------------------------+----------+--------+

# of dev data: 32
Example:
+------------------------+------------------------+----------+--------+
| input_ids              | attention_mask         | mask_pos | labels |
+------------------------+------------------------+----------+--------+
| [0, 1000, 1001, 100... | [1, 1, 1, 1, 1, 1, ... | 62       | 10999  |
+------------------------+------------------------+----------+--------+
[Embedding] mu: -0.018104109913110733 | std: 0.13582643866539001 [RandProj]  mu: 0.0 | std: 0.006074342999950358
Calculating std for random projections...
[Layer 1]
 - Before clipping: mu=-0.0086, std=0.8552, min=-16.0166, max=17.4854
 - After clipping (round 1): mu=-0.0072, std=0.7305, min=-2.5742, max=2.5569
 - After clipping (round 2): mu=-0.0066, std=0.7248, min=-2.1988, max=2.1844
 - After clipping (round 3): mu=-0.0066, std=0.7245, min=-2.1810, max=2.1677
 - After clipping (round 4): mu=-0.0066, std=0.7245, min=-2.1800, max=2.1668
 - After clipping (round 5): mu=-0.0066, std=0.7245, min=-2.1800, max=2.1667
 - Random Projection: mu=0.0000, std=0.0324
[Layer 2]
 - Before clipping: mu=-0.0298, std=0.8789, min=-20.2333, max=15.5270
 - After clipping (round 1): mu=-0.0193, std=0.6986, min=-2.6664, max=2.6068
 - After clipping (round 2): mu=-0.0189, std=0.6886, min=-2.1150, max=2.0764
 - After clipping (round 3): mu=-0.0189, std=0.6879, min=-2.0848, max=2.0470
 - After clipping (round 4): mu=-0.0189, std=0.6879, min=-2.0827, max=2.0449
 - After clipping (round 5): mu=-0.0189, std=0.6879, min=-2.0825, max=2.0447
 - Random Projection: mu=0.0000, std=0.0308
[Layer 3]
 - Before clipping: mu=-0.0322, std=0.9171, min=-20.9912, max=14.1876
 - After clipping (round 1): mu=-0.0190, std=0.6951, min=-2.7834, max=2.7190
 - After clipping (round 2): mu=-0.0188, std=0.6825, min=-2.1045, max=2.0664
 - After clipping (round 3): mu=-0.0188, std=0.6816, min=-2.0662, max=2.0286
 - After clipping (round 4): mu=-0.0188, std=0.6815, min=-2.0635, max=2.0259
 - After clipping (round 5): mu=-0.0188, std=0.6815, min=-2.0633, max=2.0258
 - Random Projection: mu=0.0000, std=0.0305
[Layer 4]
 - Before clipping: mu=-0.0355, std=0.9268, min=-25.2761, max=10.3989
 - After clipping (round 1): mu=-0.0202, std=0.7095, min=-2.8158, max=2.7448
 - After clipping (round 2): mu=-0.0198, std=0.6981, min=-2.1488, max=2.1083
 - After clipping (round 3): mu=-0.0198, std=0.6974, min=-2.1142, max=2.0746
 - After clipping (round 4): mu=-0.0198, std=0.6973, min=-2.1118, max=2.0723
 - After clipping (round 5): mu=-0.0198, std=0.6973, min=-2.1117, max=2.0722
 - Random Projection: mu=0.0000, std=0.0312
[Layer 5]
 - Before clipping: mu=-0.0392, std=0.9453, min=-26.4077, max=8.2229
 - After clipping (round 1): mu=-0.0214, std=0.6977, min=-2.8751, max=2.7968
 - After clipping (round 2): mu=-0.0205, std=0.6845, min=-2.1144, max=2.0716
 - After clipping (round 3): mu=-0.0205, std=0.6836, min=-2.0739, max=2.0328
 - After clipping (round 4): mu=-0.0204, std=0.6835, min=-2.0711, max=2.0302
 - After clipping (round 5): mu=-0.0204, std=0.6835, min=-2.0709, max=2.0300
 - Random Projection: mu=0.0000, std=0.0306
[Layer 6]
 - Before clipping: mu=-0.0452, std=0.9623, min=-28.1186, max=5.8821
 - After clipping (round 1): mu=-0.0263, std=0.7058, min=-2.9320, max=2.8417
 - After clipping (round 2): mu=-0.0253, std=0.6906, min=-2.1436, max=2.0909
 - After clipping (round 3): mu=-0.0252, std=0.6893, min=-2.0970, max=2.0464
 - After clipping (round 4): mu=-0.0252, std=0.6892, min=-2.0932, max=2.0428
 - After clipping (round 5): mu=-0.0252, std=0.6892, min=-2.0929, max=2.0425
 - Random Projection: mu=0.0000, std=0.0308
[Layer 7]
 - Before clipping: mu=-0.0408, std=0.9770, min=-29.6756, max=5.9194
 - After clipping (round 1): mu=-0.0200, std=0.6673, min=-2.9718, max=2.8902
 - After clipping (round 2): mu=-0.0189, std=0.6470, min=-2.0218, max=1.9818
 - After clipping (round 3): mu=-0.0188, std=0.6450, min=-1.9600, max=1.9221
 - After clipping (round 4): mu=-0.0188, std=0.6448, min=-1.9539, max=1.9162
 - After clipping (round 5): mu=-0.0188, std=0.6448, min=-1.9533, max=1.9156
 - Random Projection: mu=0.0000, std=0.0288
[Layer 8]
 - Before clipping: mu=-0.0432, std=0.9940, min=-31.0527, max=6.7146
 - After clipping (round 1): mu=-0.0216, std=0.6341, min=-3.0251, max=2.9387
 - After clipping (round 2): mu=-0.0198, std=0.6083, min=-1.9240, max=1.8808
 - After clipping (round 3): mu=-0.0196, std=0.6054, min=-1.8446, max=1.8050
 - After clipping (round 4): mu=-0.0196, std=0.6050, min=-1.8357, max=1.7965
 - After clipping (round 5): mu=-0.0196, std=0.6050, min=-1.8346, max=1.7955
 - Random Projection: mu=0.0000, std=0.0271
[Layer 9]
 - Before clipping: mu=-0.0429, std=0.9886, min=-30.6745, max=6.5813
 - After clipping (round 1): mu=-0.0211, std=0.5951, min=-3.0087, max=2.9229
 - After clipping (round 2): mu=-0.0191, std=0.5654, min=-1.8065, max=1.7643
 - After clipping (round 3): mu=-0.0189, std=0.5620, min=-1.7155, max=1.6772
 - After clipping (round 4): mu=-0.0189, std=0.5615, min=-1.7048, max=1.6670
 - After clipping (round 5): mu=-0.0189, std=0.5615, min=-1.7035, max=1.6657
 - Random Projection: mu=0.0000, std=0.0251
[Layer 10]
 - Before clipping: mu=-0.0364, std=0.9947, min=-30.8053, max=7.1689
 - After clipping (round 1): mu=-0.0142, std=0.5620, min=-3.0207, max=2.9478
 - After clipping (round 2): mu=-0.0124, std=0.5294, min=-1.7003, max=1.6719
 - After clipping (round 3): mu=-0.0121, std=0.5254, min=-1.6005, max=1.5757
 - After clipping (round 4): mu=-0.0121, std=0.5249, min=-1.5883, max=1.5641
 - After clipping (round 5): mu=-0.0121, std=0.5248, min=-1.5868, max=1.5627
 - Random Projection: mu=0.0000, std=0.0235
[Layer 11]
 - Before clipping: mu=-0.0338, std=0.9529, min=-29.2032, max=7.0608
 - After clipping (round 1): mu=-0.0127, std=0.5484, min=-2.8925, max=2.8248
 - After clipping (round 2): mu=-0.0110, std=0.5182, min=-1.6578, max=1.6325
 - After clipping (round 3): mu=-0.0108, std=0.5145, min=-1.5657, max=1.5436
 - After clipping (round 4): mu=-0.0108, std=0.5140, min=-1.5543, max=1.5327
 - After clipping (round 5): mu=-0.0108, std=0.5140, min=-1.5529, max=1.5313
 - Random Projection: mu=0.0000, std=0.0230
[Layer 12]
 - Before clipping: mu=-0.0435, std=0.9696, min=-29.9015, max=6.9187
 - After clipping (round 1): mu=-0.0222, std=0.5565, min=-2.9524, max=2.8653
 - After clipping (round 2): mu=-0.0206, std=0.5263, min=-1.6917, max=1.6473
 - After clipping (round 3): mu=-0.0203, std=0.5226, min=-1.5995, max=1.5584
 - After clipping (round 4): mu=-0.0203, std=0.5221, min=-1.5880, max=1.5473
 - After clipping (round 5): mu=-0.0203, std=0.5220, min=-1.5865, max=1.5459
 - Random Projection: mu=0.0000, std=0.0233
[Layer 13]
 - Before clipping: mu=-0.0439, std=0.9760, min=-30.1183, max=6.3226
 - After clipping (round 1): mu=-0.0230, std=0.5740, min=-2.9720, max=2.8843
 - After clipping (round 2): mu=-0.0220, std=0.5497, min=-1.7450, max=1.6990
 - After clipping (round 3): mu=-0.0218, std=0.5471, min=-1.6712, max=1.6272
 - After clipping (round 4): mu=-0.0218, std=0.5468, min=-1.6631, max=1.6194
 - After clipping (round 5): mu=-0.0218, std=0.5467, min=-1.6622, max=1.6185
 - Random Projection: mu=0.0000, std=0.0245
[Layer 14]
 - Before clipping: mu=-0.0427, std=0.9820, min=-30.5245, max=5.3840
 - After clipping (round 1): mu=-0.0218, std=0.5759, min=-2.9886, max=2.9032
 - After clipping (round 2): mu=-0.0213, std=0.5554, min=-1.7495, max=1.7060
 - After clipping (round 3): mu=-0.0212, std=0.5534, min=-1.6876, max=1.6450
 - After clipping (round 4): mu=-0.0212, std=0.5532, min=-1.6814, max=1.6390
 - After clipping (round 5): mu=-0.0212, std=0.5532, min=-1.6808, max=1.6384
 - Random Projection: mu=0.0000, std=0.0247
[Layer 15]
 - Before clipping: mu=-0.0419, std=0.9944, min=-28.0877, max=5.6948
 - After clipping (round 1): mu=-0.0158, std=0.5801, min=-3.0251, max=2.9412
 - After clipping (round 2): mu=-0.0144, std=0.5566, min=-1.7562, max=1.7246
 - After clipping (round 3): mu=-0.0143, std=0.5542, min=-1.6840, max=1.6553
 - After clipping (round 4): mu=-0.0143, std=0.5540, min=-1.6770, max=1.6484
 - After clipping (round 5): mu=-0.0143, std=0.5540, min=-1.6763, max=1.6477
 - Random Projection: mu=0.0000, std=0.0248
[Layer 16]
 - Before clipping: mu=-0.0329, std=0.9993, min=-31.5339, max=5.9416
 - After clipping (round 1): mu=-0.0043, std=0.5780, min=-3.0308, max=2.9649
 - After clipping (round 2): mu=-0.0030, std=0.5548, min=-1.7383, max=1.7297
 - After clipping (round 3): mu=-0.0029, std=0.5525, min=-1.6673, max=1.6613
 - After clipping (round 4): mu=-0.0029, std=0.5523, min=-1.6606, max=1.6547
 - After clipping (round 5): mu=-0.0029, std=0.5523, min=-1.6599, max=1.6540
 - Random Projection: mu=0.0000, std=0.0247
[Layer 17]
 - Before clipping: mu=-0.0315, std=0.9748, min=-30.3689, max=5.9348
 - After clipping (round 1): mu=-0.0035, std=0.5661, min=-2.9558, max=2.8928
 - After clipping (round 2): mu=-0.0027, std=0.5433, min=-1.7019, max=1.6949
 - After clipping (round 3): mu=-0.0027, std=0.5411, min=-1.6326, max=1.6272
 - After clipping (round 4): mu=-0.0027, std=0.5409, min=-1.6261, max=1.6208
 - After clipping (round 5): mu=-0.0027, std=0.5409, min=-1.6254, max=1.6201
 - Random Projection: mu=0.0000, std=0.0242
[Layer 18]
 - Before clipping: mu=-0.0306, std=0.9728, min=-30.4460, max=5.7158
 - After clipping (round 1): mu=-0.0035, std=0.5706, min=-2.9491, max=2.8879
 - After clipping (round 2): mu=-0.0032, std=0.5475, min=-1.7154, max=1.7084
 - After clipping (round 3): mu=-0.0033, std=0.5453, min=-1.6457, max=1.6392
 - After clipping (round 4): mu=-0.0033, std=0.5450, min=-1.6391, max=1.6326
 - After clipping (round 5): mu=-0.0033, std=0.5450, min=-1.6384, max=1.6319
 - Random Projection: mu=0.0000, std=0.0244
[Layer 19]
 - Before clipping: mu=-0.0296, std=0.9596, min=-29.4978, max=5.5743
 - After clipping (round 1): mu=-0.0035, std=0.5619, min=-2.9085, max=2.8493
 - After clipping (round 2): mu=-0.0034, std=0.5383, min=-1.6890, max=1.6821
 - After clipping (round 3): mu=-0.0034, std=0.5361, min=-1.6183, max=1.6116
 - After clipping (round 4): mu=-0.0034, std=0.5359, min=-1.6118, max=1.6050
 - After clipping (round 5): mu=-0.0034, std=0.5359, min=-1.6112, max=1.6043
 - Random Projection: mu=0.0000, std=0.0240
[Layer 20]
 - Before clipping: mu=-0.0286, std=0.9445, min=-28.9151, max=5.3482
 - After clipping (round 1): mu=-0.0038, std=0.5569, min=-2.8621, max=2.8049
 - After clipping (round 2): mu=-0.0040, std=0.5328, min=-1.6745, max=1.6669
 - After clipping (round 3): mu=-0.0041, std=0.5306, min=-1.6025, max=1.5944
 - After clipping (round 4): mu=-0.0041, std=0.5304, min=-1.5958, max=1.5877
 - After clipping (round 5): mu=-0.0041, std=0.5303, min=-1.5952, max=1.5870
 - Random Projection: mu=0.0000, std=0.0237
[Layer 21]
 - Before clipping: mu=-0.0332, std=0.9888, min=-31.2380, max=5.3228
 - After clipping (round 1): mu=-0.0074, std=0.5549, min=-2.9997, max=2.9334
 - After clipping (round 2): mu=-0.0076, std=0.5275, min=-1.6719, max=1.6572
 - After clipping (round 3): mu=-0.0077, std=0.5250, min=-1.5901, max=1.5749
 - After clipping (round 4): mu=-0.0077, std=0.5247, min=-1.5826, max=1.5672
 - After clipping (round 5): mu=-0.0077, std=0.5247, min=-1.5818, max=1.5664
 - Random Projection: mu=0.0000, std=0.0235
[Layer 22]
 - Before clipping: mu=-0.0414, std=1.0063, min=-32.0877, max=5.2720
 - After clipping (round 1): mu=-0.0151, std=0.5266, min=-3.0604, max=2.9776
 - After clipping (round 2): mu=-0.0151, std=0.4974, min=-1.5948, max=1.5647
 - After clipping (round 3): mu=-0.0152, std=0.4947, min=-1.5073, max=1.4770
 - After clipping (round 4): mu=-0.0152, std=0.4944, min=-1.4994, max=1.4689
 - After clipping (round 5): mu=-0.0152, std=0.4944, min=-1.4986, max=1.4681
 - Random Projection: mu=0.0000, std=0.0221
[Layer 23]
 - Before clipping: mu=-0.0311, std=1.0097, min=-32.3815, max=5.1805
 - After clipping (round 1): mu=-0.0050, std=0.5110, min=-3.0602, max=2.9981
 - After clipping (round 2): mu=-0.0049, std=0.4809, min=-1.5380, max=1.5280
 - After clipping (round 3): mu=-0.0050, std=0.4779, min=-1.4475, max=1.4377
 - After clipping (round 4): mu=-0.0050, std=0.4776, min=-1.4387, max=1.4287
 - After clipping (round 5): mu=-0.0050, std=0.4776, min=-1.4378, max=1.4278
 - Random Projection: mu=0.0000, std=0.0214
Random projections initialized.
[# API Calls 50] loss: 0.5474. Current perf: 0.6875. Best perf so far: 0.6875
[# API Calls 100] loss: 0.5322. Current perf: 0.6562. Best perf so far: 0.7188
********* Evaluated on dev set *********
Dev loss: 0.5085. Dev perf: 0.75. Best dev perf: 0.75
********* Done *********
[# API Calls 150] loss: 0.5076. Current perf: 0.75. Best perf so far: 0.75
[# API Calls 200] loss: 0.4898. Current perf: 0.75. Best perf so far: 0.7812
********* Evaluated on dev set *********
Dev loss: 0.5163. Dev perf: 0.75. Best dev perf: 0.75
********* Done *********
[# API Calls 250] loss: 0.4785. Current perf: 0.75. Best perf so far: 0.7812
[# API Calls 300] loss: 0.4727. Current perf: 0.7812. Best perf so far: 0.7812
********* Evaluated on dev set *********
Dev loss: 0.5211. Dev perf: 0.7812. Best dev perf: 0.7812
********* Done *********
[# API Calls 350] loss: 0.4633. Current perf: 0.7812. Best perf so far: 0.7812
[# API Calls 400] loss: 0.4601. Current perf: 0.75. Best perf so far: 0.7812
********* Evaluated on dev set *********
Dev loss: 0.5128. Dev perf: 0.75. Best dev perf: 0.7812
********* Done *********
[# API Calls 450] loss: 0.4556. Current perf: 0.7812. Best perf so far: 0.7812
[# API Calls 500] loss: 0.4584. Current perf: 0.7812. Best perf so far: 0.7812
********* Evaluated on dev set *********
Dev loss: 0.5075. Dev perf: 0.75. Best dev perf: 0.7812
********* Done *********
[# API Calls 550] loss: 0.4557. Current perf: 0.7188. Best perf so far: 0.8125
[# API Calls 600] loss: 0.4468. Current perf: 0.7188. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.4952. Dev perf: 0.75. Best dev perf: 0.7812
********* Done *********
[# API Calls 650] loss: 0.4448. Current perf: 0.7812. Best perf so far: 0.8125
[# API Calls 700] loss: 0.4271. Current perf: 0.7812. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.4653. Dev perf: 0.75. Best dev perf: 0.7812
********* Done *********
[# API Calls 750] loss: 0.4187. Current perf: 0.75. Best perf so far: 0.8125
[# API Calls 800] loss: 0.4179. Current perf: 0.75. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.4491. Dev perf: 0.7812. Best dev perf: 0.7812
********* Done *********
[# API Calls 850] loss: 0.4115. Current perf: 0.7812. Best perf so far: 0.8125
[# API Calls 900] loss: 0.4101. Current perf: 0.8125. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.451. Dev perf: 0.7812. Best dev perf: 0.7812
********* Done *********
[# API Calls 950] loss: 0.4082. Current perf: 0.7812. Best perf so far: 0.8125
[# API Calls 1000] loss: 0.4095. Current perf: 0.7812. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.4456. Dev perf: 0.75. Best dev perf: 0.7812
********* Done *********
[# API Calls 1050] loss: 0.4145. Current perf: 0.75. Best perf so far: 0.8125
[# API Calls 1100] loss: 0.4193. Current perf: 0.7812. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.4601. Dev perf: 0.7188. Best dev perf: 0.7812
********* Done *********
[# API Calls 1150] loss: 0.3784. Current perf: 0.7812. Best perf so far: 0.8125
[# API Calls 1200] loss: 0.3818. Current perf: 0.8125. Best perf so far: 0.8125
********* Evaluated on dev set *********
Dev loss: 0.4051. Dev perf: 0.7812. Best dev perf: 0.7812
********* Done *********
[# API Calls 1250] loss: 0.3744. Current perf: 0.8125. Best perf so far: 0.8438
[# API Calls 1300] loss: 0.3774. Current perf: 0.8125. Best perf so far: 0.8438
********* Evaluated on dev set *********
Dev loss: 0.4177. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1350] loss: 0.3681. Current perf: 0.8125. Best perf so far: 0.8438
[# API Calls 1400] loss: 0.3659. Current perf: 0.8125. Best perf so far: 0.8438
********* Evaluated on dev set *********
Dev loss: 0.4133. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1450] loss: 0.3761. Current perf: 0.8438. Best perf so far: 0.8438
[# API Calls 1500] loss: 0.3901. Current perf: 0.8438. Best perf so far: 0.8438
********* Evaluated on dev set *********
Dev loss: 0.45. Dev perf: 0.75. Best dev perf: 0.8125
********* Done *********
[# API Calls 1550] loss: 0.4025. Current perf: 0.8125. Best perf so far: 0.8438
[# API Calls 1600] loss: 0.3766. Current perf: 0.8438. Best perf so far: 0.875
********* Evaluated on dev set *********
Dev loss: 0.4771. Dev perf: 0.75. Best dev perf: 0.8125
********* Done *********
[# API Calls 1650] loss: 0.362. Current perf: 0.8438. Best perf so far: 0.875
[# API Calls 1700] loss: 0.355. Current perf: 0.8438. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4456. Dev perf: 0.8125. Best dev perf: 0.8125
********* Done *********
[# API Calls 1750] loss: 0.3383. Current perf: 0.8438. Best perf so far: 0.9062
[# API Calls 1800] loss: 0.3288. Current perf: 0.875. Best perf so far: 0.9062
********* Evaluated on dev set *********
Dev loss: 0.4231. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 1850] loss: 0.3186. Current perf: 0.875. Best perf so far: 0.9375
[# API Calls 1900] loss: 0.3192. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4069. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 1950] loss: 0.2968. Current perf: 0.875. Best perf so far: 0.9375
[# API Calls 2000] loss: 0.3366. Current perf: 0.8438. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4451. Dev perf: 0.7812. Best dev perf: 0.8438
********* Done *********
[# API Calls 2050] loss: 0.296. Current perf: 0.8125. Best perf so far: 0.9375
[# API Calls 2100] loss: 0.2997. Current perf: 0.8125. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3897. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 2150] loss: 0.2886. Current perf: 0.8125. Best perf so far: 0.9375
[# API Calls 2200] loss: 0.2803. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3805. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 2250] loss: 0.2609. Current perf: 0.875. Best perf so far: 0.9375
[# API Calls 2300] loss: 0.2553. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.3852. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 2350] loss: 0.2533. Current perf: 0.875. Best perf so far: 0.9375
[# API Calls 2400] loss: 0.2464. Current perf: 0.875. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4152. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 2450] loss: 0.2657. Current perf: 0.8438. Best perf so far: 0.9375
[# API Calls 2500] loss: 0.2497. Current perf: 0.9062. Best perf so far: 0.9375
********* Evaluated on dev set *********
Dev loss: 0.4272. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 2550] loss: 0.251. Current perf: 0.9062. Best perf so far: 0.9375
[# API Calls 2600] loss: 0.2482. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.4424. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 2650] loss: 0.2281. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 2700] loss: 0.2326. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.4407. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 2750] loss: 0.2239. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 2800] loss: 0.2138. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.421. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 2850] loss: 0.2082. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 2900] loss: 0.2082. Current perf: 0.9375. Best perf so far: 0.9688
********* Evaluated on dev set *********
Dev loss: 0.423. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 2950] loss: 0.2064. Current perf: 0.9375. Best perf so far: 0.9688
[# API Calls 3000] loss: 0.203. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3811. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 3050] loss: 0.1792. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3100] loss: 0.1815. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3518. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 3150] loss: 0.1657. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3200] loss: 0.1429. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3543. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3250] loss: 0.1442. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3300] loss: 0.1366. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3706. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 3350] loss: 0.1303. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3400] loss: 0.1298. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3848. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3450] loss: 0.1986. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 3500] loss: 0.1861. Current perf: 0.9375. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4449. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 3550] loss: 0.1629. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3600] loss: 0.1587. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4027. Dev perf: 0.75. Best dev perf: 0.8438
********* Done *********
[# API Calls 3650] loss: 0.1381. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3700] loss: 0.1339. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4217. Dev perf: 0.8125. Best dev perf: 0.8438
********* Done *********
[# API Calls 3750] loss: 0.1301. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 3800] loss: 0.1202. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.3946. Dev perf: 0.8438. Best dev perf: 0.8438
********* Done *********
[# API Calls 3850] loss: 0.1579. Current perf: 0.9688. Best perf so far: 1.0
[# API Calls 3900] loss: 0.2253. Current perf: 0.9062. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4229. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 3950] loss: 0.1037. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4000] loss: 0.103. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4798. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 4050] loss: 0.0945. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4100] loss: 0.0984. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4932. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 4150] loss: 0.0911. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4200] loss: 0.0882. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4897. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 4250] loss: 0.0816. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4300] loss: 0.0831. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5006. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 4350] loss: 0.0955. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4400] loss: 0.1596. Current perf: 0.9375. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4522. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 4450] loss: 0.16. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 4500] loss: 0.1171. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4738. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 4550] loss: 0.0771. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4600] loss: 0.0707. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4383. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 4650] loss: 0.0664. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4700] loss: 0.0633. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4392. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 4750] loss: 0.0582. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4800] loss: 0.0557. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4683. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 4850] loss: 0.0633. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 4900] loss: 0.0864. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4393. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 4950] loss: 0.0532. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5000] loss: 0.0462. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4188. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5050] loss: 0.0425. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5100] loss: 0.0438. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4148. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5150] loss: 0.0389. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5200] loss: 0.0378. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4753. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5250] loss: 0.0353. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5300] loss: 0.0549. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4956. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5350] loss: 0.0374. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5400] loss: 0.0878. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.467. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5450] loss: 0.035. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5500] loss: 0.0348. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4001. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 5550] loss: 0.0327. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5600] loss: 0.03. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4186. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 5650] loss: 0.0267. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5700] loss: 0.0267. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.4438. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 5750] loss: 0.0258. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5800] loss: 0.0862. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.487. Dev perf: 0.875. Best dev perf: 0.875
********* Done *********
[# API Calls 5850] loss: 0.0242. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 5900] loss: 0.0282. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5457. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 5950] loss: 0.0239. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6000] loss: 0.0255. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6474. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 6050] loss: 0.0235. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6100] loss: 0.0211. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6594. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 6150] loss: 0.0186. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6200] loss: 0.0189. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6596. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 6250] loss: 0.017. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6300] loss: 0.0182. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6501. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 6350] loss: 0.1402. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 6400] loss: 0.0201. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5962. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 6450] loss: 0.015. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6500] loss: 0.0187. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6685. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 6550] loss: 0.0147. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6600] loss: 0.0127. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5279. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 6650] loss: 0.0116. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6700] loss: 0.0105. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5805. Dev perf: 0.8438. Best dev perf: 0.875
********* Done *********
[# API Calls 6750] loss: 0.0097. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 6800] loss: 0.0102. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5393. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 6850] loss: 0.1663. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 6900] loss: 0.0122. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.5877. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 6950] loss: 0.0106. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7000] loss: 0.0104. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7495. Dev perf: 0.7188. Best dev perf: 0.875
********* Done *********
[# API Calls 7050] loss: 0.01. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7100] loss: 0.0089. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7756. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 7150] loss: 0.0088. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7200] loss: 0.008. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.719. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 7250] loss: 0.1025. Current perf: 0.9375. Best perf so far: 1.0
[# API Calls 7300] loss: 0.0658. Current perf: 0.9688. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.8529. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 7350] loss: 0.0098. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7400] loss: 0.0074. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6893. Dev perf: 0.75. Best dev perf: 0.875
********* Done *********
[# API Calls 7450] loss: 0.0068. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7500] loss: 0.0071. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.7685. Dev perf: 0.7812. Best dev perf: 0.875
********* Done *********
[# API Calls 7550] loss: 0.0057. Current perf: 1.0. Best perf so far: 1.0
[# API Calls 7600] loss: 0.0057. Current perf: 1.0. Best perf so far: 1.0
********* Evaluated on dev set *********
Dev loss: 0.6647. Dev perf: 0.8125. Best dev perf: 0.875
********* Done *********
[# API Calls 7650] loss: 0.0044. Current perf: 1.0. Best perf so far: 1.0
Done. Elapsed time: 29.315186111132302 (mins)
